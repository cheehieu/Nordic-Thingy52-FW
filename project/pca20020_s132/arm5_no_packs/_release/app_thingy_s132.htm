<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\_release\app_thingy_s132.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\_release\app_thingy_s132.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060300: Last Updated: Sun Jul 23 06:58:44 2017
<BR><P>
<H3>Maximum Stack Usage =        984 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; configure_gpio_for_sleep &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[4]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">NMI_Handler</a><BR>
 <LI><a href="#[5]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">HardFault_Handler</a><BR>
 <LI><a href="#[6]">MemoryManagement_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">MemoryManagement_Handler</a><BR>
 <LI><a href="#[7]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">BusFault_Handler</a><BR>
 <LI><a href="#[8]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">UsageFault_Handler</a><BR>
 <LI><a href="#[9]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SVC_Handler</a><BR>
 <LI><a href="#[a]">DebugMonitor_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">DebugMonitor_Handler</a><BR>
 <LI><a href="#[b]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">PendSV_Handler</a><BR>
 <LI><a href="#[c]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">SysTick_Handler</a><BR>
 <LI><a href="#[1c]">CCM_AAR_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">CCM_AAR_IRQHandler</a><BR>
 <LI><a href="#[23e]">m_ioext_osc_status_change</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15d]">app_error_handler_bare</a><BR>
 <LI><a href="#[2a2]">queue_process</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2a2]">queue_process</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[7]">BusFault_Handler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[1c]">CCM_AAR_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[20]">COMP_LPCOMP_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[a]">DebugMonitor_Handler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[1b]">ECB_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[31]">FPU_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[13]">GPIOTE_IRQHandler</a> from nrf_drv_gpiote.o(i.GPIOTE_IRQHandler) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[5]">HardFault_Handler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[30]">I2S_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[2b]">MWU_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[6]">MemoryManagement_Handler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[12]">NFCT_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[4]">NMI_Handler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[2a]">PDM_IRQHandler</a> from nrf_drv_pdm.o(i.PDM_IRQHandler) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[d]">POWER_CLOCK_IRQHandler</a> from nrf_drv_clock.o(i.POWER_CLOCK_IRQHandler) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[29]">PWM0_IRQHandler</a> from nrf_drv_pwm.o(i.PWM0_IRQHandler) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[2c]">PWM1_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[2d]">PWM2_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[b]">PendSV_Handler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[1f]">QDEC_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[e]">RADIO_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[1a]">RNG_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[18]">RTC0_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[1e]">RTC1_IRQHandler</a> from app_timer.o(i.RTC1_IRQHandler) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[2f]">RTC2_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[3]">Reset_Handler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[14]">SAADC_IRQHandler</a> from nrf_drv_saadc.o(i.SAADC_IRQHandler) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[10]">SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0_IRQHandler</a> from nrf_drv_twi.o(i.SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0_IRQHandler) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[11]">SPIM1_SPIS1_TWIM1_TWIS1_SPI1_TWI1_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[2e]">SPIM2_SPIS2_SPI2_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[9]">SVC_Handler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[21]">SWI0_EGU0_IRQHandler</a> from app_timer.o(i.SWI0_EGU0_IRQHandler) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[22]">SWI1_EGU1_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[23]">SWI2_EGU2_IRQHandler</a> from softdevice_handler.o(i.SWI2_EGU2_IRQHandler) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[24]">SWI3_EGU3_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[25]">SWI4_EGU4_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[26]">SWI5_EGU5_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[c]">SysTick_Handler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[33]">SystemInit</a> from system_nrf52.o(i.SystemInit) referenced from arm_startup_nrf52.o(.text)
 <LI><a href="#[19]">TEMP_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[15]">TIMER0_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[16]">TIMER1_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[17]">TIMER2_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[27]">TIMER3_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[28]">TIMER4_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[f]">UARTE0_UART0_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[8]">UsageFault_Handler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[1d]">WDT_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[34]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from arm_startup_nrf52.o(.text)
 <LI><a href="#[39]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0vsprintf)
 <LI><a href="#[3d]">app_timer_evt_get</a> from app_timer_appsh.o(i.app_timer_evt_get) referenced from app_timer_appsh.o(i.app_timer_evt_schedule)
 <LI><a href="#[83]">app_timer_evt_schedule</a> from app_timer_appsh.o(i.app_timer_evt_schedule) referenced from main.o(i.main)
 <LI><a href="#[5f]">app_timer_periodic_handler</a> from m_batt_meas.o(i.app_timer_periodic_handler) referenced from m_batt_meas.o(i.m_batt_meas_enable)
 <LI><a href="#[88]">batt_event_handler_adc</a> from m_batt_meas.o(i.batt_event_handler_adc) referenced from m_batt_meas.o(i.saadc_event_handler_interrupt)
 <LI><a href="#[52]">batt_event_handler_charge</a> from m_batt_meas.o(i.batt_event_handler_charge) referenced from m_batt_meas.o(i.gpiote_evt_handler)
 <LI><a href="#[60]">battery_on_ble_evt</a> from m_batt_meas.o(i.battery_on_ble_evt) referenced from m_batt_meas.o(i.m_batt_meas_init)
 <LI><a href="#[61]">battery_service_init</a> from m_batt_meas.o(i.battery_service_init) referenced from m_batt_meas.o(i.m_batt_meas_init)
 <LI><a href="#[6c]">beacon_advertiser_error_handler</a> from m_ble.o(i.beacon_advertiser_error_handler) referenced from m_ble.o(i.m_ble_init)
 <LI><a href="#[6c]">beacon_advertiser_error_handler</a> from m_ble.o(i.beacon_advertiser_error_handler) referenced from m_ble.o(i.tcs_evt_handler)
 <LI><a href="#[3f]">ble_bas_evt_handler</a> from m_batt_meas.o(i.ble_bas_evt_handler) referenced from m_batt_meas.o(i.battery_service_init)
 <LI><a href="#[68]">ble_dfu_evt_handler</a> from m_ble.o(i.ble_dfu_evt_handler) referenced from m_ble.o(i.m_ble_init)
 <LI><a href="#[65]">ble_evt_dispatch</a> from m_ble.o(i.ble_evt_dispatch) referenced from m_ble.o(i.m_ble_init)
 <LI><a href="#[51]">ble_tes_evt_handler</a> from m_environment.o(i.ble_tes_evt_handler) referenced from m_environment.o(i.environment_service_init)
 <LI><a href="#[86]">ble_tms_evt_handler</a> from m_motion.o(i.ble_tms_evt_handler) referenced from m_motion.o(i.motion_service_init)
 <LI><a href="#[8b]">ble_tss_evt_handler</a> from m_sound.o(i.ble_tss_evt_handler) referenced from m_sound.o(i.sound_service_init)
 <LI><a href="#[8c]">ble_uis_led_write_handler</a> from m_ui.o(i.ble_uis_led_write_handler) referenced from m_ui.o(i.thingy_ui_service_init)
 <LI><a href="#[8d]">ble_uis_pin_write_handler</a> from m_ui.o(i.ble_uis_pin_write_handler) referenced from m_ui.o(i.thingy_ui_service_init)
 <LI><a href="#[8f]">button_evt_handler</a> from m_ui.o(i.button_evt_handler) referenced from m_ui.o(.constdata)
 <LI><a href="#[76]">color_timeout_handler</a> from m_environment.o(i.color_timeout_handler) referenced from m_environment.o(i.m_environment_init)
 <LI><a href="#[4c]">compass_timeout_handler</a> from drv_motion.o(i.compass_timeout_handler) referenced from drv_motion.o(i.drv_motion_init)
 <LI><a href="#[6b]">conn_params_error_handler</a> from m_ble.o(i.conn_params_error_handler) referenced from m_ble.o(i.m_ble_init)
 <LI><a href="#[3c]">detection_delay_timeout_handler</a> from app_button.o(i.detection_delay_timeout_handler) referenced from app_button.o(i.app_button_init)
 <LI><a href="#[87]">dfu_settings_write_callback</a> from nrf_dfu_settings.o(i.dfu_settings_write_callback) referenced from nrf_dfu_settings.o(i.nrf_dfu_settings_init)
 <LI><a href="#[87]">dfu_settings_write_callback</a> from nrf_dfu_settings.o(i.dfu_settings_write_callback) referenced from nrf_dfu_settings.o(i.nrf_dfu_settings_write)
 <LI><a href="#[42]">drv_audio_pdm_event_handler</a> from drv_audio_pdm.o(i.drv_audio_pdm_event_handler) referenced from drv_audio_pdm.o(i.drv_audio_init)
 <LI><a href="#[72]">drv_color_data_handler</a> from m_environment.o(i.drv_color_data_handler) referenced from m_environment.o(i.m_environment_init)
 <LI><a href="#[71]">drv_gas_data_handler</a> from m_environment.o(i.drv_gas_data_handler) referenced from m_environment.o(i.m_environment_init)
 <LI><a href="#[8e]">drv_humidity_evt_handler</a> from m_environment.o(i.drv_humidity_evt_handler) referenced from m_environment.o(.constdata)
 <LI><a href="#[7f]">drv_mic_data_handler</a> from m_sound.o(i.drv_mic_data_handler) referenced from m_sound.o(i.m_sound_init)
 <LI><a href="#[7b]">drv_motion_evt_handler</a> from m_motion.o(i.drv_motion_evt_handler) referenced from m_motion.o(i.m_motion_init)
 <LI><a href="#[70]">drv_pressure_evt_handler</a> from m_environment.o(i.drv_pressure_evt_handler) referenced from m_environment.o(i.m_environment_init)
 <LI><a href="#[7e]">drv_speaker_evt_handler</a> from m_sound.o(i.drv_speaker_evt_handler) referenced from m_sound.o(i.m_sound_init)
 <LI><a href="#[6d]">env_fds_evt_handler</a> from m_environment_flash.o(i.env_fds_evt_handler) referenced from m_environment_flash.o(i.m_env_flash_init)
 <LI><a href="#[6e]">environment_on_ble_evt</a> from m_environment.o(i.environment_on_ble_evt) referenced from m_environment.o(i.m_environment_init)
 <LI><a href="#[6f]">environment_service_init</a> from m_environment.o(i.environment_service_init) referenced from m_environment.o(i.m_environment_init)
 <LI><a href="#[41]">flash_callback</a> from ble_dfu.o(i.flash_callback) referenced from ble_dfu.o(i.ble_dfu_on_ble_evt)
 <LI><a href="#[1]">fs_event_handler</a> from fds.o(i.fs_event_handler) referenced 2 times from fds.o(fs_data)
 <LI><a href="#[2]">fs_evt_handler</a> from nrf_dfu_flash_buttonless.o(i.fs_evt_handler) referenced 2 times from nrf_dfu_flash_buttonless.o(fs_data)
 <LI><a href="#[77]">gas_calib_timeout_handler</a> from m_environment.o(i.gas_calib_timeout_handler) referenced from m_environment.o(i.m_environment_init)
 <LI><a href="#[3b]">gpiote_event_handler</a> from app_button.o(i.gpiote_event_handler) referenced from app_button.o(i.app_button_init)
 <LI><a href="#[43]">gpiote_evt_handler</a> from drv_color.o(i.gpiote_evt_handler) referenced from drv_color.o(i.drv_color_start)
 <LI><a href="#[45]">gpiote_evt_handler</a> from drv_gas_sensor.o(i.gpiote_evt_handler) referenced from drv_gas_sensor.o(i.drv_gas_sensor_start)
 <LI><a href="#[46]">gpiote_evt_handler</a> from drv_humidity.o(i.gpiote_evt_handler) referenced from drv_humidity.o(i.drv_humidity_enable)
 <LI><a href="#[4e]">gpiote_evt_handler</a> from drv_mpu9250.o(i.gpiote_evt_handler) referenced from drv_mpu9250.o(i.drv_mpu9250_enable)
 <LI><a href="#[4f]">gpiote_evt_handler</a> from drv_pressure.o(i.gpiote_evt_handler) referenced from drv_pressure.o(i.drv_pressure_enable)
 <LI><a href="#[62]">gpiote_evt_handler</a> from m_batt_meas.o(i.gpiote_evt_handler) referenced from m_batt_meas.o(i.m_batt_meas_init)
 <LI><a href="#[53]">gpiote_evt_sceduled</a> from drv_gas_sensor.o(i.gpiote_evt_sceduled) referenced 5 times from drv_gas_sensor.o(i.gpiote_evt_handler)
 <LI><a href="#[75]">humidity_timeout_handler</a> from m_environment.o(i.humidity_timeout_handler) referenced from m_environment.o(i.m_environment_init)
 <LI><a href="#[b4]">inv_auto_calibrate</a> from accel_auto_cal.o(.text) referenced 3 times from accel_auto_cal.o(.text)
 <LI><a href="#[5b]">inv_db_load_func</a> from data_builder.o(i.inv_db_load_func) referenced from data_builder.o(i.inv_init_data_builder)
 <LI><a href="#[5a]">inv_db_save_func</a> from data_builder.o(i.inv_db_save_func) referenced from data_builder.o(i.inv_init_data_builder)
 <LI><a href="#[5c]">inv_generate_eMPL_outputs</a> from empl_outputs.o(i.inv_generate_eMPL_outputs) referenced from empl_outputs.o(i.inv_start_eMPL_outputs)
 <LI><a href="#[ff]">inv_generate_fast_nomot</a> from fast_no_motion.o(.text) referenced 2 times from fast_no_motion.o(.text)
 <LI><a href="#[38]">inv_generate_quaternion</a> from quaternion_supervisor.o(.text) referenced from quaternion_supervisor.o(.text)
 <LI><a href="#[5d]">inv_generate_results</a> from results_holder.o(i.inv_generate_results) referenced from results_holder.o(i.inv_start_results_holder)
 <LI><a href="#[e9]">inv_generate_vector_compass_cal</a> from compass_vec_cal.o(.text) referenced 3 times from compass_vec_cal.o(.text)
 <LI><a href="#[35]">inv_gtc_data_cb</a> from gyro_tc.o(.text) referenced from gyro_tc.o(.text)
 <LI><a href="#[37]">inv_gtc_load</a> from gyro_tc.o(.text) referenced from gyro_tc.o(.text)
 <LI><a href="#[36]">inv_gtc_store</a> from gyro_tc.o(.text) referenced from gyro_tc.o(.text)
 <LI><a href="#[136]">inv_magnetic_disturbance_process</a> from mag_disturb.o(.text) referenced 4 times from mag_disturb.o(.text)
 <LI><a href="#[116]">inv_process_9x_sensor_fusion_cb</a> from fusion_9axis.o(.text) referenced 2 times from fusion_9axis.o(.text)
 <LI><a href="#[118]">inv_start_9x_sensor_fusion</a> from fusion_9axis.o(.text) referenced 2 times from fusion_9axis.o(.text)
 <LI><a href="#[58]">inv_start_eMPL_outputs</a> from empl_outputs.o(i.inv_start_eMPL_outputs) referenced from empl_outputs.o(i.inv_enable_eMPL_outputs)
 <LI><a href="#[107]">inv_start_fast_nomot</a> from fast_no_motion.o(.text) referenced 2 times from fast_no_motion.o(.text)
 <LI><a href="#[123]">inv_start_gyro_tc</a> from gyro_tc.o(.text) referenced 2 times from gyro_tc.o(.text)
 <LI><a href="#[c2]">inv_start_in_use_auto_calibration</a> from accel_auto_cal.o(.text) referenced 2 times from accel_auto_cal.o(.text)
 <LI><a href="#[138]">inv_start_magnetic_disturbance</a> from mag_disturb.o(.text) referenced from mag_disturb.o(.text)
 <LI><a href="#[14b]">inv_start_quaternion</a> from quaternion_supervisor.o(.text) referenced 2 times from quaternion_supervisor.o(.text)
 <LI><a href="#[59]">inv_start_results_holder</a> from results_holder.o(i.inv_start_results_holder) referenced from results_holder.o(i.inv_enable_results_holder)
 <LI><a href="#[eb]">inv_start_vector_compass_cal</a> from compass_vec_cal.o(.text) referenced 2 times from compass_vec_cal.o(.text)
 <LI><a href="#[47]">m_audio_buffer_handler</a> from drv_mic.o(i.m_audio_buffer_handler) referenced from drv_mic.o(i.drv_mic_init)
 <LI><a href="#[5e]">m_audio_process</a> from drv_mic.o(i.m_audio_process) referenced from drv_mic.o(i.m_audio_buffer_handler)
 <LI><a href="#[84]">m_batt_meas_handler</a> from main.o(i.m_batt_meas_handler) referenced from main.o(i.main)
 <LI><a href="#[44]">m_light_timer_handler</a> from drv_ext_light.o(i.m_light_timer_handler) referenced from drv_ext_light.o(i.drv_ext_light_init)
 <LI><a href="#[3a]">m_timeslot_callback</a> from advertiser_beacon_timeslot.o(i.m_timeslot_callback) referenced from advertiser_beacon_timeslot.o(i.app_beacon_start)
 <LI><a href="#[32]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[78]">motion_fds_evt_handler</a> from m_motion_flash.o(i.motion_fds_evt_handler) referenced from m_motion_flash.o(i.m_motion_flash_init)
 <LI><a href="#[79]">motion_on_ble_evt</a> from m_motion.o(i.motion_on_ble_evt) referenced from m_motion.o(i.m_motion_init)
 <LI><a href="#[7a]">motion_service_init</a> from m_motion.o(i.motion_service_init) referenced from m_motion.o(i.m_motion_init)
 <LI><a href="#[48]">mpulib_data_handler_cb</a> from drv_motion.o(i.mpulib_data_handler_cb) referenced from drv_motion.o(i.drv_motion_enable)
 <LI><a href="#[4a]">mpulib_orient_cb</a> from drv_motion.o(i.mpulib_orient_cb) referenced from drv_motion.o(i.drv_motion_enable)
 <LI><a href="#[49]">mpulib_tap_cb</a> from drv_motion.o(i.mpulib_tap_cb) referenced from drv_motion.o(i.drv_motion_enable)
 <LI><a href="#[69]">on_adv_evt</a> from m_ble.o(i.on_adv_evt) referenced from m_ble.o(i.m_ble_init)
 <LI><a href="#[6a]">on_conn_params_evt</a> from m_ble.o(i.on_conn_params_evt) referenced from m_ble.o(i.m_ble_init)
 <LI><a href="#[4d]">pedo_timeout_handler</a> from drv_motion.o(i.pedo_timeout_handler) referenced from drv_motion.o(i.drv_motion_init)
 <LI><a href="#[74]">pressure_timeout_handler</a> from m_environment.o(i.pressure_timeout_handler) referenced from m_environment.o(i.m_environment_init)
 <LI><a href="#[50]">pwm_handler</a> from drv_speaker.o(i.pwm_handler) referenced from drv_speaker.o(i.drv_speaker_init)
 <LI><a href="#[3e]">saadc_event_handler_interrupt</a> from m_batt_meas.o(i.saadc_event_handler_interrupt) referenced from m_batt_meas.o(i.app_timer_periodic_handler)
 <LI><a href="#[3e]">saadc_event_handler_interrupt</a> from m_batt_meas.o(i.saadc_event_handler_interrupt) referenced from m_batt_meas.o(i.m_batt_meas_init)
 <LI><a href="#[89]">softdevice_evt_get</a> from softdevice_handler_appsh.o(i.softdevice_evt_get) referenced from softdevice_handler_appsh.o(i.softdevice_evt_schedule)
 <LI><a href="#[64]">softdevice_evt_schedule</a> from softdevice_handler_appsh.o(i.softdevice_evt_schedule) referenced from m_ble.o(i.m_ble_init)
 <LI><a href="#[8a]">softdevice_fault_handler</a> from softdevice_handler.o(i.softdevice_fault_handler) referenced from softdevice_handler.o(i.softdevice_handler_init)
 <LI><a href="#[7c]">sound_on_ble_evt</a> from m_sound.o(i.sound_on_ble_evt) referenced from m_sound.o(i.m_sound_init)
 <LI><a href="#[7d]">sound_service_init</a> from m_sound.o(i.sound_service_init) referenced from m_sound.o(i.m_sound_init)
 <LI><a href="#[66]">sys_evt_dispatch</a> from m_ble.o(i.sys_evt_dispatch) referenced from m_ble.o(i.m_ble_init)
 <LI><a href="#[63]">tc_fds_evt_handler</a> from m_ble_flash.o(i.tc_fds_evt_handler) referenced from m_ble_flash.o(i.m_ble_flash_init)
 <LI><a href="#[67]">tcs_evt_handler</a> from m_ble.o(i.tcs_evt_handler) referenced from m_ble.o(i.m_ble_init)
 <LI><a href="#[4b]">temp_timeout_handler</a> from drv_motion.o(i.temp_timeout_handler) referenced from drv_motion.o(i.drv_motion_init)
 <LI><a href="#[73]">temperature_timeout_handler</a> from m_environment.o(i.temperature_timeout_handler) referenced from m_environment.o(i.m_environment_init)
 <LI><a href="#[85]">thingy_ble_evt_handler</a> from main.o(i.thingy_ble_evt_handler) referenced from main.o(i.main)
 <LI><a href="#[81]">thingy_ui_on_ble_evt</a> from m_ui.o(i.thingy_ui_on_ble_evt) referenced from m_ui.o(i.m_ui_init)
 <LI><a href="#[82]">thingy_ui_service_init</a> from m_ui.o(i.thingy_ui_service_init) referenced from m_ui.o(i.m_ui_init)
 <LI><a href="#[80]">ui_fds_evt_handler</a> from m_ui_flash.o(i.ui_fds_evt_handler) referenced from m_ui_flash.o(i.m_ui_flash_init)
 <LI><a href="#[40]">update_timeout_handler</a> from ble_conn_params.o(i.update_timeout_handler) referenced from ble_conn_params.o(i.ble_conn_params_init)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[34]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(.text)
</UL>
<P><STRONG><a name="[318]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[90]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[15c]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[319]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[31a]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[31b]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[31c]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[31d]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[3]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>MemoryManagement_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryManagement_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryManagement_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>DebugMonitor_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMonitor_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMonitor_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>CCM_AAR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCM_AAR_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCM_AAR_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>COMP_LPCOMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>ECB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>MWU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>NFCT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>PWM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>QDEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>RADIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>RTC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>RTC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>SPIM1_SPIS1_TWIM1_TWIS1_SPI1_TWI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPIM2_SPIS2_SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>SWI1_EGU1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>SWI3_EGU3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>SWI4_EGU4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>SWI5_EGU5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TEMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIMER4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>UARTE0_UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[c0]"></a>inv_init_accel_maxmin</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, accel_auto_cal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_in_use_auto_calibration
</UL>

<P><STRONG><a name="[be]"></a>inv_record_good_accel_maxmin</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, accel_auto_cal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_auto_calibrate
</UL>

<P><STRONG><a name="[92]"></a>inv_get_current_calibrated_accel</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, accel_auto_cal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = inv_get_current_calibrated_accel &rArr; inv_convert_to_body_with_scale
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_convert_to_body_with_scale
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_add_accel_block_data
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_push
</UL>

<P><STRONG><a name="[b0]"></a>inv_sort_order_4_T</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, accel_auto_cal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_sample_balance
</UL>

<P><STRONG><a name="[a7]"></a>inv_init_check_sample_balance</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, accel_auto_cal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_check_sample_balance_parameter
</UL>

<P><STRONG><a name="[a6]"></a>inv_init_check_sample_balance_parameter</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, accel_auto_cal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = inv_init_check_sample_balance_parameter
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_check_sample_balance
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_vector_compass_cal
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_in_use_auto_calibration
</UL>

<P><STRONG><a name="[a8]"></a>inv_add_accel_block_data</STRONG> (Thumb, 180 bytes, Stack size 56 bytes, accel_auto_cal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = inv_add_accel_block_data &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_current_calibrated_accel
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_auto_calibrate
</UL>

<P><STRONG><a name="[ad]"></a>inv_add_vector_block_data</STRONG> (Thumb, 152 bytes, Stack size 48 bytes, accel_auto_cal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_sensor_type_gravity
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>

<P><STRONG><a name="[af]"></a>inv_check_sample_balance</STRONG> (Thumb, 372 bytes, Stack size 20 bytes, accel_auto_cal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = inv_check_sample_balance
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_sort_order_4_T
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_ignore_compass_data
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_auto_calibrate
</UL>

<P><STRONG><a name="[b4]"></a>inv_auto_calibrate</STRONG> (Thumb, 828 bytes, Stack size 112 bytes, accel_auto_cal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = inv_auto_calibrate &rArr; inv_combine_data_calculate_bias &rArr; inv_compute_bias &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_quaternion
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_linear_accel_float
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q30_mult
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_terms
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_fast_nomot_store_data
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_fast_nomot_parameter_3rd
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_fast_nomot_parameter
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2f
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_sample_balance
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_add_accel_block_data
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_record_good_accel_maxmin
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sample_rate
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_combine_data_calculate_bias
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_coverage_set_bias
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_push
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> accel_auto_cal.o(.text)
</UL>
<P><STRONG><a name="[bf]"></a>inv_init_in_use_auto_calibration</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, accel_auto_cal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = inv_init_in_use_auto_calibration &rArr; inv_set_default_number_of_samples &rArr; __hardfp_sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_default_number_of_samples
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_check_sample_balance_parameter
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_accel_maxmin
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_enable_in_use_auto_calibration
</UL>

<P><STRONG><a name="[c2]"></a>inv_start_in_use_auto_calibration</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, accel_auto_cal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = inv_start_in_use_auto_calibration &rArr; inv_register_data_cb &rArr; _MLPrintLog &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_register_data_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> accel_auto_cal.o(.text)
</UL>
<P><STRONG><a name="[c4]"></a>inv_stop_in_use_auto_calibration</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, accel_auto_cal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_unregister_data_cb
</UL>

<P><STRONG><a name="[c6]"></a>inv_enable_in_use_auto_calibration</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, accel_auto_cal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = inv_enable_in_use_auto_calibration &rArr; inv_init_in_use_auto_calibration &rArr; inv_set_default_number_of_samples &rArr; __hardfp_sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_register_mpl_start_notification
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_in_use_auto_calibration
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
</UL>

<P><STRONG><a name="[c8]"></a>inv_disable_in_use_auto_calibration</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, accel_auto_cal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_unregister_mpl_start_notification
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_unregister_data_cb
</UL>

<P><STRONG><a name="[31e]"></a>inv_get_accel_bias_stage</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, accel_auto_cal.o(.text), UNUSED)

<P><STRONG><a name="[31f]"></a>inv_vector_compass_cal_sensitivity</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, compass_vec_cal.o(.text), UNUSED)

<P><STRONG><a name="[cd]"></a>inv_cheap_rand</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, compass_vec_cal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_cheap_gaussian
</UL>

<P><STRONG><a name="[cc]"></a>inv_cheap_gaussian</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, compass_vec_cal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = inv_cheap_gaussian &rArr; __hardfp_log &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_cheap_rand
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_sim
</UL>

<P><STRONG><a name="[a1]"></a>inv_combine_compass_data</STRONG> (Thumb, 416 bytes, Stack size 40 bytes, compass_vec_cal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = inv_combine_compass_data &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_compass_only_cal
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_combine_data_calculate_bias
</UL>

<P><STRONG><a name="[b9]"></a>inv_set_terms</STRONG> (Thumb, 932 bytes, Stack size 72 bytes, compass_vec_cal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = inv_set_terms &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_compass_only_cal
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_sim
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_auto_calibrate
</UL>

<P><STRONG><a name="[a2]"></a>inv_compute_bias</STRONG> (Thumb, 2142 bytes, Stack size 176 bytes, compass_vec_cal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = inv_compute_bias &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_compass_only_cal
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_sim
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_combine_data_calculate_bias
</UL>

<P><STRONG><a name="[d1]"></a>inv_center_sum</STRONG> (Thumb, 1784 bytes, Stack size 144 bytes, compass_vec_cal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = inv_center_sum &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_compass_only_cal
</UL>

<P><STRONG><a name="[d3]"></a>inv_get_current_calibrated_compass</STRONG> (Thumb, 82 bytes, Stack size 48 bytes, compass_vec_cal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = inv_get_current_calibrated_compass &rArr; inv_convert_to_body_with_scale
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_convert_to_body_with_scale
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_compass_bias
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_add_compass_block_data
</UL>

<P><STRONG><a name="[d5]"></a>inv_add_compass_block_data</STRONG> (Thumb, 172 bytes, Stack size 64 bytes, compass_vec_cal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = inv_add_compass_block_data &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_got_compass_bias
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_current_calibrated_compass
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_ignore_compass_data
</UL>

<P><STRONG><a name="[dd]"></a>inv_check_sim</STRONG> (Thumb, 400 bytes, Stack size 144 bytes, compass_vec_cal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = inv_check_sim &rArr; inv_compute_bias &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_6axis_quaternion
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q_mult
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q_invert
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_cheap_gaussian
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_terms
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_compute_bias
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_compass_only_cal
</UL>

<P><STRONG><a name="[e1]"></a>inv_reset_data_collection</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, compass_vec_cal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = inv_reset_data_collection
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_vector_compass_cal
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_compass_only_cal
</UL>

<P><STRONG><a name="[e2]"></a>inv_process_compass_only_cal</STRONG> (Thumb, 1720 bytes, Stack size 360 bytes, compass_vec_cal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 768<LI>Call Chain = inv_process_compass_only_cal &rArr; inv_check_sim &rArr; inv_compute_bias &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_compass_state
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_compass_bias_error
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_compass_bias_found
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_compass_bias
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_magnetic_disturbance
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_reset_data_collection
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_sim
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_center_sum
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_peaks
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_bias_stability
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_ignore_compass_data
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_peaks
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_terms
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_compute_bias
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_combine_compass_data
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_vector_compass_cal
</UL>

<P><STRONG><a name="[e9]"></a>inv_generate_vector_compass_cal</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, compass_vec_cal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = inv_generate_vector_compass_cal &rArr; inv_process_compass_only_cal &rArr; inv_check_sim &rArr; inv_compute_bias &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_compass_only_cal
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_sensitivity_const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> compass_vec_cal.o(.text)
</UL>
<P><STRONG><a name="[eb]"></a>inv_start_vector_compass_cal</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, compass_vec_cal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = inv_start_vector_compass_cal &rArr; inv_register_data_cb &rArr; _MLPrintLog &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_register_data_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> compass_vec_cal.o(.text)
</UL>
<P><STRONG><a name="[ec]"></a>inv_stop_vector_compass_cal</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, compass_vec_cal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_unregister_data_cb
</UL>

<P><STRONG><a name="[ed]"></a>inv_init_vector_compass_cal</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, compass_vec_cal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = inv_init_vector_compass_cal &rArr; inv_init_check_sample_balance_parameter
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_reset_data_collection
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_check_sample_balance_parameter
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_enable_vector_compass_cal
</UL>

<P><STRONG><a name="[ee]"></a>inv_enable_vector_compass_cal</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, compass_vec_cal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = inv_enable_vector_compass_cal &rArr; inv_init_vector_compass_cal &rArr; inv_init_check_sample_balance_parameter
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_register_mpl_start_notification
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_vector_compass_cal
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
</UL>

<P><STRONG><a name="[ef]"></a>inv_disable_vector_compass_cal</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, compass_vec_cal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_unregister_mpl_start_notification
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_unregister_data_cb
</UL>

<P><STRONG><a name="[f5]"></a>inv_init_maxmin</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, fast_no_motion.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = inv_init_maxmin
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_start_fast_nomot
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_fast_nomot
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_detect_motion_by_gyro_accel
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_fast_nomot_set_gyro_bias
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_reset_packet
</UL>

<P><STRONG><a name="[bc]"></a>inv_fast_nomot_parameter</STRONG> (Thumb, 332 bytes, Stack size 48 bytes, fast_no_motion.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = inv_fast_nomot_parameter &rArr; __aeabi_l2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2lz
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2f
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_detect_motion_by_gyro_accel
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_auto_calibrate
</UL>

<P><STRONG><a name="[ba]"></a>inv_fast_nomot_parameter_3rd</STRONG> (Thumb, 190 bytes, Stack size 40 bytes, fast_no_motion.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = inv_fast_nomot_parameter_3rd &rArr; __aeabi_l2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2lz
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2f
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_auto_calibrate
</UL>

<P><STRONG><a name="[f3]"></a>inv_fast_nomot_set_gyro_bias</STRONG> (Thumb, 232 bytes, Stack size 40 bytes, fast_no_motion.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = inv_fast_nomot_set_gyro_bias &rArr; inv_set_gyro_bias &rArr; inv_apply_calibration &rArr; inv_convert_to_body_with_scale
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_motion_state
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q30_mult
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_gyro_bias
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_maxmin
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_fast_nomot
</UL>

<P><STRONG><a name="[320]"></a>inv_set_fast_nomot_compass_threshold</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fast_no_motion.o(.text), UNUSED)

<P><STRONG><a name="[321]"></a>int_set_fast_nomot_gyro_threshold</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fast_no_motion.o(.text), UNUSED)

<P><STRONG><a name="[322]"></a>inv_set_fast_nomot_accel_threshold</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fast_no_motion.o(.text), UNUSED)

<P><STRONG><a name="[323]"></a>inv_get_fast_nomot_compass_param</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fast_no_motion.o(.text), UNUSED)

<P><STRONG><a name="[324]"></a>inv_get_fast_nomot_accel_param</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fast_no_motion.o(.text), UNUSED)

<P><STRONG><a name="[b7]"></a>inv_fast_nomot_store_data</STRONG> (Thumb, 140 bytes, Stack size 44 bytes, fast_no_motion.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = inv_fast_nomot_store_data
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_sensor_data_preprocess
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_auto_calibrate
</UL>

<P><STRONG><a name="[fe]"></a>inv_fast_nomot_store_data_compass</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, fast_no_motion.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = inv_fast_nomot_store_data_compass
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_sensor_data_preprocess
</UL>

<P><STRONG><a name="[100]"></a>inv_fast_nomot_reset_data_compass</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, fast_no_motion.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = inv_fast_nomot_reset_data_compass
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_fast_nomot
</UL>

<P><STRONG><a name="[103]"></a>inv_fast_nomot_get_time_elaps</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fast_no_motion.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_fast_nomot
</UL>

<P><STRONG><a name="[102]"></a>inv_fast_nomot_parameter_compass</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, fast_no_motion.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_fast_nomot
</UL>

<P><STRONG><a name="[f8]"></a>inv_get_right_shift_by_rounding</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, fast_no_motion.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>

<P><STRONG><a name="[101]"></a>inv_reset_min_max_gyro_accel_statistics</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fast_no_motion.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_fast_nomot
</UL>

<P><STRONG><a name="[105]"></a>inv_record_max_moment_in_no_motion_gyro</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, fast_no_motion.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = inv_record_max_moment_in_no_motion_gyro
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_fast_nomot
</UL>

<P><STRONG><a name="[104]"></a>inv_record_max_moment_in_no_motion_accel</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, fast_no_motion.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = inv_record_max_moment_in_no_motion_accel
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_fast_nomot
</UL>

<P><STRONG><a name="[fc]"></a>inv_record_min_moment_in_motion_gyro</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, fast_no_motion.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = inv_record_min_moment_in_motion_gyro
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_detect_motion_by_gyro_accel
</UL>

<P><STRONG><a name="[fb]"></a>inv_record_min_moment_in_motion_accel</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, fast_no_motion.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = inv_record_min_moment_in_motion_accel
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_detect_motion_by_gyro_accel
</UL>

<P><STRONG><a name="[f9]"></a>inv_detect_motion_by_gyro_accel</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, fast_no_motion.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = inv_detect_motion_by_gyro_accel &rArr; inv_fast_nomot_parameter &rArr; __aeabi_l2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_record_min_moment_in_motion_accel
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_record_min_moment_in_motion_gyro
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_maxmin
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_reset_packet
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_fast_nomot_parameter
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_fast_nomot
</UL>

<P><STRONG><a name="[fd]"></a>inv_sensor_data_preprocess</STRONG> (Thumb, 132 bytes, Stack size 20 bytes, fast_no_motion.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = inv_sensor_data_preprocess &rArr; inv_fast_nomot_store_data
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_fast_nomot_store_data_compass
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_fast_nomot_store_data
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_fast_nomot
</UL>

<P><STRONG><a name="[ff]"></a>inv_generate_fast_nomot</STRONG> (Thumb, 504 bytes, Stack size 32 bytes, fast_no_motion.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = inv_generate_fast_nomot &rArr; inv_detect_motion_by_gyro_accel &rArr; inv_fast_nomot_parameter &rArr; __aeabi_l2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_motion_state
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_sensor_data_preprocess
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_detect_motion_by_gyro_accel
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_record_max_moment_in_no_motion_accel
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_record_max_moment_in_no_motion_gyro
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_reset_min_max_gyro_accel_statistics
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_fast_nomot_parameter_compass
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_fast_nomot_get_time_elaps
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_fast_nomot_reset_data_compass
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_fast_nomot_set_gyro_bias
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_reset_packet
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fast_no_motion.o(.text)
</UL>
<P><STRONG><a name="[c1]"></a>inv_set_default_number_of_samples</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, fast_no_motion.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = inv_set_default_number_of_samples &rArr; __hardfp_sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_fast_nomot
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_in_use_auto_calibration
</UL>

<P><STRONG><a name="[106]"></a>inv_init_fast_nomot</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, fast_no_motion.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = inv_init_fast_nomot &rArr; inv_set_default_number_of_samples &rArr; __hardfp_sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_maxmin
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_default_number_of_samples
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_enable_fast_nomot
</UL>

<P><STRONG><a name="[107]"></a>inv_start_fast_nomot</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, fast_no_motion.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = inv_start_fast_nomot &rArr; inv_register_data_cb &rArr; _MLPrintLog &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_message
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_register_data_cb
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_maxmin
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fast_no_motion.o(.text)
</UL>
<P><STRONG><a name="[109]"></a>inv_stop_fast_nomot</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, fast_no_motion.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_motion_state
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_unregister_data_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_disable_fast_nomot
</UL>

<P><STRONG><a name="[10a]"></a>inv_enable_fast_nomot</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fast_no_motion.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = inv_enable_fast_nomot &rArr; inv_init_fast_nomot &rArr; inv_set_default_number_of_samples &rArr; __hardfp_sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_register_mpl_start_notification
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_fast_nomot
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
</UL>

<P><STRONG><a name="[10b]"></a>inv_disable_fast_nomot</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, fast_no_motion.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_unregister_mpl_start_notification
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_stop_fast_nomot
</UL>

<P><STRONG><a name="[325]"></a>inv_get_fnm_gyro_no_motion_param</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fast_no_motion.o(.text), UNUSED)

<P><STRONG><a name="[326]"></a>inv_fnm_debug_print</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, fast_no_motion.o(.text), UNUSED)

<P><STRONG><a name="[10e]"></a>inv_filter_correction_angle</STRONG> (Thumb, 374 bytes, Stack size 32 bytes, fusion_9axis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = inv_filter_correction_angle &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove4
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_perform_9x_fusion
</UL>

<P><STRONG><a name="[10f]"></a>inv_perform_9x_fusion</STRONG> (Thumb, 894 bytes, Stack size 216 bytes, fusion_9axis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = inv_perform_9x_fusion &rArr; inv_find_synchronized_compass_angle &rArr; inv_compass_angle &rArr; __hardfp_atan2f
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_compass_correction
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_6axis_quaternion
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q_normalizef
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q_multf
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q_mult
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q_invert
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_gyro_sum_of_sqr
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_quaternion_to_rotation
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_gravity
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_magnetic_disturbance_state
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_filter_correction_angle
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_find_synchronized_compass_angle
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_9x_sensor_fusion_cb
</UL>

<P><STRONG><a name="[116]"></a>inv_process_9x_sensor_fusion_cb</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, fusion_9axis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = inv_process_9x_sensor_fusion_cb &rArr; inv_perform_9x_fusion &rArr; inv_find_synchronized_compass_angle &rArr; inv_compass_angle &rArr; __hardfp_atan2f
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_perform_9x_fusion
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fusion_9axis.o(.text)
</UL>
<P><STRONG><a name="[117]"></a>inv_init_9x_fusion</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, fusion_9axis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = inv_init_9x_fusion &rArr; inv_set_compass_correction
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_compass_correction
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_enable_9x_sensor_fusion
</UL>

<P><STRONG><a name="[327]"></a>inv_9x_fusion_set_mag_fb</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fusion_9axis.o(.text), UNUSED)

<P><STRONG><a name="[328]"></a>inv_9x_fusion_enable_jitter_reduction</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fusion_9axis.o(.text), UNUSED)

<P><STRONG><a name="[329]"></a>inv_9x_fusion_use_timestamps</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fusion_9axis.o(.text), UNUSED)

<P><STRONG><a name="[118]"></a>inv_start_9x_sensor_fusion</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, fusion_9axis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = inv_start_9x_sensor_fusion &rArr; inv_register_data_cb &rArr; _MLPrintLog &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_register_data_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fusion_9axis.o(.text)
</UL>
<P><STRONG><a name="[119]"></a>inv_stop_9x_sensor_fusion</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fusion_9axis.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_unregister_data_cb
</UL>

<P><STRONG><a name="[11a]"></a>inv_enable_9x_sensor_fusion</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, fusion_9axis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = inv_enable_9x_sensor_fusion &rArr; inv_init_9x_fusion &rArr; inv_set_compass_correction
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_register_mpl_start_notification
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_9x_fusion
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
</UL>

<P><STRONG><a name="[11b]"></a>inv_disable_9x_sensor_fusion</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fusion_9axis.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_unregister_mpl_start_notification
</UL>

<P><STRONG><a name="[122]"></a>inv_init_gyro_ts</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gyro_tc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = inv_init_gyro_ts
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_enable_gyro_tc
</UL>

<P><STRONG><a name="[32a]"></a>inv_set_gtc_max_temp</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gyro_tc.o(.text), UNUSED)

<P><STRONG><a name="[32b]"></a>inv_set_gtc_min_temp</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gyro_tc.o(.text), UNUSED)

<P><STRONG><a name="[32c]"></a>inv_set_gtc_min_diff</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gyro_tc.o(.text), UNUSED)

<P><STRONG><a name="[32d]"></a>inv_get_gyro_ts</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, gyro_tc.o(.text), UNUSED)

<P><STRONG><a name="[32e]"></a>inv_set_gyro_ts</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gyro_tc.o(.text), UNUSED)

<P><STRONG><a name="[32f]"></a>inv_set_gtc_order</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gyro_tc.o(.text), UNUSED)

<P><STRONG><a name="[330]"></a>inv_print_gtc_data</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, gyro_tc.o(.text), UNUSED)

<P><STRONG><a name="[123]"></a>inv_start_gyro_tc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gyro_tc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = inv_start_gyro_tc &rArr; inv_register_data_cb &rArr; _MLPrintLog &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_register_data_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gyro_tc.o(.text)
</UL>
<P><STRONG><a name="[124]"></a>inv_stop_gyro_tc</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gyro_tc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_unregister_data_cb
</UL>

<P><STRONG><a name="[125]"></a>inv_enable_gyro_tc</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gyro_tc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = inv_enable_gyro_tc &rArr; inv_register_load_store
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_register_mpl_start_notification
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_register_load_store
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_gyro_ts
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
</UL>

<P><STRONG><a name="[127]"></a>inv_disable_gyro_tc</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gyro_tc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_unregister_mpl_start_notification
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_unregister_data_cb
</UL>

<P><STRONG><a name="[e4]"></a>inv_set_magnetic_disturbance</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, mag_disturb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_compass_only_cal
</UL>

<P><STRONG><a name="[128]"></a>inv_init_magnetic_disturbance</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, mag_disturb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = inv_init_magnetic_disturbance
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_enable_magnetic_disturbance
</UL>

<P><STRONG><a name="[129]"></a>MagDisturbSetDisturbance</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, mag_disturb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MagDisturbSetDisturbance &rArr; inv_set_compass_correction
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_compass_correction
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_magnetic_disturbance
</UL>

<P><STRONG><a name="[12a]"></a>MagDisturbCheckSettling</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, mag_disturb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MagDisturbCheckSettling
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_acc_state
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_magnetic_disturbance
</UL>

<P><STRONG><a name="[12c]"></a>ComputeAngleVelocity</STRONG> (Thumb, 94 bytes, Stack size 72 bytes, mag_disturb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ComputeAngleVelocity &rArr; inv_q_mult
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q_mult
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q_invert
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_quaternion_to_rotation
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_magnetic_disturbance
</UL>

<P><STRONG><a name="[331]"></a>inv_disable_dip_tracking</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mag_disturb.o(.text), UNUSED)

<P><STRONG><a name="[12d]"></a>Mag3ofNormalizedLong</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, mag_disturb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Mag3ofNormalizedLong &rArr; __hardfp_sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_magnetic_disturbance
</UL>

<P><STRONG><a name="[132]"></a>inv_track_dip_angle</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, mag_disturb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_magnetic_disturbance
</UL>

<P><STRONG><a name="[12e]"></a>inv_check_magnetic_disturbance</STRONG> (Thumb, 758 bytes, Stack size 104 bytes, mag_disturb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = inv_check_magnetic_disturbance &rArr; ComputeAngleVelocity &rArr; inv_q_mult
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_got_compass_bias
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_local_field
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_compass_correction
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q_invert
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_gyro_sum_of_sqr
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_gyro_on
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_gyro
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acosf
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_track_dip_angle
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mag3ofNormalizedLong
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComputeAngleVelocity
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MagDisturbCheckSettling
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MagDisturbSetDisturbance
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove4
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_magnetic_disturbance_process
</UL>

<P><STRONG><a name="[136]"></a>inv_magnetic_disturbance_process</STRONG> (Thumb, 50 bytes, Stack size 48 bytes, mag_disturb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = inv_magnetic_disturbance_process &rArr; inv_check_magnetic_disturbance &rArr; ComputeAngleVelocity &rArr; inv_q_mult
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_6axis_quaternion
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_gravity
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_compass_disturbance
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_magnetic_disturbance
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mag_disturb.o(.text)
</UL>
<P><STRONG><a name="[138]"></a>inv_start_magnetic_disturbance</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, mag_disturb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = inv_start_magnetic_disturbance &rArr; inv_register_data_cb &rArr; _MLPrintLog &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_register_data_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mag_disturb.o(.text)
</UL>
<P><STRONG><a name="[139]"></a>inv_stop_magnetic_disturbance</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mag_disturb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_unregister_data_cb
</UL>

<P><STRONG><a name="[13a]"></a>inv_enable_magnetic_disturbance</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, mag_disturb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = inv_enable_magnetic_disturbance &rArr; inv_init_magnetic_disturbance
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_register_mpl_start_notification
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_magnetic_disturbance
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
</UL>

<P><STRONG><a name="[13b]"></a>inv_disable_magnetic_disturbance</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, mag_disturb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_unregister_data_cb
</UL>

<P><STRONG><a name="[332]"></a>inv_enable_dip_tracking</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, mag_disturb.o(.text), UNUSED)

<P><STRONG><a name="[113]"></a>inv_get_magnetic_disturbance_state</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mag_disturb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_perform_9x_fusion
</UL>

<P><STRONG><a name="[142]"></a>inv_generate_gyro_quaternion</STRONG> (Thumb, 348 bytes, Stack size 48 bytes, quaternion_supervisor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = inv_generate_gyro_quaternion &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q_mult
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q_add
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q30_mult
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_normalize_quat
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_accel_gyro_quaternion
</UL>

<P><STRONG><a name="[145]"></a>inv_set_quaternion</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, quaternion_supervisor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q_mult
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q_invert
</UL>

<P><STRONG><a name="[146]"></a>inv_generate_accel_gyro_quaternion</STRONG> (Thumb, 468 bytes, Stack size 104 bytes, quaternion_supervisor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = inv_generate_accel_gyro_quaternion &rArr; accel_fusion &rArr; inv_q_norm4 &rArr; __hardfp_sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_linear_accel
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q_rotate
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q_mult
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q_invert
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q_add
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q30_mult
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_gyro_quaternion
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_dmp_quaternion
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_normalize_quat
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_compute_quat_from_accel
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_fusion
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_quaternion
</UL>

<P><STRONG><a name="[149]"></a>inv_stop_quaternion</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, quaternion_supervisor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_unregister_data_cb
</UL>

<P><STRONG><a name="[14a]"></a>inv_init_quaternion</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, quaternion_supervisor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = inv_init_quaternion
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_enable_quaternion
</UL>

<P><STRONG><a name="[14b]"></a>inv_start_quaternion</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, quaternion_supervisor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = inv_start_quaternion &rArr; inv_register_data_cb &rArr; _MLPrintLog &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_register_data_cb
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> quaternion_supervisor.o(.text)
</UL>
<P><STRONG><a name="[14c]"></a>inv_enable_quaternion</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, quaternion_supervisor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = inv_enable_quaternion &rArr; inv_init_quaternion
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_register_mpl_start_notification
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_quaternion
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
</UL>

<P><STRONG><a name="[14d]"></a>inv_disable_quaternion</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, quaternion_supervisor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_unregister_mpl_start_notification
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_unregister_data_cb
</UL>

<P><STRONG><a name="[295]"></a>arm_sin_f32</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, arm_sin_f32.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_speaker_tone_start
</UL>

<P><STRONG><a name="[14e]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_apply
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tes_evt_handler
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_batt_meas_enable
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_light_timer_handler
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_cmd_process
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>

<P><STRONG><a name="[f0]"></a>__aeabi_ldivmod</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, ldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_gtc_compute_slope
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_sensitivity_const
</UL>

<P><STRONG><a name="[f4]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2lz
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_right_shift_by_rounding
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_fast_nomot_set_gyro_bias
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
</UL>

<P><STRONG><a name="[333]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[f2]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_right_shift_by_rounding
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_fast_nomot_parameter_3rd
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_fast_nomot_parameter
</UL>

<P><STRONG><a name="[334]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[335]"></a>___aeabi_memcpy8$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[11c]"></a>__aeabi_memcpy</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_config_load
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_init
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_config_store
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcs_evt_handler
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_event_handler_adc
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_handle_start
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_write
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis3dh_write_regs
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MLPrintLog
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_db_save_func
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_db_load_func
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_dfu_settings_init
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteBlocking
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_gtc_store
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_gtc_load
</UL>

<P><STRONG><a name="[dc]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configure_gpio_for_sleep
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_dfu_settings_write
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_dfu_settings_init
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_compass_only_cal
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_bias_stability
</UL>

<P><STRONG><a name="[336]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[96]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memmove4
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_unregister_mpl_start_notification
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_magnetic_disturbance
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_gtc_add_data
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_filter_correction_angle
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_find_synchronized_compass_angle
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_push
</UL>

<P><STRONG><a name="[337]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[151]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[338]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[339]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[150]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[bd]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tss_init
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_storage_manager
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_start_manager
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_enable_results_holder
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_data_builder
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_dfu_settings_init
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_quaternion
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_magnetic_disturbance
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_gyro_ts
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_gtc_compute_slope
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_9x_fusion
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_start_fast_nomot
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_fast_nomot
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_detect_motion_by_gyro_accel
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_fast_nomot_set_gyro_bias
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_reset_packet
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_vector_compass_cal
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_reset_data_collection
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_in_use_auto_calibration
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_auto_calibrate
</UL>

<P><STRONG><a name="[33a]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[152]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[163]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteString
</UL>

<P><STRONG><a name="[134]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_load_firmware
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_gyro_bias
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_compass_bias
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_start_quaternion
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_dmp_quaternion
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_magnetic_disturbance
</UL>

<P><STRONG><a name="[a9]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_compass_only_cal
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_sim
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_add_compass_block_data
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_center_sum
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_peaks
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_terms
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_compute_bias
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_combine_compass_data
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_add_vector_block_data
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_add_accel_block_data
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_round
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
</UL>

<P><STRONG><a name="[9c]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_compass_only_cal
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_sim
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_center_sum
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_bias_stability
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_peaks
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_compute_bias
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_coverage_set_bias
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_round
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[d2]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_center_sum
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[b3]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_temp_get
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_get
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saadc_event_handler_interrupt
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_gyro_quaternion
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_filter_correction_angle
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_compass_only_cal
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_sim
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_center_sum
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_cheap_gaussian
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_peaks
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_terms
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_compute_bias
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_combine_compass_data
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sample_rate
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
</UL>

<P><STRONG><a name="[ab]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saadc_event_handler_interrupt
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_gyro_quaternion
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_filter_correction_angle
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_compass_only_cal
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_sim
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_add_compass_block_data
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_compute_bias
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_add_vector_block_data
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_add_accel_block_data
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[bb]"></a>__aeabi_l2f</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, ffltl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_l2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_fast_nomot_parameter_3rd
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_fast_nomot_parameter
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_auto_calibrate
</UL>

<P><STRONG><a name="[cb]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_temp_get
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_filter_correction_angle
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_compass_only_cal
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_sensitivity_const
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_peaks
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_terms
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[156]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_get
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saadc_event_handler_interrupt
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[f1]"></a>__aeabi_f2lz</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, ffixl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_f2lz
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_fast_nomot_parameter_3rd
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_fast_nomot_parameter
</UL>

<P><STRONG><a name="[9f]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_gyro_quaternion
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_compass_only_cal
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sample_rate
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_combine_data_calculate_bias
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_coverage_set_bias
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[157]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx150x_led_drv_calc_convert
</UL>

<P><STRONG><a name="[a4]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx150x_led_drv_calc_convert
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_gyro_quaternion
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_filter_correction_angle
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_compass_only_cal
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_add_compass_block_data
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_cheap_gaussian
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_combine_compass_data
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_add_vector_block_data
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_add_accel_block_data
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sample_rate
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_combine_data_calculate_bias
</UL>

<P><STRONG><a name="[d0]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_compass_only_cal
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_compute_bias
</UL>

<P><STRONG><a name="[9e]"></a>__aeabi_cdcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_compass_only_cal
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_bias_stability
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_peaks
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_coverage_set_bias
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_round
</UL>

<P><STRONG><a name="[a5]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_compass_only_cal
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_sim
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_bias_stability
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_peaks
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_combine_data_calculate_bias
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_round
</UL>

<P><STRONG><a name="[ac]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_temp_get
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_get
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saadc_event_handler_interrupt
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_filter_correction_angle
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_add_compass_block_data
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_cheap_gaussian
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_add_vector_block_data
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_add_accel_block_data
</UL>

<P><STRONG><a name="[33b]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[18e]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[14f]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
</UL>

<P><STRONG><a name="[33c]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[33d]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[158]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[155]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2f
</UL>

<P><STRONG><a name="[154]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
</UL>

<P><STRONG><a name="[153]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[188]"></a>__ARM_scalbn</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[33e]"></a>scalbn</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dscalb.o(.text), UNUSED)

<P><STRONG><a name="[159]"></a>_dsqrt</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, dsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>

<P><STRONG><a name="[15a]"></a>_drnd</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, drnd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _drnd &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_round
</UL>

<P><STRONG><a name="[15b]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[91]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[33f]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[340]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[341]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[13]"></a>GPIOTE_IRQHandler</STRONG> (Thumb, 368 bytes, Stack size 40 bytes, nrf_drv_gpiote.o(i.GPIOTE_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIOTE_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>PDM_IRQHandler</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, nrf_drv_pdm.o(i.PDM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PDM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>POWER_CLOCK_IRQHandler</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, nrf_drv_clock.o(i.POWER_CLOCK_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = POWER_CLOCK_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>PWM0_IRQHandler</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, nrf_drv_pwm.o(i.PWM0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PWM0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>RTC1_IRQHandler</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, app_timer.o(i.RTC1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = RTC1_IRQHandler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>SAADC_IRQHandler</STRONG> (Thumb, 394 bytes, Stack size 48 bytes, nrf_drv_saadc.o(i.SAADC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SAADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[15e]"></a>SEGGER_RTT_Write</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, segger_rtt.o(i.SEGGER_RTT_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MLPrintLog
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreChar
</UL>

<P><STRONG><a name="[160]"></a>SEGGER_RTT_WriteNoLock</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, segger_rtt.o(i.SEGGER_RTT_WriteNoLock))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteBlocking
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteString
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>

<P><STRONG><a name="[162]"></a>SEGGER_RTT_WriteString</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, segger_rtt.o(i.SEGGER_RTT_WriteString))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SEGGER_RTT_WriteString &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thingy_ble_evt_handler
</UL>

<P><STRONG><a name="[164]"></a>SEGGER_RTT_printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, segger_rtt_printf.o(i.SEGGER_RTT_printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_env_flash_init
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_env_flash_config_store
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_env_flash_baseline_store
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_init
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_get
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_enable
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_disable
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_temp_get
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_sample
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_init
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_get
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_enable
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_disable
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_stop
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_start
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_init
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_calibrate_humid_temp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_baseline_set
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_baseline_get
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_rgb_intensity_set
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_off
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_stop
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_start
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_sample
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_init
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_environment_stop
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gas_stop
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;environment_service_init
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_evt_handler
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_apply
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tes_evt_handler
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_config_load
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_init
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_config_store
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;support_func_ble_mac_address_print_rtt
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_led_set_event
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_init
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_motion_init
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_environment_init
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_batt_meas_init
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_batt_meas_enable
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_reset
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_pin_set
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_pin_clear
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_init
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_cfg_output
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_cfg
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thingy_ble_evt_handler
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_batt_meas_handler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_light_timer_handler
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_osc_status_change
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_led_drv_ctrl
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_color_select_cmd_send
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_cmd_process
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_service_init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_periodic_handler
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mic_init
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_config_load
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_init
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_config_store
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_rgb_sequence
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thingy_ui_service_init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thingy_ui_on_ble_evt
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_motion_flash_config_load
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_motion_flash_init
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_motion_flash_config_store
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_init
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_disable
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motion_service_init
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_env_flash_config_load
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_sw_reset
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_part_id_get
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_open
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_meas_enable
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_gain_set
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_data_get
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_write
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_read
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_evt_sceduled
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccs811_close
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_open
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_one_shot
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_humidity_get
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_cfg_set
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_calib_get
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_write
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_read
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_write
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_read
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_verify
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_temperature_get
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_status_get
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_pressure_get
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_open
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_one_shot
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_odr_set
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_cfg_set
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis3dh_write_regs
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_acc_wakeup_prepare
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_acc_init
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_verify
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_temperature_get
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_status_get
</UL>

<P><STRONG><a name="[165]"></a>SEGGER_RTT_vprintf</STRONG> (Thumb, 636 bytes, Stack size 152 bytes, segger_rtt_printf.o(i.SEGGER_RTT_vprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreChar
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintUnsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
</UL>

<P><STRONG><a name="[10]"></a>SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0_IRQHandler</STRONG> (Thumb, 220 bytes, Stack size 32 bytes, nrf_drv_twi.o(i.SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0_IRQHandler &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_tx_start_transfer
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_transfer
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_rx_start_transfer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>SWI0_EGU0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_timer.o(i.SWI0_EGU0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SWI0_EGU0_IRQHandler &rArr; timer_list_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>SWI2_EGU2_IRQHandler</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, softdevice_handler.o(i.SWI2_EGU2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = SWI2_EGU2_IRQHandler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_clock_on_soc_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>SystemInit</STRONG> (Thumb, 492 bytes, Stack size 8 bytes, system_nrf52.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(.text)
</UL>
<P><STRONG><a name="[16e]"></a>_MLPrintLog</STRONG> (Thumb, 170 bytes, Stack size 328 bytes, log_nrf52.o(i._MLPrintLog))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = _MLPrintLog &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_start_mpl
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_mpl
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_register_data_cb
</UL>

<P><STRONG><a name="[170]"></a>__0vsprintf</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[342]"></a>__1vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[343]"></a>__2vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[344]"></a>__c89vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[16f]"></a>vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MLPrintLog
</UL>

<P><STRONG><a name="[1ab]"></a>__ARM_common_memclr4_7</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ble_advertising.o(i.__ARM_common_memclr4_7))
<BR><BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_init
</UL>

<P><STRONG><a name="[2cf]"></a>__ARM_common_memcpy4_5</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, m_ui.o(i.__ARM_common_memcpy4_5))
<BR><BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_init
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_config_store
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set
</UL>

<P><STRONG><a name="[16d]"></a>__ARM_common_memcpy4_7</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, segger_rtt.o(i.__ARM_common_memcpy4_7))
<BR><BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>

<P><STRONG><a name="[189]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
</UL>

<P><STRONG><a name="[177]"></a>__ARM_fpclassifyf</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fpclassifyf.o(i.__ARM_fpclassifyf))
<BR><BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2f
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
</UL>

<P><STRONG><a name="[131]"></a>__hardfp_acosf</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, acosf.o(i.__hardfp_acosf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __hardfp_acosf &rArr; sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrtf
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_magnetic_disturbance
</UL>

<P><STRONG><a name="[176]"></a>__hardfp_atan2f</STRONG> (Thumb, 502 bytes, Stack size 16 bytes, atan2f.o(i.__hardfp_atan2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __hardfp_atan2f
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan2
</UL>
<BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_sensor_type_heading
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_sensor_type_euler
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_compass_angle
</UL>

<P><STRONG><a name="[b2]"></a>__hardfp_cos</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, cos.o(i.__hardfp_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sample_rate
</UL>

<P><STRONG><a name="[ce]"></a>__hardfp_cosf</STRONG> (Thumb, 280 bytes, Stack size 8 bytes, cosf.o(i.__hardfp_cosf))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __hardfp_cosf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_dmp_quaternion
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_perform_9x_fusion
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_cheap_gaussian
</UL>

<P><STRONG><a name="[9d]"></a>__hardfp_fabs</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, fabs.o(i.__hardfp_fabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_coverage_set_bias
</UL>

<P><STRONG><a name="[cf]"></a>__hardfp_log</STRONG> (Thumb, 872 bytes, Stack size 88 bytes, log.o(i.__hardfp_log))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = __hardfp_log &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_cheap_gaussian
</UL>

<P><STRONG><a name="[182]"></a>__hardfp_pow</STRONG> (Thumb, 3072 bytes, Stack size 192 bytes, pow.o(i.__hardfp_pow))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saadc_event_handler_interrupt
</UL>

<P><STRONG><a name="[18a]"></a>__hardfp_round</STRONG> (Thumb, 194 bytes, Stack size 64 bytes, round.o(i.__hardfp_round))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __hardfp_round &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx150x_led_drv_calc_convert
</UL>

<P><STRONG><a name="[111]"></a>__hardfp_sinf</STRONG> (Thumb, 344 bytes, Stack size 16 bytes, sinf.o(i.__hardfp_sinf))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __hardfp_sinf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_dmp_quaternion
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_perform_9x_fusion
</UL>

<P><STRONG><a name="[aa]"></a>__hardfp_sqrt</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, sqrt_full.o(i.__hardfp_sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __hardfp_sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_compass_only_cal
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_sim
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_add_compass_block_data
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_compute_bias
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_add_vector_block_data
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_add_accel_block_data
</UL>

<P><STRONG><a name="[b6]"></a>__hardfp_sqrtf</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, sqrtf_full.o(i.__hardfp_sqrtf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __hardfp_sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_sensor_type_euler
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q_norm4
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_dmp_quaternion
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_normalize_quat
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_compute_quat_from_accel
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_fusion
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_magnetic_disturbance
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mag3ofNormalizedLong
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_fast_nomot
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_cheap_gaussian
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_default_number_of_samples
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_auto_calibrate
</UL>

<P><STRONG><a name="[17c]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 938 bytes, Stack size 120 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[17e]"></a>__kernel_cos</STRONG> (Thumb, 322 bytes, Stack size 64 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[181]"></a>__kernel_poly</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
</UL>

<P><STRONG><a name="[17d]"></a>__kernel_sin</STRONG> (Thumb, 280 bytes, Stack size 72 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[180]"></a>__mathlib_dbl_divzero</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_divzero))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __mathlib_dbl_divzero &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
</UL>

<P><STRONG><a name="[17b]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_infnan &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[183]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_infnan2 &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[17a]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[184]"></a>__mathlib_dbl_overflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_overflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_overflow &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[187]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_underflow &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
</UL>

<P><STRONG><a name="[173]"></a>__mathlib_flt_infnan</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_infnan))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acosf
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
</UL>

<P><STRONG><a name="[179]"></a>__mathlib_flt_infnan2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_infnan2))
<BR><BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2f
</UL>

<P><STRONG><a name="[175]"></a>__mathlib_flt_invalid</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_invalid))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acosf
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
</UL>

<P><STRONG><a name="[178]"></a>__mathlib_flt_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_underflow))
<BR><BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2f
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
</UL>

<P><STRONG><a name="[17f]"></a>__mathlib_rredf2</STRONG> (Thumb, 316 bytes, Stack size 20 bytes, rredf.o(i.__mathlib_rredf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __mathlib_rredf2
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
</UL>

<P><STRONG><a name="[345]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[346]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[347]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[174]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acosf
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrtf
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
</UL>

<P><STRONG><a name="[18f]"></a>adv_data_encode</STRONG> (Thumb, 960 bytes, Stack size 48 bytes, ble_advdata.o(i.adv_data_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = adv_data_encode &rArr; uuid_list_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_list_encode
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advdata_set
</UL>

<P><STRONG><a name="[2e0]"></a>app_beacon_init</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, advertiser_beacon_timeslot.o(i.app_beacon_init))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcs_evt_handler
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
</UL>

<P><STRONG><a name="[315]"></a>app_beacon_on_sys_evt</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, advertiser_beacon_timeslot.o(i.app_beacon_on_sys_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_beacon_on_sys_evt
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_evt_dispatch
</UL>

<P><STRONG><a name="[2e1]"></a>app_beacon_start</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, advertiser_beacon_timeslot.o(i.app_beacon_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_beacon_start
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcs_evt_handler
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
</UL>

<P><STRONG><a name="[2df]"></a>app_beacon_stop</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, advertiser_beacon_timeslot.o(i.app_beacon_stop))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcs_evt_handler
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
</UL>

<P><STRONG><a name="[191]"></a>app_button_enable</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, app_button.o(i.app_button_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = app_button_enable &rArr; nrf_drv_gpiote_in_event_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_init
</UL>

<P><STRONG><a name="[193]"></a>app_button_init</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, app_button.o(i.app_button_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = app_button_init &rArr; nrf_drv_gpiote_in_init
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_init
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_is_init
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_init
</UL>

<P><STRONG><a name="[198]"></a>app_error_fault_handler</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, main.o(i.app_error_fault_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_led_set_event
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_fault_handler
</UL>

<P><STRONG><a name="[15d]"></a>app_error_handler_bare</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, app_error.o(i.app_error_handler_bare))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_sample
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_get
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_temp_get
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_get
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_start
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tes_on_ble_evt
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_environment_stop
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temperature_timeout_handler
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pressure_timeout_handler
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;humidity_timeout_handler
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gas_calib_timeout_handler
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;environment_service_init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;environment_on_ble_evt
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_evt_handler
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_evt_handler
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_apply
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_timeout_handler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tes_evt_handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_fds_evt_handler
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tcs_on_ble_evt
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_on_ble_evt
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcs_evt_handler
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_evt_dispatch
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_conn_params_evt
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_adv_evt
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_error_handler
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beacon_advertiser_error_handler
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_init
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_sound_init
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_environment_init
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_batt_meas_init
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thingy_ble_evt_handler
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_batt_meas_handler
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configure_gpio_for_sleep
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_light_timer_handler
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_osc_status_change
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saadc_event_handler_interrupt
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_evt_handler
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_event_handler_adc
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_periodic_handler
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_speaker_init
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mic_stop
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mic_start
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mic_init
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tss_on_ble_evt
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sound_on_ble_evt
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_speaker_evt_handler
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tss_evt_handler
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_fds_evt_handler
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uis_on_ble_evt
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thingy_ui_on_ble_evt
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_evt_handler
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uis_led_write_handler
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motion_fds_evt_handler
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_config
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tms_on_ble_evt
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motion_service_init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motion_on_ble_evt
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_evt_handler
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tms_evt_handler
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;env_fds_evt_handler
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_write
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_read
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_enable
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_evt_handler
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_evt_sceduled
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_evt_handler
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_evt_sceduled
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_evt_handler
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_evt_handler
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_audio_process
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_audio_buffer_handler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_evt_handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_evt_get
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC1_IRQHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2_EGU2_IRQHandler
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intern_softdevice_events_execute
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_evt_get
</UL>

<P><STRONG><a name="[19b]"></a>app_sched_event_put</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, app_scheduler.o(i.app_sched_event_put))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_sched_event_put &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_exit
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_enter
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_evt_schedule
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_evt_schedule
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saadc_event_handler_interrupt
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_evt_handler
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_evt_handler
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_evt_handler
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_evt_handler
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_evt_handler
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_audio_buffer_handler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_evt_handler
</UL>

<P><STRONG><a name="[2d7]"></a>app_sched_execute</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, app_scheduler.o(i.app_sched_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_sched_execute
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_env_flash_init
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_init
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_init
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_motion_flash_init
</UL>

<P><STRONG><a name="[2f2]"></a>app_sched_init</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, app_scheduler.o(i.app_sched_init))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f7]"></a>app_timer_cnt_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_timer.o(i.app_timer_cnt_get))
<BR><BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_ms_get
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_read_fifo
</UL>

<P><STRONG><a name="[197]"></a>app_timer_create</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app_timer.o(i.app_timer_create))
<BR><BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_init
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_environment_init
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_batt_meas_enable
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_init
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_init
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_init
</UL>

<P><STRONG><a name="[83]"></a>app_timer_evt_schedule</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, app_timer_appsh.o(i.app_timer_evt_schedule))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_timer_evt_schedule &rArr; app_sched_event_put &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[19e]"></a>app_timer_init</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, app_timer.o(i.app_timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_timer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a4]"></a>app_timer_start</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, app_timer.o(i.app_timer_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = app_timer_start &rArr; app_util_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_exit
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_enter
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_apply
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tes_evt_handler
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_batt_meas_enable
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_light_timer_handler
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_cmd_process
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_negotiation
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_event_handler
</UL>

<P><STRONG><a name="[1a5]"></a>app_timer_stop</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, app_timer.o(i.app_timer_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = app_timer_stop &rArr; app_util_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_exit
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_enter
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_rgb_intensity_set
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_environment_stop
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gas_stop
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gas_calib_timeout_handler
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_apply
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tes_evt_handler
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_on_ble_evt
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_cmd_process
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_disable
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_event_handler
</UL>

<P><STRONG><a name="[19c]"></a>app_util_critical_region_enter</STRONG> (Thumb, 84 bytes, Stack size 4 bytes, app_util_platform.o(i.app_util_critical_region_enter))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = app_util_critical_region_enter
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_speaker_ble_pcm_play
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_audio_process
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_clock_on_sd_enable
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_prealloc
</UL>

<P><STRONG><a name="[19d]"></a>app_util_critical_region_exit</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, app_util_platform.o(i.app_util_critical_region_exit))
<BR><BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_speaker_ble_pcm_play
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_audio_process
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_clock_on_sd_enable
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_prealloc
</UL>

<P><STRONG><a name="[1a9]"></a>ble_advdata_set</STRONG> (Thumb, 120 bytes, Stack size 104 bytes, ble_advdata.o(i.ble_advdata_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_init
</UL>

<P><STRONG><a name="[1aa]"></a>ble_advertising_init</STRONG> (Thumb, 348 bytes, Stack size 56 bytes, ble_advertising.o(i.ble_advertising_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = ble_advertising_init &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memclr4_7
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advdata_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
</UL>

<P><STRONG><a name="[1ac]"></a>ble_advertising_on_ble_evt</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, ble_advertising.o(i.ble_advertising_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = ble_advertising_on_ble_evt &rArr; ble_advertising_start &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[1ae]"></a>ble_advertising_on_sys_evt</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, ble_advertising.o(i.ble_advertising_on_sys_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = ble_advertising_on_sys_evt &rArr; ble_advertising_start &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_evt_dispatch
</UL>

<P><STRONG><a name="[1ad]"></a>ble_advertising_start</STRONG> (Thumb, 496 bytes, Stack size 56 bytes, ble_advertising.o(i.ble_advertising_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = ble_advertising_start &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_queued_op_count_get
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memclr4_7
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advdata_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_on_sys_evt
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_on_ble_evt
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_adv_evt
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
</UL>

<P><STRONG><a name="[1a6]"></a>ble_bas_battery_level_update</STRONG> (Thumb, 144 bytes, Stack size 48 bytes, ble_bas.o(i.ble_bas_battery_level_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_bas_battery_level_update
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_event_handler_adc
</UL>

<P><STRONG><a name="[1a8]"></a>ble_bas_init</STRONG> (Thumb, 394 bytes, Stack size 112 bytes, ble_bas.o(i.ble_bas_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ble_bas_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_report_ref_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_service_init
</UL>

<P><STRONG><a name="[1a7]"></a>ble_bas_on_ble_evt</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, ble_bas.o(i.ble_bas_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_bas_on_ble_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_is_notification_enabled
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_on_ble_evt
</UL>

<P><STRONG><a name="[316]"></a>ble_conn_params_change_conn_params</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, ble_conn_params.o(i.ble_conn_params_change_conn_params))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_conn_params_change_conn_params
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcs_evt_handler
</UL>

<P><STRONG><a name="[1b2]"></a>ble_conn_params_init</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, ble_conn_params.o(i.ble_conn_params_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_conn_params_init
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
</UL>

<P><STRONG><a name="[1b3]"></a>ble_conn_params_on_ble_evt</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, ble_conn_params.o(i.ble_conn_params_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ble_conn_params_on_ble_evt &rArr; conn_params_negotiation &rArr; app_timer_start &rArr; app_util_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_is_notification_enabled
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_negotiation
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[1b5]"></a>ble_conn_state_on_ble_evt</STRONG> (Thumb, 274 bytes, Stack size 72 bytes, ble_conn_state.o(i.ble_conn_state_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = ble_conn_state_on_ble_evt &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_update_by_key
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_key_list_get
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_first_key_index_get
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_bulk_update_by_key
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[1ba]"></a>ble_dfu_init</STRONG> (Thumb, 320 bytes, Stack size 104 bytes, ble_dfu.o(i.ble_dfu_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = ble_dfu_init &rArr; nrf_dfu_settings_init &rArr; nrf_dfu_flash_store &rArr; fs_store &rArr; queue_process
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_dfu_settings_init
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_dfu_flash_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
</UL>

<P><STRONG><a name="[1bd]"></a>ble_dfu_on_ble_evt</STRONG> (Thumb, 436 bytes, Stack size 80 bytes, ble_dfu.o(i.ble_dfu_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = ble_dfu_on_ble_evt &rArr; nrf_dfu_settings_write &rArr; nrf_dfu_flash_store &rArr; fs_store &rArr; queue_process
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_is_notification_enabled
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_dfu_settings_write
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[1b1]"></a>ble_srv_is_notification_enabled</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_srv_common.o(i.ble_srv_is_notification_enabled))
<BR><BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tes_on_ble_evt
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dfu_on_ble_evt
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_on_ble_evt
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bas_on_ble_evt
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tss_on_ble_evt
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uis_on_ble_evt
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tms_on_ble_evt
</UL>

<P><STRONG><a name="[1b0]"></a>ble_srv_report_ref_encode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ble_srv_common.o(i.ble_srv_report_ref_encode))
<BR><BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bas_init
</UL>

<P><STRONG><a name="[2de]"></a>ble_tcs_init</STRONG> (Thumb, 1230 bytes, Stack size 96 bytes, ble_tcs.o(i.ble_tcs_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ble_tcs_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
</UL>

<P><STRONG><a name="[1c0]"></a>ble_tcs_mtu_set</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, ble_tcs.o(i.ble_tcs_mtu_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_tcs_mtu_set
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcs_evt_handler
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[1bf]"></a>ble_tcs_on_ble_evt</STRONG> (Thumb, 448 bytes, Stack size 40 bytes, ble_tcs.o(i.ble_tcs_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = ble_tcs_on_ble_evt &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[228]"></a>ble_tes_color_set</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, ble_tes.o(i.ble_tes_color_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_tes_color_set
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_data_handler
</UL>

<P><STRONG><a name="[241]"></a>ble_tes_gas_set</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, ble_tes.o(i.ble_tes_gas_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_tes_gas_set
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_data_handler
</UL>

<P><STRONG><a name="[257]"></a>ble_tes_humidity_set</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, ble_tes.o(i.ble_tes_humidity_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_tes_humidity_set
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_evt_handler
</UL>

<P><STRONG><a name="[29f]"></a>ble_tes_init</STRONG> (Thumb, 1248 bytes, Stack size 96 bytes, ble_tes.o(i.ble_tes_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ble_tes_init
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;environment_service_init
</UL>

<P><STRONG><a name="[1d0]"></a>ble_tes_on_ble_evt</STRONG> (Thumb, 602 bytes, Stack size 40 bytes, ble_tes.o(i.ble_tes_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = ble_tes_on_ble_evt &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_is_notification_enabled
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;environment_on_ble_evt
</UL>

<P><STRONG><a name="[28e]"></a>ble_tes_pressure_set</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, ble_tes.o(i.ble_tes_pressure_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_tes_pressure_set
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_evt_handler
</UL>

<P><STRONG><a name="[256]"></a>ble_tes_temperature_set</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, ble_tes.o(i.ble_tes_temperature_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_tes_temperature_set
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_evt_handler
</UL>

<P><STRONG><a name="[27e]"></a>ble_tms_euler_set</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, ble_tms.o(i.ble_tms_euler_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_tms_euler_set
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_evt_handler
</UL>

<P><STRONG><a name="[281]"></a>ble_tms_gravity_set</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, ble_tms.o(i.ble_tms_gravity_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_tms_gravity_set
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_evt_handler
</UL>

<P><STRONG><a name="[280]"></a>ble_tms_heading_set</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, ble_tms.o(i.ble_tms_heading_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_tms_heading_set
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_evt_handler
</UL>

<P><STRONG><a name="[2f5]"></a>ble_tms_init</STRONG> (Thumb, 2122 bytes, Stack size 120 bytes, ble_tms.o(i.ble_tms_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ble_tms_init
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motion_service_init
</UL>

<P><STRONG><a name="[1d5]"></a>ble_tms_on_ble_evt</STRONG> (Thumb, 908 bytes, Stack size 40 bytes, ble_tms.o(i.ble_tms_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = ble_tms_on_ble_evt &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_is_notification_enabled
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motion_on_ble_evt
</UL>

<P><STRONG><a name="[283]"></a>ble_tms_orientation_set</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, ble_tms.o(i.ble_tms_orientation_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_tms_orientation_set
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_evt_handler
</UL>

<P><STRONG><a name="[284]"></a>ble_tms_pedo_set</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, ble_tms.o(i.ble_tms_pedo_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_tms_pedo_set
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_evt_handler
</UL>

<P><STRONG><a name="[27d]"></a>ble_tms_quat_set</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, ble_tms.o(i.ble_tms_quat_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_tms_quat_set
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_evt_handler
</UL>

<P><STRONG><a name="[27c]"></a>ble_tms_raw_set</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, ble_tms.o(i.ble_tms_raw_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_tms_raw_set
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_evt_handler
</UL>

<P><STRONG><a name="[27f]"></a>ble_tms_rot_mat_set</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, ble_tms.o(i.ble_tms_rot_mat_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_tms_rot_mat_set
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_evt_handler
</UL>

<P><STRONG><a name="[282]"></a>ble_tms_tap_set</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, ble_tms.o(i.ble_tms_tap_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_tms_tap_set
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_evt_handler
</UL>

<P><STRONG><a name="[1dc]"></a>ble_tss_init</STRONG> (Thumb, 802 bytes, Stack size 376 bytes, ble_tss.o(i.ble_tss_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = ble_tss_init
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sound_service_init
</UL>

<P><STRONG><a name="[264]"></a>ble_tss_mic_set</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, ble_tss.o(i.ble_tss_mic_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_tss_mic_set
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mic_data_handler
</UL>

<P><STRONG><a name="[1dd]"></a>ble_tss_on_ble_evt</STRONG> (Thumb, 398 bytes, Stack size 32 bytes, ble_tss.o(i.ble_tss_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = ble_tss_on_ble_evt &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_is_notification_enabled
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sound_on_ble_evt
</UL>

<P><STRONG><a name="[1d7]"></a>ble_tss_spkr_stat_set</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, ble_tss.o(i.ble_tss_spkr_stat_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_tss_spkr_stat_set
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_speaker_evt_handler
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tss_evt_handler
</UL>

<P><STRONG><a name="[317]"></a>ble_uis_init</STRONG> (Thumb, 596 bytes, Stack size 104 bytes, ble_uis.o(i.ble_uis_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ble_uis_init
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thingy_ui_service_init
</UL>

<P><STRONG><a name="[1e0]"></a>ble_uis_on_ble_evt</STRONG> (Thumb, 494 bytes, Stack size 48 bytes, ble_uis.o(i.ble_uis_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = ble_uis_on_ble_evt &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_is_notification_enabled
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thingy_ui_on_ble_evt
</UL>

<P><STRONG><a name="[1e2]"></a>ble_uis_on_button_change</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, ble_uis.o(i.ble_uis_on_button_change))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_uis_on_button_change
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_evt_handler
</UL>

<P><STRONG><a name="[309]"></a>crc32_compute</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, crc32.o(i.crc32_compute))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crc32_compute
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_dfu_settings_write
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_dfu_settings_init
</UL>

<P><STRONG><a name="[1eb]"></a>dmp_enable_feature</STRONG> (Thumb, 738 bytes, Stack size 64 bytes, inv_mpu_dmp_motion_driver.o(i.dmp_enable_feature))
<BR><BR>[Stack]<UL><LI>Max Depth = 752<LI>Call Chain = dmp_enable_feature &rArr; dmp_set_tap_thresh &rArr; mpu_write_mem &rArr; drv_mpu9250_write &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_tap_thresh
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_reset_fifo
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
</UL>

<P><STRONG><a name="[1ef]"></a>dmp_enable_gyro_cal</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, inv_mpu_dmp_motion_driver.o(i.dmp_enable_gyro_cal), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
</UL>

<P><STRONG><a name="[1f0]"></a>dmp_get_pedometer_step_count</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, inv_mpu_dmp_motion_driver.o(i.dmp_get_pedometer_step_count))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = dmp_get_pedometer_step_count &rArr; mpu_read_mem &rArr; drv_mpu9250_read &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_read_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpulib_data_handler_cb
</UL>

<P><STRONG><a name="[1f2]"></a>dmp_get_pedometer_walk_time</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, inv_mpu_dmp_motion_driver.o(i.dmp_get_pedometer_walk_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = dmp_get_pedometer_walk_time &rArr; mpu_read_mem &rArr; drv_mpu9250_read &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_read_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpulib_data_handler_cb
</UL>

<P><STRONG><a name="[1f3]"></a>dmp_load_motion_driver_firmware</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, inv_mpu_dmp_motion_driver.o(i.dmp_load_motion_driver_firmware))
<BR><BR>[Stack]<UL><LI>Max Depth = 752<LI>Call Chain = dmp_load_motion_driver_firmware &rArr; mpu_load_firmware &rArr; drv_mpu9250_read &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_load_firmware
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
</UL>

<P><STRONG><a name="[1f5]"></a>dmp_read_fifo</STRONG> (Thumb, 358 bytes, Stack size 72 bytes, inv_mpu_dmp_motion_driver.o(i.dmp_read_fifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 752<LI>Call Chain = dmp_read_fifo &rArr; mpu_read_fifo_stream &rArr; mpu_reset_fifo &rArr; drv_mpu9250_write &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_cnt_get
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_reset_fifo
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_read_fifo_stream
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpulib_data_handler_cb
</UL>

<P><STRONG><a name="[27a]"></a>dmp_register_android_orient_cb</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, inv_mpu_dmp_motion_driver.o(i.dmp_register_android_orient_cb))
<BR><BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
</UL>

<P><STRONG><a name="[279]"></a>dmp_register_tap_cb</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, inv_mpu_dmp_motion_driver.o(i.dmp_register_tap_cb))
<BR><BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
</UL>

<P><STRONG><a name="[1f8]"></a>dmp_set_fifo_rate</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, inv_mpu_dmp_motion_driver.o(i.dmp_set_fifo_rate))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = dmp_set_fifo_rate &rArr; mpu_write_mem &rArr; drv_mpu9250_write &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
</UL>

<P><STRONG><a name="[1f9]"></a>dmp_set_orientation</STRONG> (Thumb, 248 bytes, Stack size 32 bytes, inv_mpu_dmp_motion_driver.o(i.dmp_set_orientation))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = dmp_set_orientation &rArr; mpu_write_mem &rArr; drv_mpu9250_write &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
</UL>

<P><STRONG><a name="[1ed]"></a>dmp_set_tap_thresh</STRONG> (Thumb, 366 bytes, Stack size 32 bytes, inv_mpu_dmp_motion_driver.o(i.dmp_set_tap_thresh))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = dmp_set_tap_thresh &rArr; mpu_write_mem &rArr; drv_mpu9250_write &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_accel_fsr
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_feature
</UL>

<P><STRONG><a name="[1fb]"></a>drv_acc_init</STRONG> (Thumb, 538 bytes, Stack size 48 bytes, drv_acc_lis3dh.o(i.drv_acc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = drv_acc_init &rArr; lis3dh_write_regs &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_uninit
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_manager_request
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_tx
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_rx
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_enable
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_disable
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis3dh_write_regs
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_init
</UL>

<P><STRONG><a name="[203]"></a>drv_acc_wakeup_prepare</STRONG> (Thumb, 778 bytes, Stack size 72 bytes, drv_acc_lis3dh.o(i.drv_acc_wakeup_prepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = drv_acc_wakeup_prepare &rArr; lis3dh_write_regs &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_uninit
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_manager_request
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_tx
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_rx
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_enable
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_disable
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis3dh_write_regs
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_sleep_prepare
</UL>

<P><STRONG><a name="[204]"></a>drv_audio_coder_encode</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, drv_audio_coder_adpcm.o(i.drv_audio_coder_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = drv_audio_coder_encode &rArr; dvi_adpcm_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvi_adpcm_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_audio_process
</UL>

<P><STRONG><a name="[206]"></a>drv_audio_disable</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, drv_audio_pdm.o(i.drv_audio_disable))
<BR><BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_pdm_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mic_stop
</UL>

<P><STRONG><a name="[208]"></a>drv_audio_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, drv_audio_pdm.o(i.drv_audio_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = drv_audio_enable &rArr; nrf_drv_pdm_start
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_pdm_start
</UL>
<BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mic_start
</UL>

<P><STRONG><a name="[20a]"></a>drv_audio_init</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, drv_audio_pdm.o(i.drv_audio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = drv_audio_init &rArr; nrf_drv_pdm_init
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_pdm_init
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mic_init
</UL>

<P><STRONG><a name="[20c]"></a>drv_bh1745_close</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, drv_bh1745.o(i.drv_bh1745_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = drv_bh1745_close &rArr; nrf_drv_twi_uninit
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_uninit
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_stop
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_start
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_sample
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_evt_sceduled
</UL>

<P><STRONG><a name="[20d]"></a>drv_bh1745_data_get</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, drv_bh1745.o(i.drv_bh1745_data_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = drv_bh1745_data_get &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_tx
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_rx
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_evt_sceduled
</UL>

<P><STRONG><a name="[20e]"></a>drv_bh1745_gain_set</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, drv_bh1745.o(i.drv_bh1745_gain_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = drv_bh1745_gain_set &rArr; reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_write
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_start
</UL>

<P><STRONG><a name="[22a]"></a>drv_bh1745_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, drv_bh1745.o(i.drv_bh1745_init))
<BR><BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_init
</UL>

<P><STRONG><a name="[211]"></a>drv_bh1745_int_get</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, drv_bh1745.o(i.drv_bh1745_int_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = drv_bh1745_int_get &rArr; reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_sample
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_evt_sceduled
</UL>

<P><STRONG><a name="[212]"></a>drv_bh1745_int_set</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, drv_bh1745.o(i.drv_bh1745_int_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = drv_bh1745_int_set &rArr; reg_write &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_write
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_start
</UL>

<P><STRONG><a name="[213]"></a>drv_bh1745_manu_id_get</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, drv_bh1745.o(i.drv_bh1745_manu_id_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = drv_bh1745_manu_id_get &rArr; reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_read
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_init
</UL>

<P><STRONG><a name="[214]"></a>drv_bh1745_meas_enable</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, drv_bh1745.o(i.drv_bh1745_meas_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = drv_bh1745_meas_enable &rArr; reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_write
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_stop
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_start
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_sample
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_evt_sceduled
</UL>

<P><STRONG><a name="[215]"></a>drv_bh1745_meas_time_set</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, drv_bh1745.o(i.drv_bh1745_meas_time_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = drv_bh1745_meas_time_set &rArr; reg_write &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_write
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_start
</UL>

<P><STRONG><a name="[216]"></a>drv_bh1745_open</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, drv_bh1745.o(i.drv_bh1745_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = drv_bh1745_open &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_manager_request
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_stop
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_start
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_sample
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_evt_sceduled
</UL>

<P><STRONG><a name="[217]"></a>drv_bh1745_part_id_get</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, drv_bh1745.o(i.drv_bh1745_part_id_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = drv_bh1745_part_id_get &rArr; reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_read
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_init
</UL>

<P><STRONG><a name="[218]"></a>drv_bh1745_persistance_get</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, drv_bh1745.o(i.drv_bh1745_persistance_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = drv_bh1745_persistance_get &rArr; reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_start
</UL>

<P><STRONG><a name="[219]"></a>drv_bh1745_persistance_set</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, drv_bh1745.o(i.drv_bh1745_persistance_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = drv_bh1745_persistance_set &rArr; reg_write &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_write
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_start
</UL>

<P><STRONG><a name="[21a]"></a>drv_bh1745_sw_reset</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, drv_bh1745.o(i.drv_bh1745_sw_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = drv_bh1745_sw_reset &rArr; reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_write
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_stop
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_init
</UL>

<P><STRONG><a name="[21b]"></a>drv_ccs811_alg_result_data_get</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, drv_ccs811.o(i.drv_ccs811_alg_result_data_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = drv_ccs811_alg_result_data_get &rArr; multi_byte_register_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;multi_byte_register_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_start
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_evt_sceduled
</UL>

<P><STRONG><a name="[21d]"></a>drv_ccs811_app_start</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, drv_ccs811.o(i.drv_ccs811_app_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = drv_ccs811_app_start &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_tx
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_start
</UL>

<P><STRONG><a name="[21f]"></a>drv_ccs811_baseline_get</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, drv_ccs811.o(i.drv_ccs811_baseline_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = drv_ccs811_baseline_get &rArr; multi_byte_register_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;multi_byte_register_get
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_baseline_get
</UL>

<P><STRONG><a name="[220]"></a>drv_ccs811_baseline_set</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, drv_ccs811.o(i.drv_ccs811_baseline_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = drv_ccs811_baseline_set &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_tx
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_baseline_set
</UL>

<P><STRONG><a name="[1e4]"></a>drv_ccs811_close</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, drv_ccs811.o(i.drv_ccs811_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = drv_ccs811_close &rArr; nrf_drv_twi_uninit
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_uninit
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccs811_close
</UL>

<P><STRONG><a name="[221]"></a>drv_ccs811_env_data_set</STRONG> (Thumb, 210 bytes, Stack size 16 bytes, drv_ccs811.o(i.drv_ccs811_env_data_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = drv_ccs811_env_data_set &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_tx
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_calibrate_humid_temp
</UL>

<P><STRONG><a name="[222]"></a>drv_ccs811_err_id_get</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, drv_ccs811.o(i.drv_ccs811_err_id_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = drv_ccs811_err_id_get &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_get
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_stop
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_start
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_init
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_calibrate_humid_temp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_baseline_set
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_baseline_get
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_evt_sceduled
</UL>

<P><STRONG><a name="[223]"></a>drv_ccs811_hw_id_get</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, drv_ccs811.o(i.drv_ccs811_hw_id_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = drv_ccs811_hw_id_get &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_get
</UL>
<BR>[Called By]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_init
</UL>

<P><STRONG><a name="[247]"></a>drv_ccs811_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, drv_ccs811.o(i.drv_ccs811_init))
<BR><BR>[Called By]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_init
</UL>

<P><STRONG><a name="[224]"></a>drv_ccs811_meas_mode_get</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, drv_ccs811.o(i.drv_ccs811_meas_mode_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = drv_ccs811_meas_mode_get &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_start
</UL>

<P><STRONG><a name="[225]"></a>drv_ccs811_meas_mode_modify</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, drv_ccs811.o(i.drv_ccs811_meas_mode_modify))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = drv_ccs811_meas_mode_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_tx
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_get
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_stop
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_start
</UL>

<P><STRONG><a name="[226]"></a>drv_ccs811_open</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, drv_ccs811.o(i.drv_ccs811_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = drv_ccs811_open &rArr; twi_manager_request &rArr; nrf_drv_twi_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_manager_request
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_stop
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_start
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_init
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_calibrate_humid_temp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_baseline_set
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_baseline_get
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_evt_sceduled
</UL>

<P><STRONG><a name="[227]"></a>drv_ccs811_status_get</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, drv_ccs811.o(i.drv_ccs811_status_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = drv_ccs811_status_get &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_get
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_stop
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_start
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_init
</UL>

<P><STRONG><a name="[229]"></a>drv_color_init</STRONG> (Thumb, 310 bytes, Stack size 24 bytes, drv_color.o(i.drv_color_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = drv_color_init &rArr; drv_bh1745_part_id_get &rArr; reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_sw_reset
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_part_id_get
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_open
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_meas_enable
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_manu_id_get
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_init
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_close
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_environment_init
</UL>

<P><STRONG><a name="[1cb]"></a>drv_color_sample</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, drv_color.o(i.drv_color_sample))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = drv_color_sample &rArr; drv_bh1745_meas_enable &rArr; reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_open
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_meas_enable
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_int_get
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_close
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_apply
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_timeout_handler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tes_evt_handler
</UL>

<P><STRONG><a name="[1ca]"></a>drv_color_start</STRONG> (Thumb, 372 bytes, Stack size 24 bytes, drv_color.o(i.drv_color_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = drv_color_start &rArr; drv_bh1745_meas_enable &rArr; reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_init
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_is_init
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_persistance_set
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_persistance_get
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_open
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_meas_time_set
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_meas_enable
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_int_set
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_gain_set
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_close
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_apply
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tes_evt_handler
</UL>

<P><STRONG><a name="[1cd]"></a>drv_color_stop</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, drv_color.o(i.drv_color_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = drv_color_stop &rArr; drv_bh1745_meas_enable &rArr; reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_sw_reset
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_open
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_meas_enable
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_close
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_uninit
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_environment_stop
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_apply
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tes_evt_handler
</UL>

<P><STRONG><a name="[1e8]"></a>drv_ext_gpio_cfg</STRONG> (Thumb, 782 bytes, Stack size 40 bytes, drv_ext_gpio.o(i.drv_ext_gpio_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = drv_ext_gpio_cfg &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_pullup_modify
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_pulldown_modify
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_opendrain_modify
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_open
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_inpbufdisable_modify
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_dir_modify
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_close
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_longslewrate_modify
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configure_gpio_for_sleep
</UL>

<P><STRONG><a name="[235]"></a>drv_ext_gpio_cfg_output</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, drv_ext_gpio.o(i.drv_ext_gpio_cfg_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = drv_ext_gpio_cfg_output &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_open
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_dir_modify
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_close
</UL>
<BR>[Called By]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_init
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_batt_meas_init
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mic_init
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_init
</UL>

<P><STRONG><a name="[236]"></a>drv_ext_gpio_init</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, drv_ext_gpio.o(i.drv_ext_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = drv_ext_gpio_init &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_reset
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_open
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_init
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_close
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1e9]"></a>drv_ext_gpio_pin_clear</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, drv_ext_gpio.o(i.drv_ext_gpio_pin_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = drv_ext_gpio_pin_clear &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_open
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_data_modify
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_close
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_stop
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_start
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_init
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_calibrate_humid_temp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_baseline_set
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_baseline_get
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_batt_meas_init
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configure_gpio_for_sleep
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mic_stop
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mic_init
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_init
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_disable
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_evt_sceduled
</UL>

<P><STRONG><a name="[1e5]"></a>drv_ext_gpio_pin_set</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, drv_ext_gpio.o(i.drv_ext_gpio_pin_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = drv_ext_gpio_pin_set &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_open
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_data_modify
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_close
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_start
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_init
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_batt_meas_enable
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configure_gpio_for_sleep
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mic_start
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccs811_close
</UL>

<P><STRONG><a name="[1e7]"></a>drv_ext_gpio_reset</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, drv_ext_gpio.o(i.drv_ext_gpio_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = drv_ext_gpio_reset &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_reset
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_open
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_close
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configure_gpio_for_sleep
</UL>

<P><STRONG><a name="[23a]"></a>drv_ext_light_init</STRONG> (Thumb, 878 bytes, Stack size 32 bytes, drv_ext_light.o(i.drv_ext_light_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = drv_ext_light_init &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx150x_led_drv_calc_init
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_reset
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_pullup_modify
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_pulldown_modify
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_opendrain_modify
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_open
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_misc_modify
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_inpbufdisable_modify
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_init
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_dir_modify
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_data_modify
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_close
</UL>
<BR>[Called By]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_init
</UL>

<P><STRONG><a name="[1cc]"></a>drv_ext_light_off</STRONG> (Thumb, 82 bytes, Stack size 48 bytes, drv_ext_light.o(i.drv_ext_light_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_cmd_process
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_environment_stop
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_data_handler
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_apply
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tes_evt_handler
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_init
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set
</UL>

<P><STRONG><a name="[1c9]"></a>drv_ext_light_rgb_intensity_set</STRONG> (Thumb, 456 bytes, Stack size 32 bytes, drv_ext_light.o(i.drv_ext_light_rgb_intensity_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = drv_ext_light_rgb_intensity_set &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_osc_status_change
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_led_drv_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_apply
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_timeout_handler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tes_evt_handler
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set
</UL>

<P><STRONG><a name="[240]"></a>drv_ext_light_rgb_sequence</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, drv_ext_light.o(i.drv_ext_light_rgb_sequence))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = drv_ext_light_rgb_sequence &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_cmd_process
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set
</UL>

<P><STRONG><a name="[242]"></a>drv_gas_sensor_baseline_get</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, drv_gas_sensor.o(i.drv_gas_sensor_baseline_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = drv_gas_sensor_baseline_get &rArr; ccs811_close &rArr; drv_ext_gpio_pin_set &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_pin_clear
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_us
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccs811_close
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_open
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_err_id_get
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_baseline_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gas_stop
</UL>

<P><STRONG><a name="[244]"></a>drv_gas_sensor_baseline_set</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, drv_gas_sensor.o(i.drv_gas_sensor_baseline_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = drv_gas_sensor_baseline_set &rArr; ccs811_close &rArr; drv_ext_gpio_pin_set &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_pin_clear
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_us
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccs811_close
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_open
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_err_id_get
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_baseline_set
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gas_calib_timeout_handler
</UL>

<P><STRONG><a name="[245]"></a>drv_gas_sensor_calibrate_humid_temp</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, drv_gas_sensor.o(i.drv_gas_sensor_calibrate_humid_temp))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = drv_gas_sensor_calibrate_humid_temp &rArr; ccs811_close &rArr; drv_ext_gpio_pin_set &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_pin_clear
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_us
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccs811_close
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_open
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_err_id_get
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_env_data_set
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_evt_handler
</UL>

<P><STRONG><a name="[246]"></a>drv_gas_sensor_init</STRONG> (Thumb, 590 bytes, Stack size 24 bytes, drv_gas_sensor.o(i.drv_gas_sensor_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = drv_gas_sensor_init &rArr; ccs811_close &rArr; drv_ext_gpio_pin_set &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_pin_set
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_pin_clear
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_cfg_output
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_us
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccs811_close
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_status_get
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_open
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_init
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_hw_id_get
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_err_id_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_environment_init
</UL>

<P><STRONG><a name="[1c7]"></a>drv_gas_sensor_start</STRONG> (Thumb, 462 bytes, Stack size 40 bytes, drv_gas_sensor.o(i.drv_gas_sensor_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = drv_gas_sensor_start &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_pin_set
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_pin_clear
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_init
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_is_init
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_us
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccs811_close
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_status_get
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_open
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_meas_mode_modify
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_meas_mode_get
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_err_id_get
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_app_start
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_alg_result_data_get
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tes_evt_handler
</UL>

<P><STRONG><a name="[248]"></a>drv_gas_sensor_stop</STRONG> (Thumb, 320 bytes, Stack size 16 bytes, drv_gas_sensor.o(i.drv_gas_sensor_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = drv_gas_sensor_stop &rArr; ccs811_close &rArr; drv_ext_gpio_pin_set &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_pin_clear
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_uninit
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_disable
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_us
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccs811_close
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_status_get
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_open
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_meas_mode_modify
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_err_id_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gas_stop
</UL>

<P><STRONG><a name="[249]"></a>drv_hts221_calib_get</STRONG> (Thumb, 220 bytes, Stack size 56 bytes, drv_hts221.o(i.drv_hts221_calib_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = drv_hts221_calib_get &rArr; reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_read
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_init
</UL>

<P><STRONG><a name="[24b]"></a>drv_hts221_cfg_set</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, drv_hts221.o(i.drv_hts221_cfg_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = drv_hts221_cfg_set &rArr; reg_write &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_write
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_init
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_enable
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_disable
</UL>

<P><STRONG><a name="[24d]"></a>drv_hts221_close</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, drv_hts221.o(i.drv_hts221_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = drv_hts221_close &rArr; nrf_drv_twi_uninit
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_uninit
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_temp_get
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_sample
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_init
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_get
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_enable
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_disable
</UL>

<P><STRONG><a name="[24e]"></a>drv_hts221_humidity_get</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, drv_hts221.o(i.drv_hts221_humidity_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = drv_hts221_humidity_get &rArr; reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_read
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_init
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_get
</UL>

<P><STRONG><a name="[24f]"></a>drv_hts221_one_shot</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, drv_hts221.o(i.drv_hts221_one_shot))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = drv_hts221_one_shot &rArr; reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_write
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_sample
</UL>

<P><STRONG><a name="[250]"></a>drv_hts221_open</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, drv_hts221.o(i.drv_hts221_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = drv_hts221_open &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_manager_request
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_temp_get
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_sample
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_init
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_get
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_enable
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_disable
</UL>

<P><STRONG><a name="[251]"></a>drv_hts221_status_get</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, drv_hts221.o(i.drv_hts221_status_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = drv_hts221_status_get &rArr; reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_read
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_init
</UL>

<P><STRONG><a name="[252]"></a>drv_hts221_temperature_get</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, drv_hts221.o(i.drv_hts221_temperature_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = drv_hts221_temperature_get &rArr; reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_read
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_temp_get
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_init
</UL>

<P><STRONG><a name="[253]"></a>drv_hts221_verify</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, drv_hts221.o(i.drv_hts221_verify))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = drv_hts221_verify &rArr; reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_read
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_init
</UL>

<P><STRONG><a name="[1c3]"></a>drv_humidity_disable</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, drv_humidity.o(i.drv_humidity_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = drv_humidity_disable &rArr; drv_hts221_cfg_set &rArr; reg_write &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_uninit
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_disable
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_open
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_close
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_cfg_set
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_environment_stop
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gas_stop
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_apply
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tes_evt_handler
</UL>

<P><STRONG><a name="[1c1]"></a>drv_humidity_enable</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, drv_humidity.o(i.drv_humidity_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = drv_humidity_enable &rArr; drv_hts221_cfg_set &rArr; reg_write &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_init
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_is_init
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_open
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_close
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_cfg_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_apply
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tes_evt_handler
</UL>

<P><STRONG><a name="[255]"></a>drv_humidity_get</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, drv_humidity.o(i.drv_humidity_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = drv_humidity_get &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_open
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_humidity_get
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_close
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_evt_handler
</UL>

<P><STRONG><a name="[258]"></a>drv_humidity_init</STRONG> (Thumb, 316 bytes, Stack size 32 bytes, drv_humidity.o(i.drv_humidity_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = drv_humidity_init &rArr; drv_hts221_calib_get &rArr; reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_open
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_humidity_get
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_close
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_cfg_set
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_calib_get
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_verify
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_temperature_get
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_environment_init
</UL>

<P><STRONG><a name="[1c2]"></a>drv_humidity_sample</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, drv_humidity.o(i.drv_humidity_sample))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = drv_humidity_sample &rArr; drv_hts221_one_shot &rArr; reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_open
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_one_shot
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_close
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temperature_timeout_handler
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;humidity_timeout_handler
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_apply
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tes_evt_handler
</UL>

<P><STRONG><a name="[254]"></a>drv_humidity_temp_get</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, drv_humidity.o(i.drv_humidity_temp_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = drv_humidity_temp_get &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_open
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_close
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_temperature_get
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_evt_handler
</UL>

<P><STRONG><a name="[259]"></a>drv_lps22hb_cfg_set</STRONG> (Thumb, 364 bytes, Stack size 24 bytes, drv_lps22hb.o(i.drv_lps22hb_cfg_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = drv_lps22hb_cfg_set &rArr; reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_write
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_enable
</UL>

<P><STRONG><a name="[25c]"></a>drv_lps22hb_close</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, drv_lps22hb.o(i.drv_lps22hb_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = drv_lps22hb_close &rArr; nrf_drv_twi_uninit
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_uninit
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_sample
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_init
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_get
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_enable
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_disable
</UL>

<P><STRONG><a name="[25d]"></a>drv_lps22hb_odr_set</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, drv_lps22hb.o(i.drv_lps22hb_odr_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = drv_lps22hb_odr_set &rArr; reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_write
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_read
</UL>
<BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_init
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_disable
</UL>

<P><STRONG><a name="[25e]"></a>drv_lps22hb_one_shot</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, drv_lps22hb.o(i.drv_lps22hb_one_shot))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = drv_lps22hb_one_shot &rArr; reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_write
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_sample
</UL>

<P><STRONG><a name="[25f]"></a>drv_lps22hb_open</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, drv_lps22hb.o(i.drv_lps22hb_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = drv_lps22hb_open &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_manager_request
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_sample
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_init
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_get
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_enable
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_disable
</UL>

<P><STRONG><a name="[260]"></a>drv_lps22hb_pressure_get</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, drv_lps22hb.o(i.drv_lps22hb_pressure_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = drv_lps22hb_pressure_get &rArr; reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_read
</UL>
<BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_get
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_enable
</UL>

<P><STRONG><a name="[261]"></a>drv_lps22hb_status_get</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, drv_lps22hb.o(i.drv_lps22hb_status_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = drv_lps22hb_status_get &rArr; reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_enable
</UL>

<P><STRONG><a name="[262]"></a>drv_lps22hb_temperature_get</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, drv_lps22hb.o(i.drv_lps22hb_temperature_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = drv_lps22hb_temperature_get &rArr; reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_enable
</UL>

<P><STRONG><a name="[263]"></a>drv_lps22hb_verify</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, drv_lps22hb.o(i.drv_lps22hb_verify))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = drv_lps22hb_verify &rArr; reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_read
</UL>
<BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_init
</UL>

<P><STRONG><a name="[265]"></a>drv_mic_init</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, drv_mic.o(i.drv_mic_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = drv_mic_init &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_pin_clear
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_cfg_output
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_audio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_sound_init
</UL>

<P><STRONG><a name="[1da]"></a>drv_mic_start</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, drv_mic.o(i.drv_mic_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = drv_mic_start &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_pin_set
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_audio_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tss_evt_handler
</UL>

<P><STRONG><a name="[1db]"></a>drv_mic_stop</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, drv_mic.o(i.drv_mic_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = drv_mic_stop &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_pin_clear
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_audio_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sound_on_ble_evt
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tss_evt_handler
</UL>

<P><STRONG><a name="[1d4]"></a>drv_motion_config</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, drv_motion.o(i.drv_motion_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = drv_motion_config &rArr; drv_motion_enable &rArr; dmp_load_motion_driver_firmware &rArr; mpu_load_firmware &rArr; drv_mpu9250_read &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motion_service_init
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tms_evt_handler
</UL>

<P><STRONG><a name="[1d2]"></a>drv_motion_disable</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, drv_motion.o(i.drv_motion_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = drv_motion_disable &rArr; drv_mpu9250_enable &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_pin_clear
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_config
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motion_on_ble_evt
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tms_evt_handler
</UL>

<P><STRONG><a name="[1d1]"></a>drv_motion_enable</STRONG> (Thumb, 610 bytes, Stack size 32 bytes, drv_motion.o(i.drv_motion_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = drv_motion_enable &rArr; dmp_load_motion_driver_firmware &rArr; mpu_load_firmware &rArr; drv_mpu9250_read &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_pin_set
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_enable
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sensors
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sample_rate
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_dmp_state
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_compass_sample_rate
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_sample_rate
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_gyro_fsr
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_compass_fsr
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_accel_fsr
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_configure_fifo
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_start_mpl
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_gyro_sample_rate
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_gyro_orientation_and_scale
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_compass_sample_rate
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_compass_orientation_and_scale
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_accel_sample_rate
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_accel_orientation_and_scale
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_orientation_matrix_to_scalar
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_mpl
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_enable_vector_compass_cal
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_enable_quaternion
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_enable_magnetic_disturbance
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_enable_in_use_auto_calibration
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_enable_gyro_tc
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_enable_fast_nomot
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_enable_eMPL_outputs
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_enable_9x_sensor_fusion
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_orientation
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_fifo_rate
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_register_tap_cb
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_register_android_orient_cb
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_load_motion_driver_firmware
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_feature
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_config
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tms_evt_handler
</UL>

<P><STRONG><a name="[285]"></a>drv_motion_init</STRONG> (Thumb, 356 bytes, Stack size 40 bytes, drv_motion.o(i.drv_motion_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = drv_motion_init &rArr; drv_acc_init &rArr; lis3dh_write_regs &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_pin_clear
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_cfg_output
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_init
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_acc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_motion_init
</UL>

<P><STRONG><a name="[287]"></a>drv_motion_sleep_prepare</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, drv_motion.o(i.drv_motion_sleep_prepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = drv_motion_sleep_prepare &rArr; drv_acc_wakeup_prepare &rArr; lis3dh_write_regs &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_acc_wakeup_prepare
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_motion_sleep_prepare
</UL>

<P><STRONG><a name="[266]"></a>drv_mpu9250_enable</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, drv_mpu9250.o(i.drv_mpu9250_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = drv_mpu9250_enable &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_init
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_is_init
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_uninit
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_disable
</UL>

<P><STRONG><a name="[286]"></a>drv_mpu9250_init</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, drv_mpu9250.o(i.drv_mpu9250_init))
<BR><BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_init
</UL>

<P><STRONG><a name="[2fe]"></a>drv_mpu9250_int_register</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, drv_mpu9250.o(i.drv_mpu9250_int_register))
<BR><BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
</UL>

<P><STRONG><a name="[288]"></a>drv_mpu9250_ms_get</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, drv_mpu9250.o(i.drv_mpu9250_ms_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = drv_mpu9250_ms_get
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_cnt_get
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_read_fifo
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_temperature
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_compass_reg
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_accel_reg
</UL>

<P><STRONG><a name="[289]"></a>drv_mpu9250_read</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, drv_mpu9250.o(i.drv_mpu9250_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = drv_mpu9250_read &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_uninit
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_manager_request
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_tx
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_rx
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_enable
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sensors
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_read_fifo
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_temperature
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_compass_reg
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_accel_reg
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_bypass
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_read_mem
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_read_fifo_stream
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_load_firmware
</UL>

<P><STRONG><a name="[28a]"></a>drv_mpu9250_write</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, drv_mpu9250.o(i.drv_mpu9250_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = drv_mpu9250_write &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_uninit
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_manager_request
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_tx
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_enable
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_disable
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sensors
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sample_rate
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_dmp_state
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_compass_sample_rate
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_lpf
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_int_latched
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_gyro_fsr
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_bypass
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_accel_fsr
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_reset_fifo
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_read_mem
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_lp_accel_mode
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_load_firmware
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_int_enable
</UL>

<P><STRONG><a name="[1c6]"></a>drv_pressure_disable</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, drv_pressure.o(i.drv_pressure_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = drv_pressure_disable &rArr; drv_lps22hb_odr_set &rArr; reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_uninit
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_open
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_odr_set
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_close
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_environment_stop
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_apply
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tes_evt_handler
</UL>

<P><STRONG><a name="[1c4]"></a>drv_pressure_enable</STRONG> (Thumb, 330 bytes, Stack size 32 bytes, drv_pressure.o(i.drv_pressure_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = drv_pressure_enable &rArr; drv_lps22hb_pressure_get &rArr; reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_init
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_is_init
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_temperature_get
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_status_get
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_pressure_get
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_open
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_close
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_cfg_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_apply
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tes_evt_handler
</UL>

<P><STRONG><a name="[28d]"></a>drv_pressure_get</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, drv_pressure.o(i.drv_pressure_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = drv_pressure_get &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_pressure_get
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_open
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_close
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_evt_handler
</UL>

<P><STRONG><a name="[28f]"></a>drv_pressure_init</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, drv_pressure.o(i.drv_pressure_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = drv_pressure_init &rArr; drv_lps22hb_odr_set &rArr; reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_verify
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_open
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_odr_set
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_close
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_environment_init
</UL>

<P><STRONG><a name="[1c5]"></a>drv_pressure_sample</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, drv_pressure.o(i.drv_pressure_sample))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = drv_pressure_sample &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_open
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_one_shot
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_close
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pressure_timeout_handler
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_apply
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tes_evt_handler
</UL>

<P><STRONG><a name="[1d6]"></a>drv_speaker_ble_pcm_play</STRONG> (Thumb, 400 bytes, Stack size 40 bytes, drv_speaker.o(i.drv_speaker_ble_pcm_play))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = drv_speaker_ble_pcm_play &rArr; seq1_buffer_update &rArr; nrf_drv_pwm_simple_playback
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_pwm_complex_playback
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_exit
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_enter
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seq1_buffer_update
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seq0_buffer_update
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tss_evt_handler
</UL>

<P><STRONG><a name="[293]"></a>drv_speaker_init</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, drv_speaker.o(i.drv_speaker_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = drv_speaker_init &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_pwm_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_sound_init
</UL>

<P><STRONG><a name="[1d9]"></a>drv_speaker_sample_play</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, drv_speaker.o(i.drv_speaker_sample_play))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = drv_speaker_sample_play &rArr; seq1_buffer_update &rArr; nrf_drv_pwm_simple_playback
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_pwm_complex_playback
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seq1_buffer_update
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seq0_buffer_update
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tss_evt_handler
</UL>

<P><STRONG><a name="[1d8]"></a>drv_speaker_tone_start</STRONG> (Thumb, 262 bytes, Stack size 72 bytes, drv_speaker.o(i.drv_speaker_tone_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = drv_speaker_tone_start &rArr; nrf_drv_pwm_simple_playback
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_pwm_stop
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_pwm_simple_playback
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_sin_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tss_evt_handler
</UL>

<P><STRONG><a name="[298]"></a>drv_sx1509_clock_modify</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, drv_sx1509.o(i.drv_sx1509_clock_modify))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = drv_sx1509_clock_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_bits_modify
</UL>
<BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_osc_status_change
</UL>

<P><STRONG><a name="[22e]"></a>drv_sx1509_close</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, drv_sx1509.o(i.drv_sx1509_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = drv_sx1509_close &rArr; nrf_drv_twi_uninit
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_uninit
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_reset
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_pin_set
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_pin_clear
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_init
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_cfg_output
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_cfg
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_light_timer_handler
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_osc_status_change
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_led_drv_ctrl
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_init
</UL>

<P><STRONG><a name="[239]"></a>drv_sx1509_data_modify</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, drv_sx1509.o(i.drv_sx1509_data_modify))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = drv_sx1509_data_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_bits_modify
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_pin_set
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_pin_clear
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_light_timer_handler
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_led_drv_ctrl
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_init
</UL>

<P><STRONG><a name="[234]"></a>drv_sx1509_dir_modify</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, drv_sx1509.o(i.drv_sx1509_dir_modify))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = drv_sx1509_dir_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_bits_modify
</UL>
<BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_cfg_output
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_cfg
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_init
</UL>

<P><STRONG><a name="[237]"></a>drv_sx1509_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, drv_sx1509.o(i.drv_sx1509_init))
<BR><BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_init
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_init
</UL>

<P><STRONG><a name="[231]"></a>drv_sx1509_inpbufdisable_modify</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, drv_sx1509.o(i.drv_sx1509_inpbufdisable_modify))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = drv_sx1509_inpbufdisable_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_bits_modify
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_cfg
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_init
</UL>

<P><STRONG><a name="[29a]"></a>drv_sx1509_leddriverenable_modify</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, drv_sx1509.o(i.drv_sx1509_leddriverenable_modify))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = drv_sx1509_leddriverenable_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_bits_modify
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_led_drv_ctrl
</UL>

<P><STRONG><a name="[233]"></a>drv_sx1509_longslewrate_modify</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, drv_sx1509.o(i.drv_sx1509_longslewrate_modify))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = drv_sx1509_longslewrate_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_bits_modify
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_cfg
</UL>

<P><STRONG><a name="[23c]"></a>drv_sx1509_misc_modify</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, drv_sx1509.o(i.drv_sx1509_misc_modify))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = drv_sx1509_misc_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_bits_modify
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_init
</UL>

<P><STRONG><a name="[29b]"></a>drv_sx1509_onoffcfgx_modify</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, drv_sx1509.o(i.drv_sx1509_onoffcfgx_modify))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = drv_sx1509_onoffcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_bits_modify
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_led_drv_ctrl
</UL>

<P><STRONG><a name="[22d]"></a>drv_sx1509_open</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, drv_sx1509.o(i.drv_sx1509_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = drv_sx1509_open &rArr; twi_manager_request &rArr; nrf_drv_twi_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_manager_request
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_reset
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_pin_set
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_pin_clear
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_init
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_cfg_output
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_cfg
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_light_timer_handler
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_osc_status_change
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_led_drv_ctrl
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_init
</UL>

<P><STRONG><a name="[232]"></a>drv_sx1509_opendrain_modify</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, drv_sx1509.o(i.drv_sx1509_opendrain_modify))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = drv_sx1509_opendrain_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_bits_modify
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_cfg
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_init
</UL>

<P><STRONG><a name="[230]"></a>drv_sx1509_pulldown_modify</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, drv_sx1509.o(i.drv_sx1509_pulldown_modify))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = drv_sx1509_pulldown_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_bits_modify
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_cfg
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_init
</UL>

<P><STRONG><a name="[22f]"></a>drv_sx1509_pullup_modify</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, drv_sx1509.o(i.drv_sx1509_pullup_modify))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = drv_sx1509_pullup_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_bits_modify
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_cfg
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_init
</UL>

<P><STRONG><a name="[238]"></a>drv_sx1509_reset</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, drv_sx1509.o(i.drv_sx1509_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = drv_sx1509_reset &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_tx
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_reset
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_init
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_init
</UL>

<P><STRONG><a name="[29c]"></a>drv_sx1509_risefallcfgx_modify</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, drv_sx1509.o(i.drv_sx1509_risefallcfgx_modify))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = drv_sx1509_risefallcfgx_modify &rArr; register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_bits_modify
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_led_drv_ctrl
</UL>

<P><STRONG><a name="[205]"></a>dvi_adpcm_encode</STRONG> (Thumb, 272 bytes, Stack size 36 bytes, dvi_adpcm.o(i.dvi_adpcm_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = dvi_adpcm_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_audio_coder_encode
</UL>

<P><STRONG><a name="[186]"></a>fabs</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fabs.o(i.fabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[2a0]"></a>fds_gc</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, fds.o(i.fds_gc))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = fds_gc &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;op_enqueue
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_init
</UL>

<P><STRONG><a name="[2a3]"></a>fds_init</STRONG> (Thumb, 596 bytes, Stack size 88 bytes, fds.o(i.fds_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = fds_init &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;op_enqueue
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_init
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_env_flash_init
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_init
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_init
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_motion_flash_init
</UL>

<P><STRONG><a name="[2a5]"></a>fds_record_close</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, fds.o(i.fds_record_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = fds_record_close &rArr; record_find_by_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_find_by_desc
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_env_flash_init
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_config_load
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_init
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_config_load
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_init
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_motion_flash_config_load
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_motion_flash_init
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_env_flash_config_load
</UL>

<P><STRONG><a name="[2a7]"></a>fds_record_find</STRONG> (Thumb, 14 bytes, Stack size 24 bytes, fds.o(i.fds_record_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = fds_record_find &rArr; record_find
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_find
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_env_flash_init
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_config_load
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_init
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_config_load
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_init
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_motion_flash_config_load
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_motion_flash_init
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_env_flash_config_load
</UL>

<P><STRONG><a name="[2a9]"></a>fds_record_open</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, fds.o(i.fds_record_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = fds_record_open &rArr; record_find_by_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_find_by_desc
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_env_flash_init
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_config_load
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_init
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_config_load
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_init
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_motion_flash_config_load
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_motion_flash_init
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_env_flash_config_load
</UL>

<P><STRONG><a name="[2aa]"></a>fds_record_update</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fds.o(i.fds_record_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = fds_record_update &rArr; write_enqueue &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_enqueue
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_env_flash_config_store
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_env_flash_baseline_store
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_config_store
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_config_store
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_motion_flash_config_store
</UL>

<P><STRONG><a name="[2ac]"></a>fds_record_write</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fds.o(i.fds_record_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = fds_record_write &rArr; write_enqueue &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_enqueue
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_env_flash_init
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_init
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_init
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_motion_flash_init
</UL>

<P><STRONG><a name="[2d6]"></a>fds_register</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fds.o(i.fds_register))
<BR><BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_env_flash_init
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_init
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_init
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_motion_flash_init
</UL>

<P><STRONG><a name="[41]"></a>flash_callback</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ble_dfu.o(i.flash_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = flash_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_dfu.o(i.ble_dfu_on_ble_evt)
</UL>
<P><STRONG><a name="[28c]"></a>free</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_write
</UL>

<P><STRONG><a name="[2ad]"></a>fs_erase</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, fstorage.o(i.fs_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = fs_erase &rArr; queue_process
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_record_find_next
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_dfu_flash_erase
</UL>

<P><STRONG><a name="[2a4]"></a>fs_init</STRONG> (Thumb, 186 bytes, Stack size 28 bytes, fstorage.o(i.fs_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = fs_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_init
</UL>

<P><STRONG><a name="[1af]"></a>fs_queued_op_count_get</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, fstorage.o(i.fs_queued_op_count_get))
<BR><BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_evt_dispatch
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[2af]"></a>fs_store</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, fstorage.o(i.fs_store))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = fs_store &rArr; queue_process
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_record_find_next
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_dfu_flash_store
</UL>

<P><STRONG><a name="[2b0]"></a>fs_sys_event_handler</STRONG> (Thumb, 488 bytes, Stack size 32 bytes, fstorage.o(i.fs_sys_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = fs_sys_event_handler &rArr; queue_process
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_evt_dispatch
</UL>

<P><STRONG><a name="[2b3]"></a>intern_softdevice_events_execute</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, softdevice_handler.o(i.intern_softdevice_events_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = intern_softdevice_events_execute &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_clock_on_soc_event
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_evt_get
</UL>

<P><STRONG><a name="[2b4]"></a>inv_apply_calibration</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, data_builder.o(i.inv_apply_calibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = inv_apply_calibration &rArr; inv_convert_to_body_with_scale
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_convert_to_body_with_scale
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_build_gyro
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_build_compass
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_build_accel
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_gyro_bias
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_compass_bias
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_accel_bias_mask
</UL>

<P><STRONG><a name="[2b5]"></a>inv_build_accel</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, data_builder.o(i.inv_build_accel))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = inv_build_accel &rArr; inv_apply_calibration &rArr; inv_convert_to_body_with_scale
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_apply_calibration
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpulib_data_handler_cb
</UL>

<P><STRONG><a name="[2b6]"></a>inv_build_compass</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, data_builder.o(i.inv_build_compass))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = inv_build_compass &rArr; inv_apply_calibration &rArr; inv_convert_to_body_with_scale
</UL>
<BR>[Calls]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mlMatrixVectorMult
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_apply_calibration
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpulib_data_handler_cb
</UL>

<P><STRONG><a name="[2b8]"></a>inv_build_gyro</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, data_builder.o(i.inv_build_gyro))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = inv_build_gyro &rArr; inv_apply_calibration &rArr; inv_convert_to_body_with_scale
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_apply_calibration
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpulib_data_handler_cb
</UL>

<P><STRONG><a name="[304]"></a>inv_build_quat</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, data_builder.o(i.inv_build_quat))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = inv_build_quat
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpulib_data_handler_cb
</UL>

<P><STRONG><a name="[303]"></a>inv_build_temp</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, data_builder.o(i.inv_build_temp))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpulib_data_handler_cb
</UL>

<P><STRONG><a name="[10d]"></a>inv_compass_angle</STRONG> (Thumb, 212 bytes, Stack size 72 bytes, ml_math_func.o(i.inv_compass_angle))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = inv_compass_angle &rArr; __hardfp_atan2f
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q_mult
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2f
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_find_synchronized_compass_angle
</UL>

<P><STRONG><a name="[93]"></a>inv_convert_to_body_with_scale</STRONG> (Thumb, 118 bytes, Stack size 4 bytes, ml_math_func.o(i.inv_convert_to_body_with_scale))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = inv_convert_to_body_with_scale
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_apply_calibration
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_dmp_quaternion
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_current_calibrated_compass
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_current_calibrated_accel
</UL>

<P><STRONG><a name="[269]"></a>inv_enable_eMPL_outputs</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, empl_outputs.o(i.inv_enable_eMPL_outputs))
<BR><BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_register_mpl_start_notification
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
</UL>

<P><STRONG><a name="[2b9]"></a>inv_enable_results_holder</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, results_holder.o(i.inv_enable_results_holder))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = inv_enable_results_holder
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_register_mpl_start_notification
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_mpl
</UL>

<P><STRONG><a name="[2ce]"></a>inv_execute_mpl_start_notification</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, start_manager.o(i.inv_execute_mpl_start_notification))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = inv_execute_mpl_start_notification
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_start_mpl
</UL>

<P><STRONG><a name="[305]"></a>inv_execute_on_data</STRONG> (Thumb, 284 bytes, Stack size 24 bytes, data_builder.o(i.inv_execute_on_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = inv_execute_on_data
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpulib_data_handler_cb
</UL>

<P><STRONG><a name="[5d]"></a>inv_generate_results</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, results_holder.o(i.inv_generate_results))
<BR>[Address Reference Count : 1]<UL><LI> results_holder.o(i.inv_start_results_holder)
</UL>
<P><STRONG><a name="[de]"></a>inv_get_6axis_quaternion</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, results_holder.o(i.inv_get_6axis_quaternion))
<BR><BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_magnetic_disturbance_process
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_perform_9x_fusion
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_sim
</UL>

<P><STRONG><a name="[12b]"></a>inv_get_acc_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, results_holder.o(i.inv_get_acc_state))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MagDisturbCheckSettling
</UL>

<P><STRONG><a name="[2c2]"></a>inv_get_accel_accuracy</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, data_builder.o(i.inv_get_accel_accuracy))
<BR><BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_quaternion_set
</UL>

<P><STRONG><a name="[2c1]"></a>inv_get_accel_on</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, data_builder.o(i.inv_get_accel_on))
<BR><BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_quaternion_set
</UL>

<P><STRONG><a name="[2bc]"></a>inv_get_accel_set</STRONG> (Thumb, 44 bytes, Stack size 4 bytes, data_builder.o(i.inv_get_accel_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = inv_get_accel_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_sensor_type_accel
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_linear_accel_float
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_linear_accel
</UL>

<P><STRONG><a name="[d4]"></a>inv_get_compass_bias</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, data_builder.o(i.inv_get_compass_bias))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_current_calibrated_compass
</UL>

<P><STRONG><a name="[135]"></a>inv_get_compass_correction</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, results_holder.o(i.inv_get_compass_correction))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = inv_get_compass_correction
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_magnetic_disturbance
</UL>

<P><STRONG><a name="[2be]"></a>inv_get_compass_on</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, data_builder.o(i.inv_get_compass_on))
<BR><BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_quaternion_set
</UL>

<P><STRONG><a name="[2c5]"></a>inv_get_compass_set</STRONG> (Thumb, 60 bytes, Stack size 4 bytes, data_builder.o(i.inv_get_compass_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = inv_get_compass_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_sensor_type_compass
</UL>

<P><STRONG><a name="[d9]"></a>inv_get_compass_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, results_holder.o(i.inv_get_compass_state))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_ignore_compass_data
</UL>

<P><STRONG><a name="[95]"></a>inv_get_gravity</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, results_holder.o(i.inv_get_gravity))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = inv_get_gravity
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q29_mult
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_sensor_type_gravity
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_magnetic_disturbance_process
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_perform_9x_fusion
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_push
</UL>

<P><STRONG><a name="[130]"></a>inv_get_gyro</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, data_builder.o(i.inv_get_gyro))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_magnetic_disturbance
</UL>

<P><STRONG><a name="[2c0]"></a>inv_get_gyro_accuracy</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, data_builder.o(i.inv_get_gyro_accuracy))
<BR><BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_quaternion_set
</UL>

<P><STRONG><a name="[11f]"></a>inv_get_gyro_bias</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, data_builder.o(i.inv_get_gyro_bias))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_dmp_quaternion
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_gtc_data_cb
</UL>

<P><STRONG><a name="[121]"></a>inv_get_gyro_bias_tc_set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, data_builder.o(i.inv_get_gyro_bias_tc_set))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_gtc_data_cb
</UL>

<P><STRONG><a name="[12f]"></a>inv_get_gyro_on</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, data_builder.o(i.inv_get_gyro_on))
<BR><BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_quaternion_set
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_magnetic_disturbance
</UL>

<P><STRONG><a name="[2c8]"></a>inv_get_gyro_set</STRONG> (Thumb, 42 bytes, Stack size 4 bytes, data_builder.o(i.inv_get_gyro_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = inv_get_gyro_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_sensor_type_gyro
</UL>

<P><STRONG><a name="[da]"></a>inv_get_gyro_sum_of_sqr</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ml_math_func.o(i.inv_get_gyro_sum_of_sqr))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_magnetic_disturbance
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_perform_9x_fusion
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_ignore_compass_data
</UL>

<P><STRONG><a name="[d8]"></a>inv_get_large_mag_field</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, results_holder.o(i.inv_get_large_mag_field))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_ignore_compass_data
</UL>

<P><STRONG><a name="[2bd]"></a>inv_get_last_timestamp</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, data_builder.o(i.inv_get_last_timestamp))
<BR><BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_quaternion_set
</UL>

<P><STRONG><a name="[97]"></a>inv_get_linear_accel</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, results_holder.o(i.inv_get_linear_accel))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = inv_get_linear_accel &rArr; inv_get_accel_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q29_mult
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_accel_set
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_accel_gyro_quaternion
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_push
</UL>

<P><STRONG><a name="[b5]"></a>inv_get_linear_accel_float</STRONG> (Thumb, 178 bytes, Stack size 40 bytes, results_holder.o(i.inv_get_linear_accel_float))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = inv_get_linear_accel_float &rArr; inv_get_accel_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q29_mult
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_accel_set
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_auto_calibrate
</UL>

<P><STRONG><a name="[133]"></a>inv_get_local_field</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, results_holder.o(i.inv_get_local_field))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_magnetic_disturbance
</UL>

<P><STRONG><a name="[2bf]"></a>inv_get_mag_accuracy</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, data_builder.o(i.inv_get_mag_accuracy))
<BR><BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_quaternion_set
</UL>

<P><STRONG><a name="[120]"></a>inv_get_motion_state</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, results_holder.o(i.inv_get_motion_state))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_gtc_data_cb
</UL>

<P><STRONG><a name="[b8]"></a>inv_get_quaternion</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, results_holder.o(i.inv_get_quaternion))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = inv_get_quaternion &rArr; inv_q_mult
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q_mult
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_auto_calibrate
</UL>

<P><STRONG><a name="[2ba]"></a>inv_get_quaternion_set</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, results_holder.o(i.inv_get_quaternion_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = inv_get_quaternion_set &rArr; inv_q_mult
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q_mult
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_mag_accuracy
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_last_timestamp
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_gyro_on
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_gyro_accuracy
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_compass_on
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_accel_on
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_accel_accuracy
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_eMPL_outputs
</UL>

<P><STRONG><a name="[2c3]"></a>inv_get_sensor_type_accel</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, empl_outputs.o(i.inv_get_sensor_type_accel))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = inv_get_sensor_type_accel &rArr; inv_get_accel_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_accel_set
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpulib_data_handler_cb
</UL>

<P><STRONG><a name="[2c4]"></a>inv_get_sensor_type_compass</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, empl_outputs.o(i.inv_get_sensor_type_compass))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = inv_get_sensor_type_compass &rArr; inv_get_compass_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_compass_set
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpulib_data_handler_cb
</UL>

<P><STRONG><a name="[2c6]"></a>inv_get_sensor_type_euler</STRONG> (Thumb, 424 bytes, Stack size 104 bytes, empl_outputs.o(i.inv_get_sensor_type_euler))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = inv_get_sensor_type_euler &rArr; __hardfp_atan2f
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q29_mult
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2f
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpulib_data_handler_cb
</UL>

<P><STRONG><a name="[ae]"></a>inv_get_sensor_type_gravity</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, hal_outputs.o(i.inv_get_sensor_type_gravity))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = inv_get_sensor_type_gravity &rArr; inv_get_gravity
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_gravity
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpulib_data_handler_cb
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_add_vector_block_data
</UL>

<P><STRONG><a name="[2c7]"></a>inv_get_sensor_type_gyro</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, empl_outputs.o(i.inv_get_sensor_type_gyro))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = inv_get_sensor_type_gyro &rArr; inv_get_gyro_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_gyro_set
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpulib_data_handler_cb
</UL>

<P><STRONG><a name="[2c9]"></a>inv_get_sensor_type_heading</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, empl_outputs.o(i.inv_get_sensor_type_heading))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = inv_get_sensor_type_heading &rArr; __hardfp_atan2f
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q29_mult
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2f
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpulib_data_handler_cb
</UL>

<P><STRONG><a name="[306]"></a>inv_get_sensor_type_quat</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, empl_outputs.o(i.inv_get_sensor_type_quat))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = inv_get_sensor_type_quat
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpulib_data_handler_cb
</UL>

<P><STRONG><a name="[2ca]"></a>inv_get_sensor_type_rot_mat</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, empl_outputs.o(i.inv_get_sensor_type_rot_mat))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = inv_get_sensor_type_rot_mat
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_quaternion_to_rotation
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpulib_data_handler_cb
</UL>

<P><STRONG><a name="[d6]"></a>inv_got_compass_bias</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, results_holder.o(i.inv_got_compass_bias))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_magnetic_disturbance
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_add_compass_block_data
</UL>

<P><STRONG><a name="[2cb]"></a>inv_init_data_builder</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, data_builder.o(i.inv_init_data_builder))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = inv_init_data_builder &rArr; inv_register_load_store
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_register_load_store
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_mpl
</UL>

<P><STRONG><a name="[268]"></a>inv_init_mpl</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, mpl.o(i.inv_init_mpl))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = inv_init_mpl &rArr; _MLPrintLog &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MLPrintLog
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_storage_manager
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_start_manager
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_enable_results_holder
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_data_builder
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
</UL>

<P><STRONG><a name="[2cd]"></a>inv_init_start_manager</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, start_manager.o(i.inv_init_start_manager))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = inv_init_start_manager
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_mpl
</UL>

<P><STRONG><a name="[2cc]"></a>inv_init_storage_manager</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, storage_manager.o(i.inv_init_storage_manager))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = inv_init_storage_manager
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_mpl
</UL>

<P><STRONG><a name="[275]"></a>inv_orientation_matrix_to_scalar</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, ml_math_func.o(i.inv_orientation_matrix_to_scalar))
<BR><BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
</UL>

<P><STRONG><a name="[2bb]"></a>inv_q29_mult</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ml_math_func.o(i.inv_q29_mult))
<BR><BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_sensor_type_heading
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_sensor_type_euler
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_linear_accel_float
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_linear_accel
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_gravity
</UL>

<P><STRONG><a name="[a3]"></a>inv_q30_mult</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ml_math_func.o(i.inv_q30_mult))
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_accel_gyro_quaternion
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_gyro_quaternion
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_fast_nomot_set_gyro_bias
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_auto_calibrate
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_combine_data_calculate_bias
</UL>

<P><STRONG><a name="[143]"></a>inv_q_add</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ml_math_func.o(i.inv_q_add))
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_accel_gyro_quaternion
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_gyro_quaternion
</UL>

<P><STRONG><a name="[13e]"></a>inv_q_addf</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, ml_math_func.o(i.inv_q_addf))
<BR><BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_fusion
</UL>

<P><STRONG><a name="[df]"></a>inv_q_invert</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ml_math_func.o(i.inv_q_invert))
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_accel_gyro_quaternion
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_quaternion
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_dmp_quaternion
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_magnetic_disturbance
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComputeAngleVelocity
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_perform_9x_fusion
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_sim
</UL>

<P><STRONG><a name="[13d]"></a>inv_q_invertf</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, ml_math_func.o(i.inv_q_invertf))
<BR><BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_fusion
</UL>

<P><STRONG><a name="[e0]"></a>inv_q_mult</STRONG> (Thumb, 304 bytes, Stack size 4 bytes, ml_math_func.o(i.inv_q_mult))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = inv_q_mult
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_quaternion
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q_rotate
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_compass_angle
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_quaternion_set
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_accel_gyro_quaternion
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_quaternion
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_gyro_quaternion
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_dmp_quaternion
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComputeAngleVelocity
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_perform_9x_fusion
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_find_synchronized_compass_angle
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_sim
</UL>

<P><STRONG><a name="[112]"></a>inv_q_multf</STRONG> (Thumb, 210 bytes, Stack size 0 bytes, ml_math_func.o(i.inv_q_multf))
<BR><BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_fusion
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_perform_9x_fusion
</UL>

<P><STRONG><a name="[13f]"></a>inv_q_norm4</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, ml_math_func.o(i.inv_q_norm4))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = inv_q_norm4 &rArr; __hardfp_sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_fusion
</UL>

<P><STRONG><a name="[114]"></a>inv_q_normalizef</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, ml_math_func.o(i.inv_q_normalizef))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_perform_9x_fusion
</UL>

<P><STRONG><a name="[147]"></a>inv_q_rotate</STRONG> (Thumb, 82 bytes, Stack size 80 bytes, ml_math_func.o(i.inv_q_rotate))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = inv_q_rotate &rArr; inv_q_mult
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q_mult
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_accel_gyro_quaternion
</UL>

<P><STRONG><a name="[110]"></a>inv_quaternion_to_rotation</STRONG> (Thumb, 306 bytes, Stack size 0 bytes, ml_math_func.o(i.inv_quaternion_to_rotation))
<BR><BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_sensor_type_rot_mat
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComputeAngleVelocity
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_perform_9x_fusion
</UL>

<P><STRONG><a name="[c3]"></a>inv_register_data_cb</STRONG> (Thumb, 254 bytes, Stack size 32 bytes, data_builder.o(i.inv_register_data_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = inv_register_data_cb &rArr; _MLPrintLog &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MLPrintLog
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_start_eMPL_outputs
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_start_results_holder
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_start_quaternion
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_start_magnetic_disturbance
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_start_gyro_tc
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_start_9x_sensor_fusion
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_start_fast_nomot
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_start_vector_compass_cal
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_start_in_use_auto_calibration
</UL>

<P><STRONG><a name="[126]"></a>inv_register_load_store</STRONG> (Thumb, 166 bytes, Stack size 20 bytes, storage_manager.o(i.inv_register_load_store))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = inv_register_load_store
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_enable_gyro_tc
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_data_builder
</UL>

<P><STRONG><a name="[c7]"></a>inv_register_mpl_start_notification</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, start_manager.o(i.inv_register_mpl_start_notification))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_enable_vector_compass_cal
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_enable_quaternion
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_enable_magnetic_disturbance
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_enable_in_use_auto_calibration
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_enable_gyro_tc
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_enable_fast_nomot
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_enable_eMPL_outputs
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_enable_9x_sensor_fusion
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_enable_results_holder
</UL>

<P><STRONG><a name="[9a]"></a>inv_set_accel_accuracy</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, data_builder.o(i.inv_set_accel_accuracy))
<BR><BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_message
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_push
</UL>

<P><STRONG><a name="[99]"></a>inv_set_accel_bias_found</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, results_holder.o(i.inv_set_accel_bias_found))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_push
</UL>

<P><STRONG><a name="[98]"></a>inv_set_accel_bias_mask</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, data_builder.o(i.inv_set_accel_bias_mask))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = inv_set_accel_bias_mask &rArr; inv_apply_calibration &rArr; inv_convert_to_body_with_scale
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_message
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_apply_calibration
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_push
</UL>

<P><STRONG><a name="[277]"></a>inv_set_accel_orientation_and_scale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, data_builder.o(i.inv_set_accel_orientation_and_scale))
<BR><BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
</UL>

<P><STRONG><a name="[273]"></a>inv_set_accel_sample_rate</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, data_builder.o(i.inv_set_accel_sample_rate))
<BR><BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
</UL>

<P><STRONG><a name="[e6]"></a>inv_set_compass_bias</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, data_builder.o(i.inv_set_compass_bias))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = inv_set_compass_bias &rArr; inv_apply_calibration &rArr; inv_convert_to_body_with_scale
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_message
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_apply_calibration
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_compass_only_cal
</UL>

<P><STRONG><a name="[e8]"></a>inv_set_compass_bias_error</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, results_holder.o(i.inv_set_compass_bias_error))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_compass_only_cal
</UL>

<P><STRONG><a name="[e7]"></a>inv_set_compass_bias_found</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, results_holder.o(i.inv_set_compass_bias_found))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_db_load_func
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_compass_only_cal
</UL>

<P><STRONG><a name="[115]"></a>inv_set_compass_correction</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, results_holder.o(i.inv_set_compass_correction))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = inv_set_compass_correction
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MagDisturbSetDisturbance
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_9x_fusion
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_perform_9x_fusion
</UL>

<P><STRONG><a name="[137]"></a>inv_set_compass_disturbance</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, data_builder.o(i.inv_set_compass_disturbance))
<BR><BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_magnetic_disturbance_process
</UL>

<P><STRONG><a name="[278]"></a>inv_set_compass_orientation_and_scale</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, data_builder.o(i.inv_set_compass_orientation_and_scale))
<BR><BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
</UL>

<P><STRONG><a name="[274]"></a>inv_set_compass_sample_rate</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, data_builder.o(i.inv_set_compass_sample_rate))
<BR><BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
</UL>

<P><STRONG><a name="[e5]"></a>inv_set_compass_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, results_holder.o(i.inv_set_compass_state))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_compass_only_cal
</UL>

<P><STRONG><a name="[f6]"></a>inv_set_gyro_bias</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, data_builder.o(i.inv_set_gyro_bias))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = inv_set_gyro_bias &rArr; inv_apply_calibration &rArr; inv_convert_to_body_with_scale
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_message
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_apply_calibration
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_gtc_data_cb
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_fast_nomot_set_gyro_bias
</UL>

<P><STRONG><a name="[276]"></a>inv_set_gyro_orientation_and_scale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, data_builder.o(i.inv_set_gyro_orientation_and_scale))
<BR><BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
</UL>

<P><STRONG><a name="[272]"></a>inv_set_gyro_sample_rate</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, data_builder.o(i.inv_set_gyro_sample_rate))
<BR><BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
</UL>

<P><STRONG><a name="[108]"></a>inv_set_message</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, message_layer.o(i.inv_set_message))
<BR><BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_motion_state
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_gyro_bias
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_compass_bias
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_accel_bias_mask
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_accel_accuracy
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_start_fast_nomot
</UL>

<P><STRONG><a name="[f7]"></a>inv_set_motion_state</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, results_holder.o(i.inv_set_motion_state))
<BR><BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_message
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_stop_fast_nomot
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_fast_nomot
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_fast_nomot_set_gyro_bias
</UL>

<P><STRONG><a name="[26a]"></a>inv_start_mpl</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, mpl.o(i.inv_start_mpl))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = inv_start_mpl &rArr; _MLPrintLog &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MLPrintLog
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_execute_mpl_start_notification
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
</UL>

<P><STRONG><a name="[59]"></a>inv_start_results_holder</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, results_holder.o(i.inv_start_results_holder))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = inv_start_results_holder &rArr; inv_register_data_cb &rArr; _MLPrintLog &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_register_data_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> results_holder.o(i.inv_enable_results_holder)
</UL>
<P><STRONG><a name="[148]"></a>inv_store_gaming_quaternion</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, results_holder.o(i.inv_store_gaming_quaternion))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = inv_store_gaming_quaternion
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_quaternion
</UL>

<P><STRONG><a name="[c5]"></a>inv_unregister_data_cb</STRONG> (Thumb, 210 bytes, Stack size 16 bytes, data_builder.o(i.inv_unregister_data_cb), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_disable_quaternion
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_stop_quaternion
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_disable_magnetic_disturbance
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_stop_magnetic_disturbance
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_disable_gyro_tc
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_stop_gyro_tc
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_stop_9x_sensor_fusion
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_stop_fast_nomot
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_disable_vector_compass_cal
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_stop_vector_compass_cal
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_disable_in_use_auto_calibration
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_stop_in_use_auto_calibration
</UL>

<P><STRONG><a name="[c9]"></a>inv_unregister_mpl_start_notification</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, start_manager.o(i.inv_unregister_mpl_start_notification), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove4
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_disable_quaternion
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_disable_gyro_tc
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_disable_9x_sensor_fusion
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_disable_fast_nomot
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_disable_vector_compass_cal
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_disable_in_use_auto_calibration
</UL>

<P><STRONG><a name="[2d0]"></a>m_batt_meas_enable</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, m_batt_meas.o(i.m_batt_meas_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = m_batt_meas_enable &rArr; app_timer_periodic_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_pin_set
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_periodic_handler
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2d1]"></a>m_batt_meas_init</STRONG> (Thumb, 430 bytes, Stack size 32 bytes, m_batt_meas.o(i.m_batt_meas_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = m_batt_meas_init &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_pin_clear
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_cfg_output
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_saadc_init
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_saadc_calibrate_offset
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_init
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_is_init
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2d3]"></a>m_ble_flash_config_load</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, m_ble_flash.o(i.m_ble_flash_config_load), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_open
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_find
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_close
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[2d4]"></a>m_ble_flash_config_store</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, m_ble_flash.o(i.m_ble_flash_config_store))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = m_ble_flash_config_store &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_update
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcs_evt_handler
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
</UL>

<P><STRONG><a name="[2d5]"></a>m_ble_flash_init</STRONG> (Thumb, 406 bytes, Stack size 56 bytes, m_ble_flash.o(i.m_ble_flash_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = m_ble_flash_init &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_register
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_write
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_open
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_find
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_close
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_init
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_gc
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_execute
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
</UL>

<P><STRONG><a name="[2d8]"></a>m_ble_init</STRONG> (Thumb, 1126 bytes, Stack size 128 bytes, m_ble.o(i.m_ble_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 728<LI>Call Chain = m_ble_init &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_sys_evt_handler_set
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_handler_init
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_enable_get_default_config
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_enable
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_ble_evt_handler_set
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_init
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_config_store
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tcs_init
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dfu_init
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_init
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_init
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_beacon_stop
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_beacon_start
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_beacon_init
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2b1]"></a>m_env_flash_baseline_store</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, m_environment_flash.o(i.m_env_flash_baseline_store))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = m_env_flash_baseline_store &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_update
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gas_stop
</UL>

<P><STRONG><a name="[2e2]"></a>m_env_flash_config_load</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, m_environment_flash.o(i.m_env_flash_config_load), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_open
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_find
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_close
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
</UL>

<P><STRONG><a name="[1ce]"></a>m_env_flash_config_store</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, m_environment_flash.o(i.m_env_flash_config_store))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = m_env_flash_config_store &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_update
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;environment_service_init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tes_evt_handler
</UL>

<P><STRONG><a name="[29e]"></a>m_env_flash_init</STRONG> (Thumb, 646 bytes, Stack size 80 bytes, m_environment_flash.o(i.m_env_flash_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = m_env_flash_init &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_register
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_write
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_open
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_find
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_close
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_init
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_execute
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;environment_service_init
</UL>

<P><STRONG><a name="[2e3]"></a>m_environment_init</STRONG> (Thumb, 352 bytes, Stack size 40 bytes, m_environment.o(i.m_environment_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = m_environment_init &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_init
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_init
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_init
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_init
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[29d]"></a>m_environment_stop</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, m_environment.o(i.m_environment_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = m_environment_stop &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_disable
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_disable
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_off
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_stop
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gas_stop
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;environment_on_ble_evt
</UL>

<P><STRONG><a name="[2ee]"></a>m_handle_radio_disabled</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, advertiser_beacon_timeslot.o(i.m_handle_radio_disabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = m_handle_radio_disabled
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_timeslot_callback
</UL>

<P><STRONG><a name="[2e4]"></a>m_handle_start</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, advertiser_beacon_timeslot.o(i.m_handle_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = m_handle_start &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_timeslot_callback
</UL>

<P><STRONG><a name="[2e9]"></a>m_motion_flash_config_load</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, m_motion_flash.o(i.m_motion_flash_config_load), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_open
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_find
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_close
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
</UL>

<P><STRONG><a name="[1d3]"></a>m_motion_flash_config_store</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, m_motion_flash.o(i.m_motion_flash_config_store))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = m_motion_flash_config_store &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_update
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tms_evt_handler
</UL>

<P><STRONG><a name="[2ea]"></a>m_motion_flash_init</STRONG> (Thumb, 346 bytes, Stack size 56 bytes, m_motion_flash.o(i.m_motion_flash_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = m_motion_flash_init &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_register
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_write
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_open
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_find
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_close
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_init
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_execute
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motion_service_init
</UL>

<P><STRONG><a name="[2eb]"></a>m_motion_init</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, m_motion.o(i.m_motion_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = m_motion_init &rArr; drv_motion_init &rArr; drv_acc_init &rArr; lis3dh_write_regs &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_init
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2ec]"></a>m_motion_sleep_prepare</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, m_motion.o(i.m_motion_sleep_prepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = m_motion_sleep_prepare &rArr; drv_motion_sleep_prepare &rArr; drv_acc_wakeup_prepare &rArr; lis3dh_write_regs &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_sleep_prepare
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thingy_ble_evt_handler
</UL>

<P><STRONG><a name="[2ed]"></a>m_sound_init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, m_sound.o(i.m_sound_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = m_sound_init &rArr; drv_speaker_init &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_speaker_init
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mic_init
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2ef]"></a>m_ui_flash_config_load</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, m_ui_flash.o(i.m_ui_flash_config_load), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_open
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_find
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_close
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
</UL>

<P><STRONG><a name="[1de]"></a>m_ui_flash_config_store</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, m_ui_flash.o(i.m_ui_flash_config_store))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = m_ui_flash_config_store &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_update
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_5
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uis_led_write_handler
</UL>

<P><STRONG><a name="[2f0]"></a>m_ui_flash_init</STRONG> (Thumb, 350 bytes, Stack size 64 bytes, m_ui_flash.o(i.m_ui_flash_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = m_ui_flash_init &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_register
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_write
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_open
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_find
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_close
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_init
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_execute
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_5
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thingy_ui_service_init
</UL>

<P><STRONG><a name="[2f1]"></a>m_ui_init</STRONG> (Thumb, 222 bytes, Stack size 40 bytes, m_ui.o(i.m_ui_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = m_ui_init &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_off
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_is_init
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_init
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_init
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[199]"></a>m_ui_led_set_event</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, m_ui.o(i.m_ui_led_set_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
</UL>

<P><STRONG><a name="[32]"></a>main</STRONG> (Thumb, 436 bytes, Stack size 56 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 984<LI>Call Chain = main &rArr; configure_gpio_for_sleep &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_manager_init
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;support_func_ble_mac_address_print_rtt
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_led_set_event
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_init
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_sound_init
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_motion_init
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_environment_init
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_batt_meas_init
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_batt_meas_enable
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_pin_set
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_init
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_cfg_output
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_init
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_init
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_execute
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteString
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_us
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configure_gpio_for_sleep
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[28b]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_write
</UL>

<P><STRONG><a name="[2b7]"></a>mlMatrixVectorMult</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, ml_math_func.o(i.mlMatrixVectorMult))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = mlMatrixVectorMult
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_build_compass
</UL>

<P><STRONG><a name="[26c]"></a>mpu_configure_fifo</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, inv_mpu.o(i.mpu_configure_fifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = mpu_configure_fifo &rArr; mpu_reset_fifo &rArr; drv_mpu9250_write &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_reset_fifo
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_int_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_lp_accel_mode
</UL>

<P><STRONG><a name="[1fa]"></a>mpu_get_accel_fsr</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, inv_mpu.o(i.mpu_get_accel_fsr))
<BR><BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_tap_thresh
</UL>

<P><STRONG><a name="[2f7]"></a>mpu_get_accel_reg</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, inv_mpu.o(i.mpu_get_accel_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = mpu_get_accel_reg &rArr; drv_mpu9250_read &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_read
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_ms_get
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpulib_data_handler_cb
</UL>

<P><STRONG><a name="[271]"></a>mpu_get_compass_fsr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, inv_mpu.o(i.mpu_get_compass_fsr))
<BR><BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
</UL>

<P><STRONG><a name="[2f8]"></a>mpu_get_compass_reg</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, inv_mpu.o(i.mpu_get_compass_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = mpu_get_compass_reg &rArr; drv_mpu9250_read &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_read
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_ms_get
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpulib_data_handler_cb
</UL>

<P><STRONG><a name="[270]"></a>mpu_get_gyro_fsr</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, inv_mpu.o(i.mpu_get_gyro_fsr))
<BR><BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
</UL>

<P><STRONG><a name="[26f]"></a>mpu_get_sample_rate</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, inv_mpu.o(i.mpu_get_sample_rate))
<BR><BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
</UL>

<P><STRONG><a name="[2f9]"></a>mpu_get_temperature</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, inv_mpu.o(i.mpu_get_temperature))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = mpu_get_temperature &rArr; drv_mpu9250_read &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_read
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_ms_get
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpulib_data_handler_cb
</UL>

<P><STRONG><a name="[267]"></a>mpu_init</STRONG> (Thumb, 748 bytes, Stack size 32 bytes, inv_mpu.o(i.mpu_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 744<LI>Call Chain = mpu_init &rArr; mpu_set_sample_rate &rArr; mpu_lp_accel_mode &rArr; mpu_configure_fifo &rArr; mpu_reset_fifo &rArr; drv_mpu9250_write &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_write
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_read
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_int_register
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sensors
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sample_rate
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_configure_fifo
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MLPrintLog
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_lpf
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_gyro_fsr
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_bypass
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_accel_fsr
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
</UL>

<P><STRONG><a name="[1f4]"></a>mpu_load_firmware</STRONG> (Thumb, 304 bytes, Stack size 112 bytes, inv_mpu.o(i.mpu_load_firmware))
<BR><BR>[Stack]<UL><LI>Max Depth = 752<LI>Call Chain = mpu_load_firmware &rArr; drv_mpu9250_read &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_write
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_read
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_load_motion_driver_firmware
</UL>

<P><STRONG><a name="[300]"></a>mpu_lp_accel_mode</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, inv_mpu.o(i.mpu_lp_accel_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = mpu_lp_accel_mode &rArr; mpu_configure_fifo &rArr; mpu_reset_fifo &rArr; drv_mpu9250_write &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_write
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_configure_fifo
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_int_latched
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sample_rate
</UL>

<P><STRONG><a name="[302]"></a>mpu_read_fifo</STRONG> (Thumb, 360 bytes, Stack size 64 bytes, inv_mpu.o(i.mpu_read_fifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 712<LI>Call Chain = mpu_read_fifo &rArr; mpu_reset_fifo &rArr; drv_mpu9250_write &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_read
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_ms_get
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_reset_fifo
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpulib_data_handler_cb
</UL>

<P><STRONG><a name="[1f6]"></a>mpu_read_fifo_stream</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, inv_mpu.o(i.mpu_read_fifo_stream))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = mpu_read_fifo_stream &rArr; mpu_reset_fifo &rArr; drv_mpu9250_write &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_read
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_reset_fifo
</UL>
<BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_read_fifo
</UL>

<P><STRONG><a name="[1f1]"></a>mpu_read_mem</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, inv_mpu.o(i.mpu_read_mem))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = mpu_read_mem &rArr; drv_mpu9250_read &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_write
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_get_pedometer_walk_time
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_get_pedometer_step_count
</UL>

<P><STRONG><a name="[1ee]"></a>mpu_reset_fifo</STRONG> (Thumb, 366 bytes, Stack size 16 bytes, inv_mpu.o(i.mpu_reset_fifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = mpu_reset_fifo &rArr; drv_mpu9250_write &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_write
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_dmp_state
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_read_fifo
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_configure_fifo
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_read_fifo
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_feature
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_read_fifo_stream
</UL>

<P><STRONG><a name="[2fc]"></a>mpu_set_accel_fsr</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, inv_mpu.o(i.mpu_set_accel_fsr))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = mpu_set_accel_fsr &rArr; drv_mpu9250_write &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_write
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
</UL>

<P><STRONG><a name="[2ff]"></a>mpu_set_bypass</STRONG> (Thumb, 262 bytes, Stack size 16 bytes, inv_mpu.o(i.mpu_set_bypass))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = mpu_set_bypass &rArr; drv_mpu9250_read &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_write
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_read
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_dmp_state
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
</UL>

<P><STRONG><a name="[26e]"></a>mpu_set_compass_sample_rate</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, inv_mpu.o(i.mpu_set_compass_sample_rate))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = mpu_set_compass_sample_rate &rArr; drv_mpu9250_write &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_write
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
</UL>

<P><STRONG><a name="[27b]"></a>mpu_set_dmp_state</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, inv_mpu.o(i.mpu_set_dmp_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 728<LI>Call Chain = mpu_set_dmp_state &rArr; mpu_set_sample_rate &rArr; mpu_lp_accel_mode &rArr; mpu_configure_fifo &rArr; mpu_reset_fifo &rArr; drv_mpu9250_write &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_write
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sample_rate
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_bypass
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_reset_fifo
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_int_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
</UL>

<P><STRONG><a name="[2fb]"></a>mpu_set_gyro_fsr</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, inv_mpu.o(i.mpu_set_gyro_fsr))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = mpu_set_gyro_fsr &rArr; drv_mpu9250_write &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_write
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
</UL>

<P><STRONG><a name="[301]"></a>mpu_set_int_latched</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, inv_mpu.o(i.mpu_set_int_latched))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = mpu_set_int_latched &rArr; drv_mpu9250_write &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_write
</UL>
<BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sensors
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_lp_accel_mode
</UL>

<P><STRONG><a name="[2fd]"></a>mpu_set_lpf</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, inv_mpu.o(i.mpu_set_lpf))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = mpu_set_lpf &rArr; drv_mpu9250_write &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_write
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sample_rate
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
</UL>

<P><STRONG><a name="[26d]"></a>mpu_set_sample_rate</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, inv_mpu.o(i.mpu_set_sample_rate))
<BR><BR>[Stack]<UL><LI>Max Depth = 712<LI>Call Chain = mpu_set_sample_rate &rArr; mpu_lp_accel_mode &rArr; mpu_configure_fifo &rArr; mpu_reset_fifo &rArr; drv_mpu9250_write &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_write
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_lpf
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_lp_accel_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_dmp_state
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
</UL>

<P><STRONG><a name="[26b]"></a>mpu_set_sensors</STRONG> (Thumb, 320 bytes, Stack size 24 bytes, inv_mpu.o(i.mpu_set_sensors))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = mpu_set_sensors &rArr; mpu_set_int_latched &rArr; drv_mpu9250_write &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_write
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_read
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_int_latched
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
</UL>

<P><STRONG><a name="[1ec]"></a>mpu_write_mem</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, inv_mpu.o(i.mpu_write_mem))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = mpu_write_mem &rArr; drv_mpu9250_write &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_write
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_orientation
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_fifo_rate
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_feature
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_tap_thresh
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_gyro_cal
</UL>

<P><STRONG><a name="[307]"></a>nrf_dfu_flash_erase</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, nrf_dfu_flash_buttonless.o(i.nrf_dfu_flash_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = nrf_dfu_flash_erase &rArr; fs_erase &rArr; queue_process
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_dfu_settings_write
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_dfu_settings_init
</UL>

<P><STRONG><a name="[1bb]"></a>nrf_dfu_flash_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, nrf_dfu_flash_buttonless.o(i.nrf_dfu_flash_init))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dfu_init
</UL>

<P><STRONG><a name="[308]"></a>nrf_dfu_flash_store</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, nrf_dfu_flash_buttonless.o(i.nrf_dfu_flash_store))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = nrf_dfu_flash_store &rArr; fs_store &rArr; queue_process
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_store
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_dfu_settings_write
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_dfu_settings_init
</UL>

<P><STRONG><a name="[1bc]"></a>nrf_dfu_settings_init</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, nrf_dfu_settings.o(i.nrf_dfu_settings_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = nrf_dfu_settings_init &rArr; nrf_dfu_flash_store &rArr; fs_store &rArr; queue_process
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_dfu_flash_store
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_dfu_flash_erase
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32_compute
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dfu_init
</UL>

<P><STRONG><a name="[1be]"></a>nrf_dfu_settings_write</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, nrf_dfu_settings.o(i.nrf_dfu_settings_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = nrf_dfu_settings_write &rArr; nrf_dfu_flash_store &rArr; fs_store &rArr; queue_process
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_dfu_flash_store
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_dfu_flash_erase
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32_compute
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dfu_on_ble_evt
</UL>

<P><STRONG><a name="[30a]"></a>nrf_drv_clock_on_sd_enable</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, nrf_drv_clock.o(i.nrf_drv_clock_on_sd_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = nrf_drv_clock_on_sd_enable &rArr; app_util_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_exit
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_enter
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_common_irq_enable
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_handler_is_enabled
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_handler_init
</UL>

<P><STRONG><a name="[16c]"></a>nrf_drv_clock_on_soc_event</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, nrf_drv_clock.o(i.nrf_drv_clock_on_soc_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_drv_clock_on_soc_event
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2_EGU2_IRQHandler
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intern_softdevice_events_execute
</UL>

<P><STRONG><a name="[30b]"></a>nrf_drv_common_irq_enable</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, nrf_drv_common.o(i.nrf_drv_common_irq_enable))
<BR><BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_saadc_init
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_init
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_pwm_init
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_pdm_init
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_clock_on_sd_enable
</UL>

<P><STRONG><a name="[22b]"></a>nrf_drv_gpiote_in_event_disable</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_in_event_disable))
<BR><BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_disable
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_stop
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_stop
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_enable
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_evt_sceduled
</UL>

<P><STRONG><a name="[192]"></a>nrf_drv_gpiote_in_event_enable</STRONG> (Thumb, 184 bytes, Stack size 20 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_in_event_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = nrf_drv_gpiote_in_event_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_enable
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_enable
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_start
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_sample
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_batt_meas_init
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_enable
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_enable
</UL>

<P><STRONG><a name="[196]"></a>nrf_drv_gpiote_in_init</STRONG> (Thumb, 222 bytes, Stack size 20 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_in_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = nrf_drv_gpiote_in_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_enable
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_enable
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_start
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_start
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_batt_meas_init
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_init
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_enable
</UL>

<P><STRONG><a name="[1ea]"></a>nrf_drv_gpiote_in_is_set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_in_is_set))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_event_handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detection_delay_timeout_handler
</UL>

<P><STRONG><a name="[22c]"></a>nrf_drv_gpiote_in_uninit</STRONG> (Thumb, 140 bytes, Stack size 12 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_in_uninit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = nrf_drv_gpiote_in_uninit
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_disable
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_disable
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_stop
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_stop
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_enable
</UL>

<P><STRONG><a name="[195]"></a>nrf_drv_gpiote_init</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_drv_gpiote_init
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_common_irq_enable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_enable
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_enable
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_start
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_start
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_init
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_batt_meas_init
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_init
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_enable
</UL>

<P><STRONG><a name="[194]"></a>nrf_drv_gpiote_is_init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_is_init))
<BR><BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_enable
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_enable
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_start
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_start
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_init
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_batt_meas_init
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_init
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_enable
</UL>

<P><STRONG><a name="[20b]"></a>nrf_drv_pdm_init</STRONG> (Thumb, 212 bytes, Stack size 8 bytes, nrf_drv_pdm.o(i.nrf_drv_pdm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_drv_pdm_init
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_common_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_audio_init
</UL>

<P><STRONG><a name="[209]"></a>nrf_drv_pdm_start</STRONG> (Thumb, 52 bytes, Stack size 4 bytes, nrf_drv_pdm.o(i.nrf_drv_pdm_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = nrf_drv_pdm_start
</UL>
<BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_audio_enable
</UL>

<P><STRONG><a name="[207]"></a>nrf_drv_pdm_stop</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, nrf_drv_pdm.o(i.nrf_drv_pdm_stop))
<BR><BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_audio_disable
</UL>

<P><STRONG><a name="[292]"></a>nrf_drv_pwm_complex_playback</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, nrf_drv_pwm.o(i.nrf_drv_pwm_complex_playback))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_drv_pwm_complex_playback
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_speaker_sample_play
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_speaker_ble_pcm_play
</UL>

<P><STRONG><a name="[294]"></a>nrf_drv_pwm_init</STRONG> (Thumb, 266 bytes, Stack size 48 bytes, nrf_drv_pwm.o(i.nrf_drv_pwm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = nrf_drv_pwm_init
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_common_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_speaker_init
</UL>

<P><STRONG><a name="[296]"></a>nrf_drv_pwm_simple_playback</STRONG> (Thumb, 194 bytes, Stack size 12 bytes, nrf_drv_pwm.o(i.nrf_drv_pwm_simple_playback))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = nrf_drv_pwm_simple_playback
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_speaker_tone_start
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seq1_buffer_update
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seq0_buffer_update
</UL>

<P><STRONG><a name="[297]"></a>nrf_drv_pwm_stop</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, nrf_drv_pwm.o(i.nrf_drv_pwm_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_drv_pwm_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_speaker_tone_start
</UL>

<P><STRONG><a name="[1a2]"></a>nrf_drv_saadc_buffer_convert</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, nrf_drv_saadc.o(i.nrf_drv_saadc_buffer_convert))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nrf_drv_saadc_buffer_convert
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_periodic_handler
</UL>

<P><STRONG><a name="[2d2]"></a>nrf_drv_saadc_calibrate_offset</STRONG> (Thumb, 54 bytes, Stack size 4 bytes, nrf_drv_saadc.o(i.nrf_drv_saadc_calibrate_offset))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = nrf_drv_saadc_calibrate_offset
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_batt_meas_init
</UL>

<P><STRONG><a name="[1a1]"></a>nrf_drv_saadc_channel_init</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, nrf_drv_saadc.o(i.nrf_drv_saadc_channel_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_drv_saadc_channel_init
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_saadc_channel_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_periodic_handler
</UL>

<P><STRONG><a name="[1a0]"></a>nrf_drv_saadc_init</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, nrf_drv_saadc.o(i.nrf_drv_saadc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nrf_drv_saadc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_common_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_batt_meas_init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_periodic_handler
</UL>

<P><STRONG><a name="[1a3]"></a>nrf_drv_saadc_sample</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, nrf_drv_saadc.o(i.nrf_drv_saadc_sample))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_periodic_handler
</UL>

<P><STRONG><a name="[313]"></a>nrf_drv_saadc_uninit</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, nrf_drv_saadc.o(i.nrf_drv_saadc_uninit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nrf_drv_saadc_uninit
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saadc_event_handler_interrupt
</UL>

<P><STRONG><a name="[201]"></a>nrf_drv_twi_disable</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, nrf_drv_twi.o(i.nrf_drv_twi_disable))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_write
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_read
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_close
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_close
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_close
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_close
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_close
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_acc_wakeup_prepare
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_acc_init
</UL>

<P><STRONG><a name="[1fd]"></a>nrf_drv_twi_enable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, nrf_drv_twi.o(i.nrf_drv_twi_enable))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_write
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_read
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_open
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_open
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_open
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_open
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_open
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_acc_wakeup_prepare
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_acc_init
</UL>

<P><STRONG><a name="[30e]"></a>nrf_drv_twi_init</STRONG> (Thumb, 322 bytes, Stack size 40 bytes, nrf_drv_twi.o(i.nrf_drv_twi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = nrf_drv_twi_init
</UL>
<BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_us
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_common_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_manager_request
</UL>

<P><STRONG><a name="[200]"></a>nrf_drv_twi_rx</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, nrf_drv_twi.o(i.nrf_drv_twi_rx))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = nrf_drv_twi_rx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_xfer
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_read
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_data_get
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_read
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_get
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;multi_byte_register_get
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_read
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_get
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_read
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_acc_wakeup_prepare
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_acc_init
</UL>

<P><STRONG><a name="[1ff]"></a>nrf_drv_twi_tx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, nrf_drv_twi.o(i.nrf_drv_twi_tx))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_xfer
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_write
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_read
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_data_get
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_write
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_read
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_meas_mode_modify
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_env_data_set
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_baseline_set
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_app_start
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_get
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;multi_byte_register_get
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_reset
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_write
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_read
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_bits_modify
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_get
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_write
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_read
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis3dh_write_regs
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_acc_wakeup_prepare
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_acc_init
</UL>

<P><STRONG><a name="[202]"></a>nrf_drv_twi_uninit</STRONG> (Thumb, 140 bytes, Stack size 4 bytes, nrf_drv_twi.o(i.nrf_drv_twi_uninit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = nrf_drv_twi_uninit
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_write
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_read
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_close
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_close
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_close
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_close
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_close
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_acc_wakeup_prepare
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_acc_init
</UL>

<P><STRONG><a name="[310]"></a>nrf_drv_twi_xfer</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, nrf_drv_twi.o(i.nrf_drv_twi_xfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_tx_start_transfer
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_rx_start_transfer
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_tx
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_rx
</UL>

<P><STRONG><a name="[311]"></a>nrf_log_frontend_std_1</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, nrf_log_frontend.o(i.nrf_log_frontend_std_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = nrf_log_frontend_std_1 &rArr; buf_prealloc &rArr; app_util_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_prealloc
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_enable
</UL>

<P><STRONG><a name="[30d]"></a>nrf_saadc_channel_init</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, nrf_saadc.o(i.nrf_saadc_channel_init))
<BR><BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_saadc_channel_init
</UL>

<P><STRONG><a name="[1b8]"></a>sdk_mapped_flags_bulk_update_by_key</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, sdk_mapped_flags.o(i.sdk_mapped_flags_bulk_update_by_key))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sdk_mapped_flags_bulk_update_by_key
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_on_ble_evt
</UL>

<P><STRONG><a name="[1b9]"></a>sdk_mapped_flags_first_key_index_get</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, sdk_mapped_flags.o(i.sdk_mapped_flags_first_key_index_get))
<BR><BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_on_ble_evt
</UL>

<P><STRONG><a name="[1b7]"></a>sdk_mapped_flags_key_list_get</STRONG> (Thumb, 98 bytes, Stack size 36 bytes, sdk_mapped_flags.o(i.sdk_mapped_flags_key_list_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = sdk_mapped_flags_key_list_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_on_ble_evt
</UL>

<P><STRONG><a name="[1b6]"></a>sdk_mapped_flags_update_by_key</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, sdk_mapped_flags.o(i.sdk_mapped_flags_update_by_key))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sdk_mapped_flags_update_by_key
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_on_ble_evt
</UL>

<P><STRONG><a name="[2dc]"></a>softdevice_ble_evt_handler_set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, softdevice_handler.o(i.softdevice_ble_evt_handler_set))
<BR><BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
</UL>

<P><STRONG><a name="[2db]"></a>softdevice_enable</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, softdevice_handler.o(i.softdevice_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = softdevice_enable &rArr; nrf_log_frontend_std_1 &rArr; buf_prealloc &rArr; app_util_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_1
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
</UL>

<P><STRONG><a name="[2da]"></a>softdevice_enable_get_default_config</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, softdevice_handler.o(i.softdevice_enable_get_default_config))
<BR><BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
</UL>

<P><STRONG><a name="[89]"></a>softdevice_evt_get</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, softdevice_handler_appsh.o(i.softdevice_evt_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = softdevice_evt_get &rArr; intern_softdevice_events_execute &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intern_softdevice_events_execute
</UL>
<BR>[Address Reference Count : 1]<UL><LI> softdevice_handler_appsh.o(i.softdevice_evt_schedule)
</UL>
<P><STRONG><a name="[64]"></a>softdevice_evt_schedule</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, softdevice_handler_appsh.o(i.softdevice_evt_schedule))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = softdevice_evt_schedule &rArr; app_sched_event_put &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_ble.o(i.m_ble_init)
</UL>
<P><STRONG><a name="[8a]"></a>softdevice_fault_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, softdevice_handler.o(i.softdevice_fault_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = softdevice_fault_handler &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> softdevice_handler.o(i.softdevice_handler_init)
</UL>
<P><STRONG><a name="[2d9]"></a>softdevice_handler_init</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, softdevice_handler.o(i.softdevice_handler_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = softdevice_handler_init &rArr; nrf_drv_clock_on_sd_enable &rArr; app_util_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_clock_on_sd_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
</UL>

<P><STRONG><a name="[30c]"></a>softdevice_handler_is_enabled</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, softdevice_handler.o(i.softdevice_handler_is_enabled))
<BR><BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_clock_on_sd_enable
</UL>

<P><STRONG><a name="[2dd]"></a>softdevice_sys_evt_handler_set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, softdevice_handler.o(i.softdevice_sys_evt_handler_set))
<BR><BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_init
</UL>

<P><STRONG><a name="[185]"></a>sqrt</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, sqrt_full.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[172]"></a>sqrtf</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, sqrtf_full.o(i.sqrtf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acosf
</UL>

<P><STRONG><a name="[2f4]"></a>support_func_ble_mac_address_print_rtt</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, support_func.o(i.support_func_ble_mac_address_print_rtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = support_func_ble_mac_address_print_rtt &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2e6]"></a>sx150x_led_drv_calc_convert</STRONG> (Thumb, 1444 bytes, Stack size 64 bytes, sx150x_led_drv_calc.o(i.sx150x_led_drv_calc_convert))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = sx150x_led_drv_calc_convert &rArr; __hardfp_round &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diff_above_limit
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_round
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_cmd_process
</UL>

<P><STRONG><a name="[2e8]"></a>sx150x_led_drv_calc_fade_supp</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sx150x_led_drv_calc.o(i.sx150x_led_drv_calc_fade_supp))
<BR><BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_led_drv_ctrl
</UL>

<P><STRONG><a name="[23b]"></a>sx150x_led_drv_calc_init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sx150x_led_drv_calc.o(i.sx150x_led_drv_calc_init))
<BR><BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_init
</UL>

<P><STRONG><a name="[2f3]"></a>twi_manager_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, twi_manager.o(i.twi_manager_init))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1fc]"></a>twi_manager_request</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, twi_manager.o(i.twi_manager_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = twi_manager_request &rArr; nrf_drv_twi_init
</UL>
<BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_init
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_write
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_read
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_open
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_open
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_open
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_open
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_open
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_acc_wakeup_prepare
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_acc_init
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1e6]"></a>configure_gpio_for_sleep</STRONG> (Thumb, 262 bytes, Stack size 328 bytes, main.o(i.configure_gpio_for_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 928<LI>Call Chain = configure_gpio_for_sleep &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_reset
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_pin_set
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_pin_clear
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_cfg
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thingy_ble_evt_handler
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_batt_meas_handler
</UL>

<P><STRONG><a name="[84]"></a>m_batt_meas_handler</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, main.o(i.m_batt_meas_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 944<LI>Call Chain = m_batt_meas_handler &rArr; configure_gpio_for_sleep &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configure_gpio_for_sleep
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[19a]"></a>nrf_delay_us</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, main.o(i.nrf_delay_us))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thingy_ble_evt_handler
</UL>

<P><STRONG><a name="[85]"></a>thingy_ble_evt_handler</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, main.o(i.thingy_ble_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 952<LI>Call Chain = thingy_ble_evt_handler &rArr; configure_gpio_for_sleep &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_motion_sleep_prepare
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteString
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_us
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configure_gpio_for_sleep
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[6c]"></a>beacon_advertiser_error_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, m_ble.o(i.beacon_advertiser_error_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = beacon_advertiser_error_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 2]<UL><LI> m_ble.o(i.tcs_evt_handler)
<LI> m_ble.o(i.m_ble_init)
</UL>
<P><STRONG><a name="[68]"></a>ble_dfu_evt_handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, m_ble.o(i.ble_dfu_evt_handler))
<BR>[Address Reference Count : 1]<UL><LI> m_ble.o(i.m_ble_init)
</UL>
<P><STRONG><a name="[65]"></a>ble_evt_dispatch</STRONG> (Thumb, 254 bytes, Stack size 32 bytes, m_ble.o(i.ble_evt_dispatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = ble_evt_dispatch &rArr; ble_conn_state_on_ble_evt &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_queued_op_count_get
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tcs_on_ble_evt
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tcs_mtu_set
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dfu_on_ble_evt
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_on_ble_evt
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_on_ble_evt
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_on_ble_evt
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_ble.o(i.m_ble_init)
</UL>
<P><STRONG><a name="[6b]"></a>conn_params_error_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, m_ble.o(i.conn_params_error_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = conn_params_error_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_ble.o(i.m_ble_init)
</UL>
<P><STRONG><a name="[69]"></a>on_adv_evt</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, m_ble.o(i.on_adv_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = on_adv_evt &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_ble.o(i.m_ble_init)
</UL>
<P><STRONG><a name="[6a]"></a>on_conn_params_evt</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, m_ble.o(i.on_conn_params_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = on_conn_params_evt &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_ble.o(i.m_ble_init)
</UL>
<P><STRONG><a name="[66]"></a>sys_evt_dispatch</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, m_ble.o(i.sys_evt_dispatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = sys_evt_dispatch &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_sys_event_handler
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_queued_op_count_get
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_on_sys_evt
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_beacon_on_sys_evt
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_ble.o(i.m_ble_init)
</UL>
<P><STRONG><a name="[67]"></a>tcs_evt_handler</STRONG> (Thumb, 382 bytes, Stack size 32 bytes, m_ble.o(i.tcs_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = tcs_evt_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ble_flash_config_store
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tcs_mtu_set
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_change_conn_params
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_beacon_stop
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_beacon_start
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_beacon_init
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_ble.o(i.m_ble_init)
</UL>
<P><STRONG><a name="[63]"></a>tc_fds_evt_handler</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, m_ble_flash.o(i.tc_fds_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = tc_fds_evt_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_ble_flash.o(i.m_ble_flash_init)
</UL>
<P><STRONG><a name="[51]"></a>ble_tes_evt_handler</STRONG> (Thumb, 830 bytes, Stack size 32 bytes, m_environment.o(i.ble_tes_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = ble_tes_evt_handler &rArr; drv_gas_sensor_start &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_env_flash_config_store
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_sample
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_enable
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_disable
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_sample
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_enable
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_disable
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_start
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_rgb_intensity_set
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_off
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_stop
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_start
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_sample
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gas_stop
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_apply
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_environment.o(i.environment_service_init)
</UL>
<P><STRONG><a name="[76]"></a>color_timeout_handler</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, m_environment.o(i.color_timeout_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = color_timeout_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_rgb_intensity_set
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_sample
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_environment.o(i.m_environment_init)
</UL>
<P><STRONG><a name="[1cf]"></a>config_apply</STRONG> (Thumb, 618 bytes, Stack size 32 bytes, m_environment.o(i.config_apply))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = config_apply &rArr; drv_pressure_sample &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_sample
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_enable
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_disable
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_sample
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_enable
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_disable
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_rgb_intensity_set
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_off
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_stop
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_start
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_color_sample
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;environment_service_init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tes_evt_handler
</UL>

<P><STRONG><a name="[72]"></a>drv_color_data_handler</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, m_environment.o(i.drv_color_data_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = drv_color_data_handler &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_off
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tes_color_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_environment.o(i.m_environment_init)
</UL>
<P><STRONG><a name="[71]"></a>drv_gas_data_handler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, m_environment.o(i.drv_gas_data_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = drv_gas_data_handler &rArr; ble_tes_gas_set
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tes_gas_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_environment.o(i.m_environment_init)
</UL>
<P><STRONG><a name="[8e]"></a>drv_humidity_evt_handler</STRONG> (Thumb, 228 bytes, Stack size 40 bytes, m_environment.o(i.drv_humidity_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = drv_humidity_evt_handler &rArr; drv_humidity_temp_get &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_temp_get
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_get
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_calibrate_humid_temp
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tes_temperature_set
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tes_humidity_set
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_environment.o(.constdata)
</UL>
<P><STRONG><a name="[70]"></a>drv_pressure_evt_handler</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, m_environment.o(i.drv_pressure_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = drv_pressure_evt_handler &rArr; drv_pressure_get &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_get
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tes_pressure_set
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_environment.o(i.m_environment_init)
</UL>
<P><STRONG><a name="[6e]"></a>environment_on_ble_evt</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, m_environment.o(i.environment_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = environment_on_ble_evt &rArr; ble_tes_on_ble_evt &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tes_on_ble_evt
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_environment_stop
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_environment.o(i.m_environment_init)
</UL>
<P><STRONG><a name="[6f]"></a>environment_service_init</STRONG> (Thumb, 208 bytes, Stack size 80 bytes, m_environment.o(i.environment_service_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = environment_service_init &rArr; config_apply &rArr; drv_pressure_sample &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_env_flash_init
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_env_flash_config_store
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tes_init
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_apply
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_environment.o(i.m_environment_init)
</UL>
<P><STRONG><a name="[77]"></a>gas_calib_timeout_handler</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, m_environment.o(i.gas_calib_timeout_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = gas_calib_timeout_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_baseline_set
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_environment.o(i.m_environment_init)
</UL>
<P><STRONG><a name="[1c8]"></a>gas_stop</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, m_environment.o(i.gas_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = gas_stop &rArr; drv_humidity_disable &rArr; drv_hts221_cfg_set &rArr; reg_write &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_env_flash_baseline_store
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_disable
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_stop
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_baseline_get
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_environment_stop
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tes_evt_handler
</UL>

<P><STRONG><a name="[75]"></a>humidity_timeout_handler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, m_environment.o(i.humidity_timeout_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = humidity_timeout_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_sample
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_environment.o(i.m_environment_init)
</UL>
<P><STRONG><a name="[74]"></a>pressure_timeout_handler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, m_environment.o(i.pressure_timeout_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = pressure_timeout_handler &rArr; drv_pressure_sample &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pressure_sample
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_environment.o(i.m_environment_init)
</UL>
<P><STRONG><a name="[73]"></a>temperature_timeout_handler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, m_environment.o(i.temperature_timeout_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = temperature_timeout_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_humidity_sample
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_environment.o(i.m_environment_init)
</UL>
<P><STRONG><a name="[6d]"></a>env_fds_evt_handler</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, m_environment_flash.o(i.env_fds_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = env_fds_evt_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_environment_flash.o(i.m_env_flash_init)
</UL>
<P><STRONG><a name="[86]"></a>ble_tms_evt_handler</STRONG> (Thumb, 454 bytes, Stack size 24 bytes, m_motion.o(i.ble_tms_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 816<LI>Call Chain = ble_tms_evt_handler &rArr; drv_motion_config &rArr; drv_motion_enable &rArr; dmp_load_motion_driver_firmware &rArr; mpu_load_firmware &rArr; drv_mpu9250_read &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_motion_flash_config_store
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_enable
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_disable
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_motion.o(i.motion_service_init)
</UL>
<P><STRONG><a name="[7b]"></a>drv_motion_evt_handler</STRONG> (Thumb, 470 bytes, Stack size 128 bytes, m_motion.o(i.drv_motion_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 728<LI>Call Chain = drv_motion_evt_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tms_tap_set
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tms_rot_mat_set
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tms_raw_set
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tms_quat_set
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tms_pedo_set
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tms_orientation_set
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tms_heading_set
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tms_gravity_set
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tms_euler_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_motion.o(i.m_motion_init)
</UL>
<P><STRONG><a name="[79]"></a>motion_on_ble_evt</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, m_motion.o(i.motion_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = motion_on_ble_evt &rArr; ble_tms_on_ble_evt &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_disable
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tms_on_ble_evt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_motion.o(i.m_motion_init)
</UL>
<P><STRONG><a name="[7a]"></a>motion_service_init</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, m_motion.o(i.motion_service_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 832<LI>Call Chain = motion_service_init &rArr; drv_motion_config &rArr; drv_motion_enable &rArr; dmp_load_motion_driver_firmware &rArr; mpu_load_firmware &rArr; drv_mpu9250_read &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_motion_flash_init
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motion_config
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tms_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_motion.o(i.m_motion_init)
</UL>
<P><STRONG><a name="[78]"></a>motion_fds_evt_handler</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, m_motion_flash.o(i.motion_fds_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = motion_fds_evt_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_motion_flash.o(i.m_motion_flash_init)
</UL>
<P><STRONG><a name="[8c]"></a>ble_uis_led_write_handler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, m_ui.o(i.ble_uis_led_write_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = ble_uis_led_write_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_config_store
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_ui.o(i.thingy_ui_service_init)
</UL>
<P><STRONG><a name="[8d]"></a>ble_uis_pin_write_handler</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, m_ui.o(i.ble_uis_pin_write_handler))
<BR>[Address Reference Count : 1]<UL><LI> m_ui.o(i.thingy_ui_service_init)
</UL>
<P><STRONG><a name="[8f]"></a>button_evt_handler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, m_ui.o(i.button_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = button_evt_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uis_on_button_change
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_ui.o(.constdata)
</UL>
<P><STRONG><a name="[1df]"></a>led_set</STRONG> (Thumb, 442 bytes, Stack size 56 bytes, m_ui.o(i.led_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_rgb_intensity_set
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_off
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_rgb_sequence
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_5
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_led_set_event
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thingy_ui_on_ble_evt
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uis_led_write_handler
</UL>

<P><STRONG><a name="[81]"></a>thingy_ui_on_ble_evt</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, m_ui.o(i.thingy_ui_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = thingy_ui_on_ble_evt &rArr; ble_uis_on_ble_evt &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uis_on_ble_evt
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_ui.o(i.m_ui_init)
</UL>
<P><STRONG><a name="[82]"></a>thingy_ui_service_init</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, m_ui.o(i.thingy_ui_service_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = thingy_ui_service_init &rArr; m_ui_flash_init &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ui_flash_init
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uis_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_ui.o(i.m_ui_init)
</UL>
<P><STRONG><a name="[80]"></a>ui_fds_evt_handler</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, m_ui_flash.o(i.ui_fds_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = ui_fds_evt_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_ui_flash.o(i.m_ui_flash_init)
</UL>
<P><STRONG><a name="[8b]"></a>ble_tss_evt_handler</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, m_sound.o(i.ble_tss_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = ble_tss_evt_handler &rArr; drv_mic_stop &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_speaker_tone_start
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_speaker_sample_play
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_speaker_ble_pcm_play
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mic_stop
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mic_start
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tss_spkr_stat_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_sound.o(i.sound_service_init)
</UL>
<P><STRONG><a name="[7f]"></a>drv_mic_data_handler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, m_sound.o(i.drv_mic_data_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = drv_mic_data_handler &rArr; ble_tss_mic_set
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tss_mic_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_sound.o(i.m_sound_init)
</UL>
<P><STRONG><a name="[7e]"></a>drv_speaker_evt_handler</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, m_sound.o(i.drv_speaker_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = drv_speaker_evt_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tss_spkr_stat_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_sound.o(i.m_sound_init)
</UL>
<P><STRONG><a name="[7c]"></a>sound_on_ble_evt</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, m_sound.o(i.sound_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = sound_on_ble_evt &rArr; ble_tss_on_ble_evt &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mic_stop
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tss_on_ble_evt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_sound.o(i.m_sound_init)
</UL>
<P><STRONG><a name="[7d]"></a>sound_service_init</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, m_sound.o(i.sound_service_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = sound_service_init &rArr; ble_tss_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tss_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_sound.o(i.m_sound_init)
</UL>
<P><STRONG><a name="[3a]"></a>m_timeslot_callback</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, advertiser_beacon_timeslot.o(i.m_timeslot_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = m_timeslot_callback &rArr; m_handle_start &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_handle_start
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_handle_radio_disabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> advertiser_beacon_timeslot.o(i.app_beacon_start)
</UL>
<P><STRONG><a name="[5f]"></a>app_timer_periodic_handler</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, m_batt_meas.o(i.app_timer_periodic_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = app_timer_periodic_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_saadc_sample
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_saadc_init
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_saadc_channel_init
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_saadc_buffer_convert
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_batt_meas_enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_batt_meas.o(i.m_batt_meas_enable)
</UL>
<P><STRONG><a name="[88]"></a>batt_event_handler_adc</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, m_batt_meas.o(i.batt_event_handler_adc))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = batt_event_handler_adc &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bas_battery_level_update
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_batt_meas.o(i.saadc_event_handler_interrupt)
</UL>
<P><STRONG><a name="[52]"></a>batt_event_handler_charge</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, m_batt_meas.o(i.batt_event_handler_charge))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = batt_event_handler_charge
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_batt_meas.o(i.gpiote_evt_handler)
</UL>
<P><STRONG><a name="[60]"></a>battery_on_ble_evt</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, m_batt_meas.o(i.battery_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = battery_on_ble_evt &rArr; ble_bas_on_ble_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bas_on_ble_evt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_batt_meas.o(i.m_batt_meas_init)
</UL>
<P><STRONG><a name="[61]"></a>battery_service_init</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, m_batt_meas.o(i.battery_service_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = battery_service_init &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bas_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_batt_meas.o(i.m_batt_meas_init)
</UL>
<P><STRONG><a name="[3f]"></a>ble_bas_evt_handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, m_batt_meas.o(i.ble_bas_evt_handler))
<BR>[Address Reference Count : 1]<UL><LI> m_batt_meas.o(i.battery_service_init)
</UL>
<P><STRONG><a name="[62]"></a>gpiote_evt_handler</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, m_batt_meas.o(i.gpiote_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = gpiote_evt_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_batt_meas.o(i.m_batt_meas_init)
</UL>
<P><STRONG><a name="[3e]"></a>saadc_event_handler_interrupt</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, m_batt_meas.o(i.saadc_event_handler_interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = saadc_event_handler_interrupt &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_saadc_uninit
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>
<BR>[Address Reference Count : 2]<UL><LI> m_batt_meas.o(i.app_timer_periodic_handler)
<LI> m_batt_meas.o(i.m_batt_meas_init)
</UL>
<P><STRONG><a name="[23d]"></a>m_ioext_cmd_process</STRONG> (Thumb, 1100 bytes, Stack size 56 bytes, drv_ext_light.o(i.m_ioext_cmd_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_port_mask_create
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_osc_status_change
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_color_select_cmd_send
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx150x_led_drv_calc_convert
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_off
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_rgb_sequence
</UL>

<P><STRONG><a name="[2e7]"></a>m_ioext_color_select_cmd_send</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, drv_ext_light.o(i.m_ioext_color_select_cmd_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_led_drv_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_cmd_process
</UL>

<P><STRONG><a name="[23f]"></a>m_ioext_led_drv_ctrl</STRONG> (Thumb, 412 bytes, Stack size 32 bytes, drv_ext_light.o(i.m_ioext_led_drv_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx150x_led_drv_calc_fade_supp
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_risefallcfgx_modify
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_open
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_onoffcfgx_modify
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_leddriverenable_modify
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_data_modify
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_close
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_rgb_intensity_set
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_color_select_cmd_send
</UL>

<P><STRONG><a name="[23e]"></a>m_ioext_osc_status_change</STRONG> (Thumb, 290 bytes, Stack size 24 bytes, drv_ext_light.o(i.m_ioext_osc_status_change))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + In Cycle
<LI>Call Chain = m_ioext_osc_status_change &rArr;  app_error_handler_bare (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_open
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_close
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_clock_modify
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_light_rgb_intensity_set
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_light_timer_handler
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_cmd_process
</UL>

<P><STRONG><a name="[44]"></a>m_light_timer_handler</STRONG> (Thumb, 396 bytes, Stack size 32 bytes, drv_ext_light.o(i.m_light_timer_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = m_light_timer_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_port_mask_create
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_osc_status_change
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_open
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_data_modify
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_close
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drv_ext_light.o(i.drv_ext_light_init)
</UL>
<P><STRONG><a name="[2e5]"></a>m_port_mask_create</STRONG> (Thumb, 112 bytes, Stack size 4 bytes, drv_ext_light.o(i.m_port_mask_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = m_port_mask_create
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_light_timer_handler
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_ioext_cmd_process
</UL>

<P><STRONG><a name="[21c]"></a>multi_byte_register_get</STRONG> (Thumb, 64 bytes, Stack size 40 bytes, drv_ccs811.o(i.multi_byte_register_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = multi_byte_register_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_tx
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_rx
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_baseline_get
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_alg_result_data_get
</UL>

<P><STRONG><a name="[21e]"></a>reg_get</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, drv_ccs811.o(i.reg_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_tx
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_rx
</UL>
<BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_status_get
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_meas_mode_modify
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_meas_mode_get
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_hw_id_get
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_err_id_get
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_app_start
</UL>

<P><STRONG><a name="[1e3]"></a>ccs811_close</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, drv_gas_sensor.o(i.ccs811_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = ccs811_close &rArr; drv_ext_gpio_pin_set &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_pin_set
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_close
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_stop
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_start
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_init
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_calibrate_humid_temp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_baseline_set
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_baseline_get
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_evt_sceduled
</UL>

<P><STRONG><a name="[45]"></a>gpiote_evt_handler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, drv_gas_sensor.o(i.gpiote_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = gpiote_evt_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drv_gas_sensor.o(i.drv_gas_sensor_start)
</UL>
<P><STRONG><a name="[53]"></a>gpiote_evt_sceduled</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, drv_gas_sensor.o(i.gpiote_evt_sceduled))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = gpiote_evt_sceduled &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ext_gpio_pin_clear
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_us
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccs811_close
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_open
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_err_id_get
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ccs811_alg_result_data_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drv_gas_sensor.o(i.gpiote_evt_handler)
</UL>
<P><STRONG><a name="[243]"></a>nrf_delay_us</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, drv_gas_sensor.o(i.nrf_delay_us))
<BR><BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_stop
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_start
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_init
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_calibrate_humid_temp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_baseline_set
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gas_sensor_baseline_get
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_evt_sceduled
</UL>

<P><STRONG><a name="[20f]"></a>reg_read</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, drv_bh1745.o(i.reg_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_tx
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_rx
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_sw_reset
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_persistance_get
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_part_id_get
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_meas_enable
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_manu_id_get
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_int_get
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_gain_set
</UL>

<P><STRONG><a name="[210]"></a>reg_write</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, drv_bh1745.o(i.reg_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = reg_write &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_tx
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_sw_reset
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_persistance_set
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_meas_time_set
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_meas_enable
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_int_set
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_gain_set
</UL>

<P><STRONG><a name="[43]"></a>gpiote_evt_handler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, drv_color.o(i.gpiote_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = gpiote_evt_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drv_color.o(i.drv_color_start)
</UL>
<P><STRONG><a name="[54]"></a>gpiote_evt_sceduled</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, drv_color.o(i.gpiote_evt_sceduled))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = gpiote_evt_sceduled &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_open
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_meas_enable
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_int_get
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_data_get
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bh1745_close
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drv_color.o(i.gpiote_evt_handler)
</UL>
<P><STRONG><a name="[50]"></a>pwm_handler</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, drv_speaker.o(i.pwm_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = pwm_handler &rArr; seq1_buffer_update &rArr; nrf_drv_pwm_simple_playback
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seq1_buffer_update
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seq0_buffer_update
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drv_speaker.o(i.drv_speaker_init)
</UL>
<P><STRONG><a name="[290]"></a>seq0_buffer_update</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, drv_speaker.o(i.seq0_buffer_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = seq0_buffer_update &rArr; nrf_drv_pwm_simple_playback
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_pwm_simple_playback
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_speaker_sample_play
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_speaker_ble_pcm_play
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_handler
</UL>

<P><STRONG><a name="[291]"></a>seq1_buffer_update</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, drv_speaker.o(i.seq1_buffer_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = seq1_buffer_update &rArr; nrf_drv_pwm_simple_playback
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_pwm_simple_playback
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_speaker_sample_play
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_speaker_ble_pcm_play
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_handler
</UL>

<P><STRONG><a name="[4e]"></a>gpiote_evt_handler</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, drv_mpu9250.o(i.gpiote_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = gpiote_evt_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drv_mpu9250.o(i.drv_mpu9250_enable)
</UL>
<P><STRONG><a name="[55]"></a>gpiote_evt_sceduled</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, drv_mpu9250.o(i.gpiote_evt_sceduled))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpiote_evt_sceduled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drv_mpu9250.o(i.gpiote_evt_handler)
</UL>
<P><STRONG><a name="[4c]"></a>compass_timeout_handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, drv_motion.o(i.compass_timeout_handler))
<BR>[Address Reference Count : 1]<UL><LI> drv_motion.o(i.drv_motion_init)
</UL>
<P><STRONG><a name="[48]"></a>mpulib_data_handler_cb</STRONG> (Thumb, 756 bytes, Stack size 120 bytes, drv_motion.o(i.mpulib_data_handler_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = mpulib_data_handler_cb &rArr; dmp_read_fifo &rArr; mpu_read_fifo_stream &rArr; mpu_reset_fifo &rArr; drv_mpu9250_write &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_read_fifo
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_temperature
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_compass_reg
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_accel_reg
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_sensor_type_rot_mat
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_sensor_type_quat
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_sensor_type_heading
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_sensor_type_gyro
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_sensor_type_gravity
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_sensor_type_euler
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_sensor_type_compass
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_sensor_type_accel
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_execute_on_data
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_build_temp
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_build_quat
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_build_gyro
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_build_compass
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_build_accel
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_read_fifo
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_get_pedometer_walk_time
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_get_pedometer_step_count
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drv_motion.o(i.drv_motion_enable)
</UL>
<P><STRONG><a name="[4a]"></a>mpulib_orient_cb</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, drv_motion.o(i.mpulib_orient_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mpulib_orient_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drv_motion.o(i.drv_motion_enable)
</UL>
<P><STRONG><a name="[49]"></a>mpulib_tap_cb</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, drv_motion.o(i.mpulib_tap_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mpulib_tap_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drv_motion.o(i.drv_motion_enable)
</UL>
<P><STRONG><a name="[4d]"></a>pedo_timeout_handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, drv_motion.o(i.pedo_timeout_handler))
<BR>[Address Reference Count : 1]<UL><LI> drv_motion.o(i.drv_motion_init)
</UL>
<P><STRONG><a name="[4b]"></a>temp_timeout_handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, drv_motion.o(i.temp_timeout_handler))
<BR>[Address Reference Count : 1]<UL><LI> drv_motion.o(i.drv_motion_init)
</UL>
<P><STRONG><a name="[1fe]"></a>lis3dh_write_regs</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, drv_acc_lis3dh.o(i.lis3dh_write_regs))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = lis3dh_write_regs &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_tx
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_acc_wakeup_prepare
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_acc_init
</UL>

<P><STRONG><a name="[4f]"></a>gpiote_evt_handler</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, drv_pressure.o(i.gpiote_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = gpiote_evt_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drv_pressure.o(i.drv_pressure_enable)
</UL>
<P><STRONG><a name="[56]"></a>gpiote_evt_sceduled</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, drv_pressure.o(i.gpiote_evt_sceduled))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpiote_evt_sceduled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drv_pressure.o(i.gpiote_evt_handler)
</UL>
<P><STRONG><a name="[25b]"></a>reg_read</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, drv_lps22hb.o(i.reg_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_tx
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_rx
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_verify
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_temperature_get
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_status_get
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_pressure_get
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_one_shot
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_odr_set
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_cfg_set
</UL>

<P><STRONG><a name="[25a]"></a>reg_write</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, drv_lps22hb.o(i.reg_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = reg_write &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_tx
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_one_shot
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_odr_set
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lps22hb_cfg_set
</UL>

<P><STRONG><a name="[312]"></a>reg_get</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, drv_sx1509.o(i.reg_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_tx
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_rx
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_bits_modify
</UL>

<P><STRONG><a name="[299]"></a>register_bits_modify</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, drv_sx1509.o(i.register_bits_modify))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = register_bits_modify &rArr; reg_get &rArr; nrf_drv_twi_tx &rArr; nrf_drv_twi_xfer &rArr; twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_tx
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_get
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_risefallcfgx_modify
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_pullup_modify
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_pulldown_modify
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_opendrain_modify
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_onoffcfgx_modify
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_misc_modify
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_leddriverenable_modify
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_inpbufdisable_modify
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_dir_modify
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_data_modify
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_clock_modify
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_sx1509_longslewrate_modify
</UL>

<P><STRONG><a name="[24a]"></a>reg_read</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, drv_hts221.o(i.reg_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_tx
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_rx
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_one_shot
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_humidity_get
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_calib_get
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_verify
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_temperature_get
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_status_get
</UL>

<P><STRONG><a name="[24c]"></a>reg_write</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, drv_hts221.o(i.reg_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = reg_write &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_tx
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_one_shot
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hts221_cfg_set
</UL>

<P><STRONG><a name="[46]"></a>gpiote_evt_handler</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, drv_humidity.o(i.gpiote_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = gpiote_evt_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drv_humidity.o(i.drv_humidity_enable)
</UL>
<P><STRONG><a name="[57]"></a>gpiote_evt_sceduled</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, drv_humidity.o(i.gpiote_evt_sceduled))
<BR>[Address Reference Count : 1]<UL><LI> drv_humidity.o(i.gpiote_evt_handler)
</UL>
<P><STRONG><a name="[314]"></a>diff_above_limit</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, sx150x_led_drv_calc.o(i.diff_above_limit))
<BR><BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx150x_led_drv_calc_convert
</UL>

<P><STRONG><a name="[47]"></a>m_audio_buffer_handler</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, drv_mic.o(i.m_audio_buffer_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = m_audio_buffer_handler &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drv_mic.o(i.drv_mic_init)
</UL>
<P><STRONG><a name="[5e]"></a>m_audio_process</STRONG> (Thumb, 66 bytes, Stack size 152 bytes, drv_mic.o(i.m_audio_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 752<LI>Call Chain = m_audio_process &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_exit
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_enter
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_audio_coder_encode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drv_mic.o(i.m_audio_buffer_handler)
</UL>
<P><STRONG><a name="[2fa]"></a>nrf_delay_us</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, inv_mpu.o(i.nrf_delay_us))
<BR><BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sensors
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_bypass
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_reset_fifo
</UL>

<P><STRONG><a name="[2f6]"></a>set_int_enable</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, inv_mpu.o(i.set_int_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = set_int_enable &rArr; drv_mpu9250_write &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mpu9250_write
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_dmp_state
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_configure_fifo
</UL>

<P><STRONG><a name="[5b]"></a>inv_db_load_func</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, data_builder.o(i.inv_db_load_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = inv_db_load_func &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_compass_bias_found
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_builder.o(i.inv_init_data_builder)
</UL>
<P><STRONG><a name="[5a]"></a>inv_db_save_func</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, data_builder.o(i.inv_db_save_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = inv_db_save_func &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_builder.o(i.inv_init_data_builder)
</UL>
<P><STRONG><a name="[5c]"></a>inv_generate_eMPL_outputs</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, empl_outputs.o(i.inv_generate_eMPL_outputs))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = inv_generate_eMPL_outputs &rArr; inv_get_quaternion_set &rArr; inv_q_mult
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_quaternion_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> empl_outputs.o(i.inv_start_eMPL_outputs)
</UL>
<P><STRONG><a name="[58]"></a>inv_start_eMPL_outputs</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, empl_outputs.o(i.inv_start_eMPL_outputs))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = inv_start_eMPL_outputs &rArr; inv_register_data_cb &rArr; _MLPrintLog &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_register_data_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> empl_outputs.o(i.inv_enable_eMPL_outputs)
</UL>
<P><STRONG><a name="[190]"></a>uuid_list_encode</STRONG> (Thumb, 356 bytes, Stack size 64 bytes, ble_advdata.o(i.uuid_list_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = uuid_list_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[1b4]"></a>conn_params_negotiation</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, ble_conn_params.o(i.conn_params_negotiation))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = conn_params_negotiation &rArr; app_timer_start &rArr; app_util_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_on_ble_evt
</UL>

<P><STRONG><a name="[40]"></a>update_timeout_handler</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, ble_conn_params.o(i.update_timeout_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = update_timeout_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_conn_params.o(i.ble_conn_params_init)
</UL>
<P><STRONG><a name="[30f]"></a>nrf_delay_us</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, nrf_drv_twi.o(i.nrf_delay_us))
<BR><BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_init
</UL>

<P><STRONG><a name="[169]"></a>twi_rx_start_transfer</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, nrf_drv_twi.o(i.twi_rx_start_transfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = twi_rx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_transfer
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_xfer
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0_IRQHandler
</UL>

<P><STRONG><a name="[168]"></a>twi_transfer</STRONG> (Thumb, 274 bytes, Stack size 24 bytes, nrf_drv_twi.o(i.twi_transfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = twi_transfer
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0_IRQHandler
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_tx_start_transfer
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_rx_start_transfer
</UL>

<P><STRONG><a name="[16a]"></a>twi_tx_start_transfer</STRONG> (Thumb, 212 bytes, Stack size 40 bytes, nrf_drv_twi.o(i.twi_tx_start_transfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = twi_tx_start_transfer &rArr; twi_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi_transfer
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_twi_xfer
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0_IRQHandler
</UL>

<P><STRONG><a name="[3c]"></a>detection_delay_timeout_handler</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, app_button.o(i.detection_delay_timeout_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = detection_delay_timeout_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_is_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_button.o(i.app_button_init)
</UL>
<P><STRONG><a name="[3b]"></a>gpiote_event_handler</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, app_button.o(i.gpiote_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = gpiote_event_handler &rArr; app_timer_start &rArr; app_util_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_is_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_button.o(i.app_button_init)
</UL>
<P><STRONG><a name="[19f]"></a>nrf_delay_us</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, app_timer.o(i.nrf_delay_us))
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_init
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler
</UL>

<P><STRONG><a name="[16b]"></a>timer_list_handler</STRONG> (Thumb, 728 bytes, Stack size 96 bytes, app_timer.o(i.timer_list_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = timer_list_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI0_EGU0_IRQHandler
</UL>

<P><STRONG><a name="[3d]"></a>app_timer_evt_get</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_timer_appsh.o(i.app_timer_evt_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = app_timer_evt_get &rArr; app_error_handler_bare &rArr; app_error_fault_handler &rArr; m_ui_led_set_event &rArr; led_set &rArr; drv_ext_light_off &rArr; m_ioext_cmd_process &rArr; m_ioext_color_select_cmd_send &rArr; m_ioext_led_drv_ctrl &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_timer_appsh.o(i.app_timer_evt_schedule)
</UL>
<P><STRONG><a name="[2ae]"></a>queue_process</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, fstorage.o(i.queue_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = queue_process
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_sys_event_handler
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_store
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_erase
</UL>

<P><STRONG><a name="[1]"></a>fs_event_handler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fds.o(i.fs_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = fs_event_handler &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fds.o(fs_data)
</UL>
<P><STRONG><a name="[2b2]"></a>gc_record_find_next</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, fds.o(i.gc_record_find_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gc_record_find_next &rArr; fs_store &rArr; queue_process
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_store
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
</UL>

<P><STRONG><a name="[2a1]"></a>op_enqueue</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, fds.o(i.op_enqueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = op_enqueue
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_init
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_gc
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_enqueue
</UL>

<P><STRONG><a name="[2a2]"></a>queue_process</STRONG> (Thumb, 1718 bytes, Stack size 56 bytes, fds.o(i.queue_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + In Cycle
<LI>Call Chain = queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_find_by_desc
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_find
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_record_find_next
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_store
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_init
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_gc
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_enqueue
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_event_handler
</UL>

<P><STRONG><a name="[2a8]"></a>record_find</STRONG> (Thumb, 350 bytes, Stack size 28 bytes, fds.o(i.record_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = record_find
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_find
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
</UL>

<P><STRONG><a name="[2a6]"></a>record_find_by_desc</STRONG> (Thumb, 336 bytes, Stack size 24 bytes, fds.o(i.record_find_by_desc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = record_find_by_desc
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_open
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_close
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
</UL>

<P><STRONG><a name="[2ab]"></a>write_enqueue</STRONG> (Thumb, 474 bytes, Stack size 72 bytes, fds.o(i.write_enqueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = write_enqueue &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;op_enqueue
</UL>
<BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_write
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_update
</UL>

<P><STRONG><a name="[87]"></a>dfu_settings_write_callback</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, nrf_dfu_settings.o(i.dfu_settings_write_callback))
<BR>[Address Reference Count : 2]<UL><LI> nrf_dfu_settings.o(i.nrf_dfu_settings_init)
<LI> nrf_dfu_settings.o(i.nrf_dfu_settings_write)
</UL>
<P><STRONG><a name="[2]"></a>fs_evt_handler</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, nrf_dfu_flash_buttonless.o(i.fs_evt_handler))
<BR>[Address Reference Count : 1]<UL><LI> nrf_dfu_flash_buttonless.o(fs_data)
</UL>
<P><STRONG><a name="[1e1]"></a>buf_prealloc</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, nrf_log_frontend.o(i.buf_prealloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = buf_prealloc &rArr; app_util_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_exit
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_enter
</UL>
<BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_log_frontend_std_1
</UL>

<P><STRONG><a name="[15f]"></a>_DoInit</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, segger_rtt.o(i._DoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _DoInit
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_7
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteString
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>

<P><STRONG><a name="[161]"></a>_WriteBlocking</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, segger_rtt.o(i._WriteBlocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
</UL>

<P><STRONG><a name="[167]"></a>_PrintUnsigned</STRONG> (Thumb, 230 bytes, Stack size 40 bytes, segger_rtt_printf.o(i._PrintUnsigned))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreChar
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
</UL>

<P><STRONG><a name="[166]"></a>_StoreChar</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, segger_rtt_printf.o(i._StoreChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintUnsigned
</UL>

<P><STRONG><a name="[42]"></a>drv_audio_pdm_event_handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, drv_audio_pdm.o(i.drv_audio_pdm_event_handler))
<BR>[Address Reference Count : 1]<UL><LI> drv_audio_pdm.o(i.drv_audio_init)
</UL>
<P><STRONG><a name="[94]"></a>inv_check_push</STRONG> (Thumb, 352 bytes, Stack size 72 bytes, accel_auto_cal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = inv_check_push &rArr; inv_set_accel_bias_mask &rArr; inv_apply_calibration &rArr; inv_convert_to_body_with_scale
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_accel_bias_found
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_linear_accel
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_gravity
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_accel_bias_mask
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_accel_accuracy
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_current_calibrated_accel
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove4
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_auto_calibrate
</UL>

<P><STRONG><a name="[9b]"></a>inv_check_coverage_set_bias</STRONG> (Thumb, 318 bytes, Stack size 40 bytes, accel_auto_cal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = inv_check_coverage_set_bias &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_auto_calibrate
</UL>

<P><STRONG><a name="[a0]"></a>inv_combine_data_calculate_bias</STRONG> (Thumb, 268 bytes, Stack size 24 bytes, accel_auto_cal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = inv_combine_data_calculate_bias &rArr; inv_compute_bias &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q30_mult
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_compute_bias
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_combine_compass_data
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_auto_calibrate
</UL>

<P><STRONG><a name="[b1]"></a>set_sample_rate</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, accel_auto_cal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = set_sample_rate &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_auto_calibrate
</UL>

<P><STRONG><a name="[ca]"></a>inv_check_peaks</STRONG> (Thumb, 486 bytes, Stack size 72 bytes, compass_vec_cal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = inv_check_peaks &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_compass_only_cal
</UL>

<P><STRONG><a name="[d7]"></a>inv_ignore_compass_data</STRONG> (Thumb, 252 bytes, Stack size 24 bytes, compass_vec_cal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = inv_ignore_compass_data &rArr; inv_add_compass_block_data &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_large_mag_field
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_compass_state
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_gyro_sum_of_sqr
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_add_compass_block_data
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_check_sample_balance
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_compass_only_cal
</UL>

<P><STRONG><a name="[db]"></a>inv_bias_stability</STRONG> (Thumb, 368 bytes, Stack size 120 bytes, compass_vec_cal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = inv_bias_stability &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_compass_only_cal
</UL>

<P><STRONG><a name="[e3]"></a>inv_set_peaks</STRONG> (Thumb, 86 bytes, Stack size 12 bytes, compass_vec_cal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = inv_set_peaks
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_compass_only_cal
</UL>

<P><STRONG><a name="[ea]"></a>inv_init_sensitivity_const</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, compass_vec_cal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = inv_init_sensitivity_const &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_vector_compass_cal
</UL>

<P><STRONG><a name="[fa]"></a>inv_reset_packet</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, fast_no_motion.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = inv_reset_packet &rArr; inv_init_maxmin
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_init_maxmin
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_fast_nomot
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_detect_motion_by_gyro_accel
</UL>

<P><STRONG><a name="[10c]"></a>inv_find_synchronized_compass_angle</STRONG> (Thumb, 172 bytes, Stack size 48 bytes, fusion_9axis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = inv_find_synchronized_compass_angle &rArr; inv_compass_angle &rArr; __hardfp_atan2f
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q_mult
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_compass_angle
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove4
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_perform_9x_fusion
</UL>

<P><STRONG><a name="[37]"></a>inv_gtc_load</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, gyro_tc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = inv_gtc_load &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gyro_tc.o(.text)
</UL>
<P><STRONG><a name="[36]"></a>inv_gtc_store</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, gyro_tc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = inv_gtc_store &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gyro_tc.o(.text)
</UL>
<P><STRONG><a name="[11d]"></a>inv_gtc_compute_slope</STRONG> (Thumb, 478 bytes, Stack size 104 bytes, gyro_tc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = inv_gtc_compute_slope &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_gtc_data_cb
</UL>

<P><STRONG><a name="[11e]"></a>inv_gtc_add_data</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, gyro_tc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = inv_gtc_add_data &rArr; __aeabi_memmove4
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove4
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_gtc_data_cb
</UL>

<P><STRONG><a name="[35]"></a>inv_gtc_data_cb</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, gyro_tc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = inv_gtc_data_cb &rArr; inv_gtc_compute_slope &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_motion_state
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_set_gyro_bias
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_gyro_bias_tc_set
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_gyro_bias
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_gtc_add_data
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_gtc_compute_slope
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gyro_tc.o(.text)
</UL>
<P><STRONG><a name="[13c]"></a>accel_fusion</STRONG> (Thumb, 458 bytes, Stack size 128 bytes, quaternion_supervisor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = accel_fusion &rArr; inv_q_norm4 &rArr; __hardfp_sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q_norm4
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q_multf
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q_invertf
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q_addf
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_accel_gyro_quaternion
</UL>

<P><STRONG><a name="[140]"></a>inv_compute_quat_from_accel</STRONG> (Thumb, 300 bytes, Stack size 48 bytes, quaternion_supervisor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = inv_compute_quat_from_accel &rArr; __hardfp_sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_accel_gyro_quaternion
</UL>

<P><STRONG><a name="[141]"></a>inv_normalize_quat</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, quaternion_supervisor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = inv_normalize_quat &rArr; __hardfp_sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_accel_gyro_quaternion
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_gyro_quaternion
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_process_dmp_quaternion
</UL>

<P><STRONG><a name="[144]"></a>inv_process_dmp_quaternion</STRONG> (Thumb, 438 bytes, Stack size 88 bytes, quaternion_supervisor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = inv_process_dmp_quaternion &rArr; __hardfp_sinf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q_mult
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_q_invert
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_convert_to_body_with_scale
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_get_gyro_bias
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_normalize_quat
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_accel_gyro_quaternion
</UL>

<P><STRONG><a name="[38]"></a>inv_generate_quaternion</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, quaternion_supervisor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = inv_generate_quaternion &rArr; inv_generate_accel_gyro_quaternion &rArr; accel_fusion &rArr; inv_q_norm4 &rArr; __hardfp_sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_store_gaming_quaternion
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_generate_accel_gyro_quaternion
</UL>
<BR>[Address Reference Count : 1]<UL><LI> quaternion_supervisor.o(.text)
</UL>
<P><STRONG><a name="[18b]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[171]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
</UL>

<P><STRONG><a name="[18d]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[18c]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[39]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0vsprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
